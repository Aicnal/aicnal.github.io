<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>八月末——梦</title>
      <link href="/2024/11/02/%E6%97%A5%E5%B8%B8/%E5%85%AB%E6%9C%88%E6%9C%AB%E2%80%94%E6%A2%A6/"/>
      <url>/2024/11/02/%E6%97%A5%E5%B8%B8/%E5%85%AB%E6%9C%88%E6%9C%AB%E2%80%94%E6%A2%A6/</url>
      
        <content type="html"><![CDATA[<h1 id="8月末——梦"><a href="#8月末——梦" class="headerlink" title="8月末——梦"></a>8月末——梦</h1><p>最近一直重复在做一个梦，关于导师、科研</p><p>虽然说我现在还和导师素未蒙面，但是这种焦虑和可怖无疑是真实的</p><p>近距离地接触到迷茫</p>]]></content>
      
      
      <categories>
          
          <category> 日常 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随想 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>冥冥之中注定的失败</title>
      <link href="/2024/10/21/%E6%B7%B1%E5%85%A5%E6%80%9D%E8%80%83/%E5%86%A5%E5%86%A5%E4%B9%8B%E4%B8%AD%E6%B3%A8%E5%AE%9A%E7%9A%84%E5%A4%B1%E8%B4%A5/"/>
      <url>/2024/10/21/%E6%B7%B1%E5%85%A5%E6%80%9D%E8%80%83/%E5%86%A5%E5%86%A5%E4%B9%8B%E4%B8%AD%E6%B3%A8%E5%AE%9A%E7%9A%84%E5%A4%B1%E8%B4%A5/</url>
      
        <content type="html"><![CDATA[<h1 id="冥冥之中注定的失败"><a href="#冥冥之中注定的失败" class="headerlink" title="冥冥之中注定的失败"></a>冥冥之中注定的失败</h1><p>虽然在白芷小姐的帮助下，我们的Dis似乎正在走向正轨：定制的勋章、限定的季节徽章、写好的宣传小册以及较为完备的宣传计划，但是我还是觉得这个项目注定是失败的，或者是很难成功变得热门的</p><h2 id="起航"><a href="#起航" class="headerlink" title="起航"></a>起航</h2><p>我曾不止一次说过最初的想法来自北大的BBS<strong>北大未名</strong>，之后是依赖于开源项目Discourse，参考了国内高校交大门。在刚开始的时候我们只考虑了相关的技术可行性，但是没有考虑到运维</p><p>拿<strong>北大未名</strong>来说吧，我刚开始看到的，觉得这是一个<strong>校园聚合</strong>平台，各种各样的学校官方部门，学生组织、社团等都能加入，发布信息</p><p><img src="https://img.duckk.org/2024/10/17c6a83b372fe62074b98059c76915cd.png"></p><p><img src="https://img.duckk.org/2024/10/d203e5d7e1bbba2ebdb2628a4c8acd29.png"></p><p><img src="https://img.duckk.org/2024/10/99fa695367c234d36237b26861432898.png"></p><p>受到认证的会带上和微博一样的<strong>V</strong>标，显然<strong>北大未名</strong>获得了官方的支持</p><p>至于交大门，给我的感觉就是更加偏向于CS，其实从发帖的编辑器就可以初见端倪，支持Markdown，一般来说如果没有经受过计算机或者数学训练的用到MD会比较少</p><p>交大门能够存活其实和其中存在很大一部分富有CS精神的同学有很大的关系，包括其中计算机图像学课程的入驻，帮助了该站的进一步发展，算是半官方的一个论坛</p><p><img src="https://img.duckk.org/2024/10/6abb58b6bbedb46535119c1177840790.png"></p><p><img src="https://img.duckk.org/2024/10/3895a877630199f100b6fed4f520b554.png"></p><p>虽然说交大门没有完全获得官方的认证，但是管理员是匿名的，这就意味着就算官方想要取缔或者强制关站是很困难的</p><p>交大门其中在建站早期遭受到DNS污染，最后还是存活了下来；但是如果管理员的身份被暴露，想必关站是迟早的事情</p><p>交大门的管理员本人也算是Discourse类论坛架构的狂热者，为该站的维护做出了不可磨灭的贡献</p><p>与其类似的还有瓜大萌，这也是一个基于Discourse的学生论坛，虽然说注册人数早破千人，但是这个站热度不高，在2024年后热度出现了断层式下降，在2023年4月推出了选课</p><p>具体原因不明，但是我感觉其实和管理层还是有关系的，我总结了一下学生论坛应该或者至少包含以下板块</p><ul><li>校园生活（树洞、表白墙）</li><li>学习&#x2F;选课（选课社区）</li><li>保研&#x2F;竞赛</li><li>内部推免</li></ul><p>至于另外一个水源社区，因为被官方收编了，没有办法一探究竟，因此就一概而论啦～</p><h2 id="The-End"><a href="#The-End" class="headerlink" title="The End"></a>The End</h2><p>为什么说我们“注定的失败”</p><p>第一，这个项目真正愿意花心思来运维的很少，建站容易维护难，在2024年8月份刚开始建站的时候我本人是一股热血，之后9月份宣传之后有大概20个人注册，之后我也没啥动力去维护</p><p>在10月国庆之后，我们决定去大肆宣传论坛，才继续将其进行“现代化改造”</p><p>技术上的困难往往是最容易克服的，大不了多熬几夜，但是zc上的不确定性才是最难搞的，这也是我即将阐述的第二点</p><p>因为学校本质上是不让搞这样的论坛的，我们刚开始是匿名搞，后来是假借电脑社的名义搞的，一旦热门起来引起学校的注意，就不仅仅是DNS污染这么简单了</p><p>第三点，我们没办法提供很优质的服务，在前面我说过：</p><blockquote><p>我总结了一下学生论坛应该或者至少包含以下板块</p><ul><li>校园生活（树洞、表白墙）</li><li>学习&#x2F;选课（选课社区）</li><li>保研&#x2F;竞赛</li><li>内部推免</li></ul></blockquote><p>事实上这些东西不能仅仅依赖于我或者管理组一个人的力量，我们很难搜集齐这么多的东西，可能我可以搜集生科的，其他人可以搜集计科的，那么其他的呢？</p><p>我觉得CNU是缺乏Geek精神的，虽然我们经常诟病表白墙的商业性，但是他们的互助选课文档确实是非常好的，给了很多人一些极具价值的选课意见</p><p>也许在未来我们也会加入选课专栏？也许在未来我们吸引一些研究生的加入，去优化一些推免等等其他信息？</p><p>第四点，来自于Discourse本身，尽管它很优秀，但是它不适合纯文科类或者艺术类的同学</p><p>这个观点来自于我看我朋友注册和发帖，感觉和主流的一些软件，比如说微信、QQ或者贴吧相比，大家对于这种Web的接受度不是很高，在未经提醒的情况下发帖甚至都成为了问题</p><p>当然这个问题也有可能是我们的指引做的不够好，或者是极特殊的个例，在未来我们可能会对其进行优化或者写专门的教程</p><p>第五点，用户的心理，很多人可能上上论坛看看，看看大家发了些什么帖子，但是自己不发帖子。这样大家你不发，我不发，没有新鲜的信息注入，大家愿意刷的欲望就降低了，在未来我们应该要去鼓励用户发帖</p><p>在这一点，梨梨花同学其实给了很多建议，比如说建立一些比较详细的分区，让大家知道哪里可以找到自己的一方天地。另外要采取一些比较有效的奖励措施，鼓励用户发帖，比如说新设计的季节勋章等等</p><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>写的有点累了，在此停笔吧，我尽力维护下去，不管最后结果是什么，我觉得这都是值得写入我人生简历中的一部分</p>]]></content>
      
      
      <categories>
          
          <category> 深入思考 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随想 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>家人平安便是我最大的愿望</title>
      <link href="/2024/10/17/%E6%97%A5%E5%B8%B8/%E5%AE%B6%E4%BA%BA%E5%B9%B3%E5%AE%89%E4%BE%BF%E6%98%AF%E6%88%91%E6%9C%80%E5%A4%A7%E7%9A%84%E6%84%BF%E6%9C%9B/"/>
      <url>/2024/10/17/%E6%97%A5%E5%B8%B8/%E5%AE%B6%E4%BA%BA%E5%B9%B3%E5%AE%89%E4%BE%BF%E6%98%AF%E6%88%91%E6%9C%80%E5%A4%A7%E7%9A%84%E6%84%BF%E6%9C%9B/</url>
      
        <content type="html"><![CDATA[<h1 id="家人平安便是我最大的愿望"><a href="#家人平安便是我最大的愿望" class="headerlink" title="家人平安便是我最大的愿望"></a>家人平安便是我最大的愿望</h1><p>写作业的时候突然想起去年的这个时候，我的一个朋友母亲脑溢血突发住院，她给我发微信语音，撕心裂肺的画面</p><p>最近其实一直都很迷茫，不知道自己该做什么，自己期待什么</p><p>想到这里，我突然觉得我自己最期待的应该是家人健健康康陪在我身边，哪怕是平平淡淡，也是一种幸福</p>]]></content>
      
      
      <categories>
          
          <category> 随想 </category>
          
          <category> 日常 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随想 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>梦境是现实的延伸</title>
      <link href="/2024/10/17/%E6%97%A5%E5%B8%B8/%E6%A2%A6%E5%A2%83%E6%98%AF%E7%8E%B0%E5%AE%9E%E7%9A%84%E5%BB%B6%E4%BC%B8/"/>
      <url>/2024/10/17/%E6%97%A5%E5%B8%B8/%E6%A2%A6%E5%A2%83%E6%98%AF%E7%8E%B0%E5%AE%9E%E7%9A%84%E5%BB%B6%E4%BC%B8/</url>
      
        <content type="html"><![CDATA[<h1 id="梦境是现实的延伸"><a href="#梦境是现实的延伸" class="headerlink" title="梦境是现实的延伸"></a>梦境是现实的延伸</h1><p>从小我就爱做梦，做了大大小小的梦，当我一一将这些梦境分享给别人的时候，他们总会说：</p><blockquote><p>“你做的梦好有逻辑！”</p></blockquote><p>后来我自己转念一想，好像确实是这个逻辑，在梦里我碰到的人，事情，有很多都是在现实生活中出现过的</p><p>今天下午在长达两个半小时的午睡的过程中，我又开启了一场“探险”</p><p>我梦到自己似乎回到了民国时期，自己变身成为了一名战士，和敌人做斗争，里面的剧情和场景似乎和之前看到的谍战片电视剧有点类似，由于梦境过于真实，当我醒过来的时候感觉自己出了一身冷汗</p><p>之前有科学家说，人会做梦是因为大脑在整理记忆碎片，可是我已经很久没有看过谍战片啦，或许是之前很久的记忆被大脑翻出来啦？</p><p>做梦其实是不舒服的，每次做梦醒过来都会感觉好累好累，相反那种“婴儿香”的睡眠才更加舒服</p><p>可是我还是喜欢做梦，我觉得梦是我想象力的体现，在梦里我能体会到各种各样不一样的体会和滋味</p>]]></content>
      
      
      <categories>
          
          <category> 日常 </category>
          
          <category> 随想 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 闲聊 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>再失眠</title>
      <link href="/2024/10/13/%E6%97%A5%E5%B8%B8/%E5%86%8D%E5%A4%B1%E7%9C%A0/"/>
      <url>/2024/10/13/%E6%97%A5%E5%B8%B8/%E5%86%8D%E5%A4%B1%E7%9C%A0/</url>
      
        <content type="html"><![CDATA[<h1 id="再失眠"><a href="#再失眠" class="headerlink" title="再失眠"></a>再失眠</h1><p>失眠又再一次席卷而来，很难说是因为舍友的呼噜声还是我自己的原因，最近都处在困意和清醒的边缘之间</p><p>事实上来大学之后我就很少睡过特别踏实的觉，早上睡到八九点，然后下午继续睡</p><p>想写很多很多，但是每一次又刚提笔又搁下</p><p>转专业后的路途显然也不是一帆风顺的，化学比我想的要更难，越来越感觉自己脑子不好用了，尤其是对公式不敏感——其实一直都是这样</p><p>我其实一直觉得自己是一个物质欲比较低的人，可是每次看到钱包空空，又想买自己想要的东西会很焦虑</p><p>虽然说应该安慰自己未来的路尚且未来，可是有些焦虑是不可避免的，是必须要考虑的问题</p><p>熬夜容易饿，干了三个香蕉</p><p>看看书吧，总感觉自己词不达意</p>]]></content>
      
      
      <categories>
          
          <category> 日常 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随想 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>服务器备份方案</title>
      <link href="/2024/10/08/Tech/%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%A4%87%E4%BB%BD%E6%96%B9%E6%A1%88/"/>
      <url>/2024/10/08/Tech/%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%A4%87%E4%BB%BD%E6%96%B9%E6%A1%88/</url>
      
        <content type="html"><![CDATA[<h1 id="服务器备份方案"><a href="#服务器备份方案" class="headerlink" title="服务器备份方案"></a>服务器备份方案</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在我们实际的生产环境中，由于云服务存在很多的不稳定性，因此对服务器进行定时备份就很有必要了。</p><p>虽然部分服务器厂商提供了快照备份的功能，但是有些是要去收费的，对于我们这些个人用户并不是十分友好，在参考了众多论坛大佬的方案后，我总结出了一套基于<strong>Duplicati+Alist+阿里云盘</strong>的备份方案</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="Alist"><a href="#Alist" class="headerlink" title="Alist"></a>Alist</h3><p>Alist官方提供了多种安装方式，在这里我直接使用<a href="https://alist.nn.ci/zh/guide/install/script.html">一键脚本</a>进行安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://alist.nn.ci/zh/guide/install/script.html</span><br></pre></td></tr></table></figure><p>安装完成之后进入到Alist到web界面，我们开始挂载阿里云盘</p><p>阿里云盘官方对Alist对支持非常好，具体挂载方式可以参考：</p><p><a href="https://alist.nn.ci/zh/guide/drivers/aliyundrive_open.html">阿里云盘 Open</a></p><p>值得注意的是，如果你使用的也是北京阿里云的ecs，你可以在Alist的编辑界面中开启<strong>内部上传</strong>，这样的话走的就是阿里云的内网流量，带宽会快一点</p><p><img src="https://s2.loli.net/2024/10/08/n7SNs8I5UQ1grZo.png"></p><p>之后我们需要确定webdev的挂载路径：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> /mnt/webdev</span><br></pre></td></tr></table></figure><p>之后对于具体的挂载方式，请参考：</p><p><a href="https://github.com/alist-org/alist/discussions/5470">Ubuntu系统挂载Alist网盘 WebDav服务完全指南</a></p><h3 id="Duplicati"><a href="#Duplicati" class="headerlink" title="Duplicati"></a>Duplicati</h3><p>Duplicati的安装支持使用Docker，在这里我们直接使用docker-compose进行部署</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">version: &#x27;3.8&#x27;</span><br><span class="line"></span><br><span class="line">services:</span><br><span class="line">  backup:</span><br><span class="line">    image: lscr.io/linuxserver/duplicati:latest</span><br><span class="line">    environment:</span><br><span class="line">      - PUID=0</span><br><span class="line">      - PGID=0</span><br><span class="line">      - TZ=Asia/Shanghai</span><br><span class="line">    ports:</span><br><span class="line">      - 8200:8200</span><br><span class="line">    volumes:</span><br><span class="line">      - /root:/source/root  # 挂载整个 /root 目录</span><br><span class="line">      - /etc:/source/etc    # 挂载整个 /etc 目录</span><br><span class="line">      - ./duplicati/config:/config  # 挂载配置文件目录</span><br><span class="line">      - ./duplicati/backups:/backups  # 挂载备份文件目录</span><br><span class="line">      - /mnt/webdav:/backups_webdav</span><br><span class="line">    restart: unless-stopped</span><br></pre></td></tr></table></figure><p>在<code>/source/</code>这里你可以更改你自己所需要备份的路径</p><p>之后启动：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker compose up -d</span><br></pre></td></tr></table></figure><p>等待安装完成，进入web界面：<code>http://IP:8200</code></p><h2 id="备份设置"><a href="#备份设置" class="headerlink" title="备份设置"></a>备份设置</h2><p>进入web之后我们需要做的第一件事情就是设定密码！！！</p><p>首先进入到设置，然后输入密码，点左边的小方块，最后划到最下面进行确认，之后会要求你进行重新登陆，输入密码</p><p><img src="https://s2.loli.net/2024/10/08/ZuoDTqnhSkxswia.png"></p><p>之后我们就可以正式开始备份了：</p><p><img src="https://s2.loli.net/2024/10/08/AB31mZ68c4oURsq.png"></p><p>选择一个名字，这里我推荐你选择一个密码，请牢记</p><p><img src="https://s2.loli.net/2024/10/08/gKdSj4plLnTVfbv.png"></p><p>这里的路径选择之前我们在docker-compose中挂载的路径：<code>backups_webdev</code></p><p><img src="https://s2.loli.net/2024/10/08/xrc32IpE9fUPKZi.png"></p><p>之后点击“下一步”，我们选择“计算机”，之后选择“source”</p><p><img src="https://s2.loli.net/2024/10/08/cvbRleIWtsSKfMi.png"></p><p><img src="https://s2.loli.net/2024/10/08/LXAlsViqp6JvySN.png"></p><p>选择“下一步”，之后选择同步周期：</p><p><img src="https://s2.loli.net/2024/10/08/439G27JTZmwuLjs.png"></p><p>之后再点击“下一步”，在这里我建议你使用“智能备份保留策略”，这样的话比较古早的备份就会自动被删除，减少云盘的占用</p><p><img src="https://s2.loli.net/2024/10/08/UZWhKXbLPVMIgaT.png"></p><p>点击“保持”即可结束配置，回到主页，点击“立即允许”，之后即可查看是否备份成功</p><p><img src="https://s2.loli.net/2024/10/08/DEQAiTb6H7wgq1n.png"></p><p>备份成功之后在Alist中的对应文件夹中也可以找到文件的身影</p><p><img src="https://s2.loli.net/2024/10/08/EH2gwOnbFljTaWp.png"></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>就这样，一个增量式服务器备份就水灵灵得的部署好了</p><p>当然你也可以使用其他的存储云盘，比如说onedrive，google drive等等（当然前提是你的网络环境允许你这样做</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 技术 </tag>
            
            <tag> 网站 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Day2 内蒙古之旅——海拉尔国家森林公园</title>
      <link href="/2024/10/04/%E6%97%85%E8%A1%8C%E6%97%A5%E8%AE%B0/Day2%20%E5%86%85%E8%92%99%E5%8F%A4%E4%B9%8B%E6%97%85%E2%80%94%E2%80%94%E6%B5%B7%E6%8B%89%E5%B0%94%E5%9B%BD%E5%AE%B6%E6%A3%AE%E6%9E%97%E5%85%AC%E5%9B%AD/"/>
      <url>/2024/10/04/%E6%97%85%E8%A1%8C%E6%97%A5%E8%AE%B0/Day2%20%E5%86%85%E8%92%99%E5%8F%A4%E4%B9%8B%E6%97%85%E2%80%94%E2%80%94%E6%B5%B7%E6%8B%89%E5%B0%94%E5%9B%BD%E5%AE%B6%E6%A3%AE%E6%9E%97%E5%85%AC%E5%9B%AD/</url>
      
        <content type="html"><![CDATA[<h1 id="Day2-内蒙古之旅——海拉尔国家森林公园"><a href="#Day2-内蒙古之旅——海拉尔国家森林公园" class="headerlink" title="Day2 内蒙古之旅——海拉尔国家森林公园"></a>Day2 内蒙古之旅——海拉尔国家森林公园</h1><p>由于我们昨天去了大草原，睡得太死，导致起太晚，简单点完外卖吃完就已经中午十一点了，因此第二天的行程我们安排了前往海拉尔森林公园，这个离市区相对比较近的景点</p><h2 id="行程"><a href="#行程" class="headerlink" title="行程"></a>行程</h2><p>本节我不是想写很多，因为确实没有很多好玩的地方，更多的是亲近自然，感受一下大城市里面没有的宁静，带大家看看秋天的森林公园是什么样子的（其实就是懒</p><p>海拉尔国家森林公园是需要门票的，可以购买学生票，价格为15元，这张票包括后面看鸟的票，非常值</p><p><img src="https://img.duckk.org/2024/11/514b7e6c9b1a976919cc30626b6a3b4b.webp"></p><p><img src="https://img.duckk.org/2024/11/cbb195467e08a2869535429d2d075b18.avif"></p><p><img src="https://img.duckk.org/2024/11/13e2e672b06c88743bad05ecf30c2f92.webp"></p><p><img src="https://img.duckk.org/2024/11/f2d8ce4cbd6b223a184d1addc61e5b6f.avif"></p><p><img src="https://img.duckk.org/2024/11/2963355ef1d4ec1ab338243325d31f2b.avif"></p><p><img src="https://img.duckk.org/2024/11/73f8ebc5a7e97ac94602a9597e0ffc1b.avif"></p><p><img src="https://img.duckk.org/2024/11/2769a151c2f81520e42f96945eee2a33.avif"></p><p><img src="https://img.duckk.org/2024/11/22424f8d3bd9e3d8de710576ccb81308.avif"></p><p><img src="https://img.duckk.org/2024/11/7bac8586fa9dac85680a07d6d1f167a9.avif"></p><p><img src="https://img.duckk.org/2024/11/db6ad964288f7b853c703a47dd53cfcd.avif"></p>]]></content>
      
      
      <categories>
          
          <category> 旅行日记 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Day0 内蒙古之旅——出发！</title>
      <link href="/2024/10/03/%E6%97%85%E8%A1%8C%E6%97%A5%E8%AE%B0/Day0%20%E5%86%85%E8%92%99%E5%8F%A4%E4%B9%8B%E6%97%85%E2%80%94%E2%80%94%E5%87%BA%E5%8F%91%EF%BC%81/"/>
      <url>/2024/10/03/%E6%97%85%E8%A1%8C%E6%97%A5%E8%AE%B0/Day0%20%E5%86%85%E8%92%99%E5%8F%A4%E4%B9%8B%E6%97%85%E2%80%94%E2%80%94%E5%87%BA%E5%8F%91%EF%BC%81/</url>
      
        <content type="html"><![CDATA[<h1 id="Day0-内蒙古之旅——出发！"><a href="#Day0-内蒙古之旅——出发！" class="headerlink" title="Day0 内蒙古之旅——出发！"></a>Day0 内蒙古之旅——出发！</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在今年国庆期间，我和一位朋友来到了海拉尔</p><p>我是从北京出发，乘坐K1301次列车，坐了大概28个小时</p><p><img src="https://img.duckk.org/2024/11/64b18157c2844949e1874854dd5382fa.avif"></p><p>路上穿过河北、辽宁、吉林、黑龙江，欣赏了很多别样的风景，列车员阿姨很有意思，我喜欢喊她姨，她特别热情</p><p><img src="https://img.duckk.org/2024/11/06213617f2d3846727339b748b8ebb22.avif"></p><h2 id="夜晚"><a href="#夜晚" class="headerlink" title="夜晚"></a>夜晚</h2><p>到达酒店办好入住之后我们到外面吃了小火锅，肉确实挺多，回来路上我们顺带走了走，就看到下面的风景：</p><p><img src="https://img.duckk.org/2024/11/883b23b3ecbfc641f9cae0b54655de46.avif"></p><p><img src="https://img.duckk.org/2024/11/0926e813a80612815d70a64a740f8aaf.avif"></p>]]></content>
      
      
      <categories>
          
          <category> 旅行日记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 旅行 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Day1 内蒙古之旅——呼伦贝尔大草原特辑</title>
      <link href="/2024/10/03/%E6%97%85%E8%A1%8C%E6%97%A5%E8%AE%B0/Day1%20%E5%86%85%E8%92%99%E5%8F%A4%E4%B9%8B%E6%97%85%E2%80%94%E2%80%94%E5%91%BC%E4%BC%A6%E8%B4%9D%E5%B0%94%E5%A4%A7%E8%8D%89%E5%8E%9F%E7%89%B9%E8%BE%91/"/>
      <url>/2024/10/03/%E6%97%85%E8%A1%8C%E6%97%A5%E8%AE%B0/Day1%20%E5%86%85%E8%92%99%E5%8F%A4%E4%B9%8B%E6%97%85%E2%80%94%E2%80%94%E5%91%BC%E4%BC%A6%E8%B4%9D%E5%B0%94%E5%A4%A7%E8%8D%89%E5%8E%9F%E7%89%B9%E8%BE%91/</url>
      
        <content type="html"><![CDATA[<h1 id="Day1-内蒙古之旅——呼伦贝尔大草原特辑"><a href="#Day1-内蒙古之旅——呼伦贝尔大草原特辑" class="headerlink" title="Day1 内蒙古之旅——呼伦贝尔大草原特辑"></a>Day1 内蒙古之旅——呼伦贝尔大草原特辑</h1><h2 id="出行"><a href="#出行" class="headerlink" title="出行"></a>出行</h2><p>我们住的酒店在海拉尔市区，离呼伦贝尔景点大概有25公里。在从海拉尔火车站到酒店的过程中我们其实就已经问过出租车师傅了，他告诉我们想去呼伦贝尔草原只有两种办法——租车自驾或者组团去，打车太贵了（这里埋个伏笔</p><p><del>还是感慨一下居然没有往返市区和景点的公交</del></p><p>自驾我不是很敢开车，组团我们觉得不是很自由，而且来之前我们酒店就已经定好了，我们不想改变原来的行程，当时我有一种我们可能去不了了的感觉</p><p>事情的转机发生在我们到海拉尔的第二天早上</p><p>当时我们去到了当地的一家比较有特色的早餐店，人比较多，我们和另外两个广西的老哥拼了桌。在等餐的过程中，他先问我们准备去哪里，原本我们准备去海拉尔国家森林公园，然后老哥就说他们准备去大草原，我又问他们准备怎么去，他就告诉我他们租了个车，自己开车去</p><p><img src="https://img.duckk.org/2024/11/a5fc60ae7200a2051c137add407292e0.webp" alt="内蒙非常有特色的奶茶"></p><p>这时候我们来兴趣了，我就问能不能搭他们的顺风车，然后和他们一起AA车费，结果出乎意料的是老哥欣然答应了，但是只能带我们去，他们要去另外的地方</p><p>这时候我还是有点犹豫的，类似于“有去无回”，但是我想如果这时候不去可能之后就没机会去了，便和我另外一个小伙伴决定去，回来的事情之后再说！</p><p>我们就这样开启了我们呼伦贝尔的行程</p><p><img src="https://img.duckk.org/2024/11/86d7a7071c41662eb840606602ac8768.png"></p><h2 id="旅途"><a href="#旅途" class="headerlink" title="旅途"></a>旅途</h2><p>路上我们是一路按着导航走（应该也只有一条路，大概半个小时左右就到达了游客中心，下图应该是当地的火电厂，同时路上还可以看到露天煤矿和各种各有的半挂车，感觉矿产资源还挺丰富的</p><p><img src="https://img.duckk.org/2024/11/7393b91760939faac6496e31b5d6f5f1.webp"></p><h3 id="进入大草原"><a href="#进入大草原" class="headerlink" title="进入大草原"></a>进入大草原</h3><p>到了游客中心之后需要进行换乘，只能使用官方的摆渡车在各个景点之间往返，摆渡车的价格为一人40元，似乎没有学生票优惠</p><p>大巴很正规，每个人都有自己的位置，而且发车发得很勤，基本上等五分钟就会有车过来</p><p><img src="https://img.duckk.org/2024/11/524b0f15b33fbe70598ad2cdaae9b181.webp"></p><h2 id="景点推荐"><a href="#景点推荐" class="headerlink" title="景点推荐"></a>景点推荐</h2><p>跟着大巴车走，一路上有很多小景点，不过我们没有选择去全部地点，只去了第一驿站和最后一站，其实中途有很多其他的景点，比如说骑马或者坐滑翔机之类的，不过我们不是很感兴趣就跳过了</p><p>当然如果你中途下车了是可以等下一班车继续的（只要车没坐满</p><h3 id="莫日格勒河"><a href="#莫日格勒河" class="headerlink" title="莫日格勒河"></a>莫日格勒河</h3><p>这一站其实是终点站，当时因为我朋友睡着了，我们就直接先坐到了终点站，莫日格勒河是这里主要的观景点</p><p>在这里可以直接登山观景台～</p><p><img src="https://img.duckk.org/2024/11/168ad88a46528eac3ee12e9c25ee5ee8.webp"></p><p>我们是从右边的入口进去的，之后会从左边的通道出来（跟着人流走就ok</p><p>路上走的时候，往右边看是大草甸</p><p><img src="https://img.duckk.org/2024/11/48f999e6ef088bc649de156d4478743d.avif"></p><p>登上去之后就可以看到莫日格勒河啦，像肠子一样弯弯曲曲，<del>想起了高中地理的试题</del></p><p><img src="https://img.juniortree.com/202410032231965.webp"></p><p>下面这一张我不确定是不是在顶上拍的，不过景色应该比较类似</p><p><img src="https://img.duckk.org/2024/11/e62bc0e875e79f4ebb62b99fc2dd7d4e.avif"></p><p>上面风其实还挺大的，建议多穿点，整一件冲锋衣其实很不错</p><p>嘿嘿嘿，朋友尼康给我拍的，感觉还不错</p><p><img src="https://img.duckk.org/2024/11/68389c320f6fa70f52ff04119b0e4230.avif"></p><p>你要是仔细观察会发现两边草不太一样，一边比较高，一边比较矮，尤其是秋天草黄了之后其实还挺好看的</p><p><img src="https://img.duckk.org/2024/11/c38b2ace9fc647d45d1a756669e97c13.avif"></p><p>下图的左边就是我们上来的路，相对靠右的就是回去的路，下面是一个换乘站，也是呼伦贝尔大草原的摆渡车终点站</p><p><img src="https://img.duckk.org/2024/11/70d4edf8c52b95f1c78e97300fb1a3f1.avif"></p><h3 id="坐车中"><a href="#坐车中" class="headerlink" title="坐车中"></a>坐车中</h3><p>车很颠簸，路很小，单车道乡道</p><p><img src="https://img.duckk.org/2024/11/f3b18d768aefc66a53da661a249fbceb.avif"></p><p>在坐车途中我拍到一张特别特别特别特别喜欢的照片，相机显示屏上面显示的效果非常非常非常好，但是拿出电脑开始预览就歇菜了，没对上焦，我懊恼了很久，基本构图还是很漂亮的，光影也很漂亮</p><p><img src="https://img.duckk.org/2024/11/a26a5feaf36e5635176339696fe0b3ca.avif"></p><p>有机会还是建议大家多看看窗外，还是很有意思的，尤其是看到外面无边无际的草原，对于我这种从小生活在南方丘陵小城的孩子来说还是很震撼的</p><h3 id="一号驿站"><a href="#一号驿站" class="headerlink" title="一号驿站"></a>一号驿站</h3><p>如果说莫日格勒河只能远远的看的话，那么一号驿站就是一个能切身体会大草原的地方</p><p>下车之后，驿站的本体其实就是个买东西的小店，真正的看头在房子的对面，对面有牧民给护栏开了个口子，每个人交20块钱就可以进去，还拴了两头比较小的羊咩咩，还有一些草垛提供给游客拍照</p><p>下图居中的部分就是一号驿站，密密麻麻的人就是交钱撸羊和拍照的游客</p><p><img src="https://img.duckk.org/2024/11/07697fc38254d260d47c45ac83555407.avif"></p><p>进入之后才是我心中正在草原应该有的样子，非常非常非常非常自由</p><p><img src="https://img.duckk.org/2024/11/14f620fbb8e1cae9c50685f1c1ab5ac3.avif"></p><p><img src="https://img.duckk.org/2024/11/5a587f089ab6b9265b718de9c06c0132.avif"></p><p><img src="https://img.duckk.org/2024/11/986a099f8d7157a7cc15653318762147.avif"></p><p><img src="https://img.duckk.org/2024/11/d1d600e8c01c4ad6de9ec0d00d09e7b7.avif"></p><h2 id="返程"><a href="#返程" class="headerlink" title="返程"></a>返程</h2><p>之前说了散客只能跟本地团或者自己租车，广西老哥他们由于目的地和我们不太一样，因此半路先走了，我们只能自己想办法回去</p><p>我们打算回市区的时候大概已经三点快四点了</p><p>后来运气还挺好，我们在高德上打到了回程车，师傅和我们说他刚好送一群小伙子从市区过来</p><p>不得不说内蒙古老乡真的热情，一路上我们问师傅有啥好吃的，他一个劲给我们推荐，给我们介绍去哪里玩</p><p>至于价格师傅是打表的（是高德上打的正经出租车，从景点到市区大概25公里，花了刚好80块，平时这段国道是要收费的，因为我没打过这么远的，因此价格只供参考</p>]]></content>
      
      
      <categories>
          
          <category> 旅行日记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 旅行 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>分子进化的主要研究内容</title>
      <link href="/2024/10/01/Note/%E5%88%86%E5%AD%90%E8%BF%9B%E5%8C%96%E7%9A%84%E4%B8%BB%E8%A6%81%E7%A0%94%E7%A9%B6%E5%86%85%E5%AE%B9/"/>
      <url>/2024/10/01/Note/%E5%88%86%E5%AD%90%E8%BF%9B%E5%8C%96%E7%9A%84%E4%B8%BB%E8%A6%81%E7%A0%94%E7%A9%B6%E5%86%85%E5%AE%B9/</url>
      
        <content type="html"><![CDATA[<h1 id="分子进化的主要研究内容"><a href="#分子进化的主要研究内容" class="headerlink" title="分子进化的主要研究内容"></a>分子进化的主要研究内容</h1><h2 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h2><p>为什么我会想着专门把这个放出来呢？因为是去年在学习生信的过程中碰到了很多名词，比如说“保守”、“同源”、“进化树”等等。虽然在维基上可以查到很详尽的解释，但是这些知识仍然很难成为体系，之间很难产生联系</p><p>在进化生物学的课程上刚好讲到了这些，我觉得还是很有必要进行总结，对日后生信分析的思路和算法优化还是很有帮助的</p><p>但显然将这些知识完全体系化还是存在难度的，不过没关系——就从现在满满开始吧</p><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><ol><li>经典进化和分子进化的区别<ol><li>经典进化：表型</li><li>DNA、RNA、蛋白质分子</li></ol></li><li>分子进化的一些术语<ol><li>一致性（identity）：两个序列中完全相同的部分（保守）</li><li>相似性（similarity）：特征相像，但是来源不明确（理化性质相似，对蛋白质性质影响不大）</li><li>同源性：来自于同一个祖先</li><li>如果两个基因或蛋白质的序列一致性或相似性很高<ol><li>DNA的一致性60%以上</li><li>氨基酸的一致性30%以上</li><li>它们具有相同或相似的生物学功能</li><li>同源<ol><li>直系同源：随着新物种的产生而产生的同源基因（纵向）</li><li>并系同源：由基因的重复而产生的同源基因（横向）</li></ol></li></ol></li></ol></li><li>分子演化速率的计算<ol><li>蛋白质（氨基酸）水平的演化速率<ol><li>必须有两个或两个以上的同源序列，氨基酸代替速率是相对的</li><li>每个氨基酸就是一个位点，空位不算</li></ol></li><li>分化的时间越短，差异越小</li><li>分子钟（匀速演化</li></ol></li></ol>]]></content>
      
      
      <categories>
          
          <category> Note </category>
          
          <category> 生物学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 进化生物学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>碎碎念</title>
      <link href="/2024/10/01/%E6%97%A5%E5%B8%B8/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"/>
      <url>/2024/10/01/%E6%97%A5%E5%B8%B8/%E7%A2%8E%E7%A2%8E%E5%BF%B5/</url>
      
        <content type="html"><![CDATA[<h1 id="碎碎念"><a href="#碎碎念" class="headerlink" title="碎碎念"></a>碎碎念</h1><p>今天是国庆节，先祝祖国75岁生日快乐</p><p>不出意外的话我又失眠了，在这几天里我几乎都是每天凌晨两点多钟才睡着，然后七八点醒过来，之后等课上完或者下午继续睡觉</p><p>说实话对于这种模式其实我个人并不会感到特别痛苦——除了晚上睡不着的时候会很不舒服，但其实这种睡不着有多方面的原因，其实我个人感觉舍友的呼噜是其中占比算小的部分</p><p>我其实觉得我把手机带上床至少得背一半的锅，偷偷摸摸搞手艺活反而对睡眠造成了一些不好的效果。宿舍的床也是我睡不好的重要原因之一——我来北京几乎没有睡过很好的觉，宿舍的床又小又硬，忽然觉得舅舅家的软床很有安全感，尤其是枕头，我整个人几乎可以完全被包裹进去</p><p>在高中的时候其实我就有过一些入睡困难的“症状”，经常半夜辗转反侧，等到天亮鸡鸣的时候自己又醒过来，尤其是在考试前这种状况尤为明显，基本上我只要考试前一晚没睡好那么这次考试就基本寄了（也算是一种很另类的心理暗示</p><p>与夜晚的睡眠恰恰相反的是，我在白天的睡眠出奇的好，不管是回笼觉还是下午的午睡。如果算上白天的睡眠，那么我的总睡眠时长能达到七八个小时（其实也算是正常了</p><p>我其实还是有点担心自己的身体状况的，还是想多活几年好好感受一下世界的温情<del>我甚至还没对象</del></p><p>我其实感觉有一种很舒服的状态就是和一群志同道合的朋友一起讨论自己感兴趣的东西——这种感觉我其实很久没有找到了，在CS Group中确实找到了些感觉</p><p>说起感情我反而更加觉得这是一种很抽象的东西了，感情永远都应该是“双行道”，一方殷勤的付出往往会以一方的“失望”而结束。我忽然觉得其实是我把自己放错了位置，当很好的朋友其实挺好的，至少能一直陪在她身边，和其他朋友的关系也能理清</p>]]></content>
      
      
      <categories>
          
          <category> 日常 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随想 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>进化生物学</title>
      <link href="/2024/09/29/Note/%E8%BF%9B%E5%8C%96%E7%94%9F%E7%89%A9%E5%AD%A6/"/>
      <url>/2024/09/29/Note/%E8%BF%9B%E5%8C%96%E7%94%9F%E7%89%A9%E5%AD%A6/</url>
      
        <content type="html"><![CDATA[<h1 id="进化生物学"><a href="#进化生物学" class="headerlink" title="进化生物学"></a>进化生物学</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>进化（演化）生物学的学习已经快过半了，目前笔记已经上传到notion中：<br><a href="https://juniortree.notion.site/Evolutionary-Biology-98aaa4423ec3454f9a0aaf2ec17c6140">《生物进化学》(Evolutionary Biology)</a><br>这门课的深度还是存在的，但在我看来，其中最核心的其实可能在于对进化这个动词的理解，这其中也有我个人对于人类这个种群的一些思考</p><h2 id="什么是进化？"><a href="#什么是进化？" class="headerlink" title="什么是进化？"></a>什么是进化？</h2><p>可能在很多不进行系统生物学学习的人看来，进化给人一种“先进”的意思，从“低等”再到高等。但其实“进化”这个词——“Evolutionary”翻译为“演化”可能更为恰当，它是从种群的角度看待物种的产生、发展和衰退的这样一个过程</p><p>人类总喜欢赋予“进化”以意识形态，比如说我们人比所谓“草履虫”等原核生物更加“高级”，但实际上这种说法是不正确的，不客观的。</p><p>我认为以“演化”为动词可能更加准确，也避免了人们产生误解</p><h2 id="进化生物学的发展"><a href="#进化生物学的发展" class="headerlink" title="进化生物学的发展"></a>进化生物学的发展</h2><p>实际上在达尔文之前已经有很多科学家都在探讨“进化”这个话题，比如说柏拉图、亚里士多德等等学者，但他们所提出的观点大多都不完整，依靠或者借助“上帝”来试图解释人的形成</p><p>第一位系统提出进化理论的人是拉马克，他代表了18世纪进化生物学的巅峰。在高中的时候我们其实学过拉马克学说，当时他的“用进废退”观点经常出现在选择题中，作为错误选项出现</p><p>但是在近代越来越多的学者开始意识到拉马克学说的重要性，或者更准确地说是意识到其内核，比如说基因或者基因启动子的甲基化现象——表观遗传，在不改变遗传物质的情况下改变个体的性状</p><p>拉马克确实观察到了部分的现象，但是受限于他当时的科技发展和社会环境，他没办法从中抽丝剥茧找出性状改变的原因。在我看来其中还有一个很重要的原因就是拉马克没有像达尔文一样去参考观察更多的物种，达尔文得以游历四方，有了更多的原始资料和记载，尤其是在加拉帕戈斯群岛中生态环境的相对独立性，给予了达尔文几乎完美的研究对象，达尔文也自然没有放弃这样的研究机会</p><blockquote><p><strong>达尔文发现这里的动植物为适应自然环境而发生变化，如生活在各个岛上的同一种鸟类和海龟的形态和习性大不相同。这个发现使他认识到自然也能对物种进行选择，为他的“适者生存”的进化观点提供了有力的证据。</strong><br><a href="https://zhuanlan.zhihu.com/p/90265784"># 生物学圣地：加拉帕戈斯群岛–进化论诞生之地</a></p></blockquote><h2 id="《物种起源》"><a href="#《物种起源》" class="headerlink" title="《物种起源》"></a>《物种起源》</h2><p>对于大多数人来说，《物种起源》中最深刻的应该是关于“适者生存”的部分，经常给人与野蛮与无情的成分</p><p>在薛之谦的《动物世界》中曾经有过这样几句歌词：</p><blockquote><p><strong>东打一下西戳一下</strong><br><strong>动物未必需要尖牙</strong><br><strong>示爱的方法有礼貌或是我管它</strong><br><strong>要将情人一口吞下</strong><br><strong>还要显得温文尔雅</strong><br><strong>螳螂委屈的展示旧伤疤</strong><br><strong>求偶时候一惊一乍</strong><br><strong>因为害怕时常倒挂</strong><br><strong>走投无路的情况下舍弃了尾巴</strong><br><strong>如果不能将它同化就寄生于它</strong><br><strong>大不了一同腐化</strong><br><strong>努力进化 笑动物世界都太假</strong><br><strong>祖先 已磨去爪牙</strong><br><strong>相爱相杀 一定有更好的办法</strong><br><strong>攀比一下 谁先跪下</strong><br><strong>不再进化 动物世界里都太傻</strong></p></blockquote><p>我们不必去过于追求在艺术作品中的现实性元素，但这些歌词确实在一定程度上反映了大众、艺术界对于“物种进化”的一些基本看法</p><h2 id="人类种群中的“进化”"><a href="#人类种群中的“进化”" class="headerlink" title="人类种群中的“进化”"></a>人类种群中的“进化”</h2><p>可能在这里我们讨论人类种群中的“进化”又或者更合适点——“演化”有些过于“敏感”，但是我认为自然界和人类社会总是存在着某些相似的，虽然说自然界可能会比人类社会危险万分，人类社会也可能比自然界危险万分。</p><p>在人类社会和自然界中寻找相似性，对于进化生物学的学习还是相当“危险”或者说“不负责任”的，在这里请让我小心翼翼地阐明几个我认为还算比较有共鸣的观点吧！</p><h3 id="对“最适者”的理解问题"><a href="#对“最适者”的理解问题" class="headerlink" title="对“最适者”的理解问题"></a>对“最适者”的理解问题</h3><p>进化生物学中：</p><blockquote><p>那些能留下最多后代的类型才是“最适者”<br>在斗争中取胜者不一定是最适者，只有遗传下去才有意义，把“适者生存”理解为“优胜劣汰”是不全面的</p></blockquote><p>那么在人类社会能不能理解为在古代娶“三妻四妾”，在近代出去“外遇”、“出轨”，这些都是写在基因里面人类对于扩大生殖的具体写照</p><h3 id="选择的模式问题（选择只选择性状）"><a href="#选择的模式问题（选择只选择性状）" class="headerlink" title="选择的模式问题（选择只选择性状）"></a>选择的模式问题（选择只选择性状）</h3><p>进化生物学中：</p><blockquote><p>自然界中还存在着多种其他的选择模式或机制<br>对于“自然选择起着筛子作用”这样的理解，就有加以说明的必要</p></blockquote><p>在人类社会中有些人的生存力很低（指的是生理上的），但是他特别有钱，能给他治好或者缓解其症状，能和异性进行交配繁殖产生其后代。那么在这其中“钱”是不是也能作为其被选择性状，而“钱”是不是和其基因内部存在着某种关系，比如说特别会经商？</p><h3 id="间断选择"><a href="#间断选择" class="headerlink" title="间断选择"></a>间断选择</h3><p>进化生物学中：</p><blockquote><p>自然选择同时“选留”两个极端类型的特征，会增加基因的遗传多样性</p></blockquote><p>这个其实很好理解，处于两个“阶层”的人互相结婚生子，在这样的过程中保留了两个比较极端的”阶层“，极穷或者极富有，在学这个的过程中我始终没有理解”增加基因的遗传多样性“这个问题</p><h3 id="先锋者效应"><a href="#先锋者效应" class="headerlink" title="先锋者效应"></a>先锋者效应</h3><p>进化生物学中：</p><blockquote><p>由少数几个携带有亲本种群中部分遗传变异的种群建立起新的种群，新种群中的基因频率偏离流原来的亲本种群<br>新群体中的基因更多的偏向于<strong>先锋者</strong>的基因</p></blockquote><p>这个我理解为在某些行业中的<strong>Leader</strong>更多地决定了某些东西的走向，比如说 Openai 作为生成式大模型的“领头人”，在一定程度上也决定了未来大模型的发展方向</p><h3 id="不均等交配"><a href="#不均等交配" class="headerlink" title="不均等交配"></a>不均等交配</h3><p>进化生物学上：</p><blockquote><p>交配方式：随机交配、选择交配</p></blockquote><p>对配偶的选择，我们爱上对方可能是因为对方的某些特质，有物质上的，也有精神上的。从分子基因学的角度就是馋他&#x2F;她的基因</p><h3 id="利他主义"><a href="#利他主义" class="headerlink" title="利他主义"></a>利他主义</h3><p>进化生物学上：</p><blockquote><p>为了种群或物种的利益而降低个体适应度的一种特性<br>在自然选择的角度上来说，利他主义很难存在<br>共享遗传物质，从基因的亲缘系数中进行定性考虑</p></blockquote><p>为什么说在“自然选择”上认为“利他主义很难存在”，因为在自然界中这种“利他行为”，经常伴随着个体的死亡，死了之后所谓“利他主义”的“基因”失去了载体，因此生存力很低</p><p>我常常将“利他”和人类社会中那些具有所谓“奉献精神”的人挂钩，虽然我们在道德上总是歌颂的，比如说教师、医生等等</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>我始终觉得人类社会和自然界中存在某种相似，虽然可能一直都是</p><p>我们寻找自然的答案，其实是一直在寻找我们自身的答案</p>]]></content>
      
      
      <categories>
          
          <category> 生物学 </category>
          
          <category> Note </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 闲聊 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>fofa的使用与防护</title>
      <link href="/2024/09/28/Tech/fofa%E7%9A%84%E4%BD%BF%E7%94%A8%E4%B8%8E%E9%98%B2%E6%8A%A4/"/>
      <url>/2024/09/28/Tech/fofa%E7%9A%84%E4%BD%BF%E7%94%A8%E4%B8%8E%E9%98%B2%E6%8A%A4/</url>
      
        <content type="html"><![CDATA[<h1 id="fofa的使用与防护"><a href="#fofa的使用与防护" class="headerlink" title="fofa的使用与防护"></a>fofa的使用与防护</h1><h2 id="fofa是个啥"><a href="#fofa是个啥" class="headerlink" title="fofa是个啥"></a>fofa是个啥</h2><blockquote><p>FOFA是一款网络空间测绘的搜索引擎，旨在帮助用户以搜索的方式查找公网上的互联网资产。<a href="https://link.zhihu.com/?target=https://fofa.info">https://fofa.info</a></p><p>简单来说，FOFA的使用方式类似于谷歌或百度，用户可以输入关键词来匹配包含该关键词的数据。不同的是，这些数据不仅包括像谷歌或百度一样的网页，还包括像摄像头、打印机、数据库、操作系统等资产。</p><p>网络空间测绘可以被认为是网络空间的“地图”。就像谷歌地图或高德地图通过卫星图像对地形进行测绘，网络空间测绘也是通过技术探针对全球网络资产进行探测。</p><p>然而，网络空间分为公网和内网。FOFA主要针对公网上的资产进行探测，类似于谷歌地图上的建筑物（IP地址），虽然可以看到建筑物的外部结构和规模，但无法了解内部的情况。这是因为侵犯内网的隐私是违法的。</p></blockquote><p>你可以将fofa理解为网安界的Google search，你可以通过一些特定的语法来获取特定的信息，比如说对应的IP或者端口</p><p>对于专业的网络安全人员，可以使用fofa来搜寻潜在的网络漏洞；对于个人用户来说，可以在合法的前提下使用fofa来寻找一些“有意思”的东西</p><h2 id="fofa使用"><a href="#fofa使用" class="headerlink" title="fofa使用"></a>fofa使用</h2><p>fofa的官网：<a href="https://fofa.info/">https://fofa.info</a></p><p><img src="https://img.juniortree.com/202409282154602.png"></p><p>乍一看是不是和百度或者Google的界面有点类似？都提供了一个搜索框</p><p>fofa有自己的一套语法：</p><table><thead><tr><th>逻辑连接符</th><th>描述</th></tr></thead><tbody><tr><td><code>=</code></td><td>匹配，<code>=&quot;&quot;</code>时可查询不存在字段或值为空的情况。</td></tr><tr><td><code>==</code></td><td>完全匹配，<code>==&quot;&quot;</code>时可查询存在且值为空的情况。</td></tr><tr><td><code>&amp;&amp;</code></td><td>与（AND），所有条件必须为真。</td></tr><tr><td>&#96;</td><td></td></tr><tr><td><code>!=</code></td><td>不匹配，<code>!=&quot;&quot;</code>时可查询值为空的情况。</td></tr><tr><td><code>*=</code></td><td>模糊匹配，使用<code>*</code>或<code>?</code>进行搜索。</td></tr><tr><td><code>()</code></td><td>确认查询优先级，括号内的内容优先级最高。</td></tr></tbody></table><table><thead><tr><th>查询示例</th><th>描述</th></tr></thead><tbody><tr><td><code>title=&quot;beijing&quot;</code></td><td>从标题中搜索“北京”。</td></tr><tr><td><code>header=&quot;elastic&quot;</code></td><td>从HTTP头中搜索“elastic”。</td></tr><tr><td><code>body=&quot;网络空间测绘&quot;</code></td><td>从HTML正文中搜索“网络空间测绘”。</td></tr><tr><td><code>fid=&quot;sSXXGNUO2FefBTcCLIT/2Q==&quot;</code></td><td>查找相同的网站指纹。</td></tr><tr><td><code>domain=&quot;qq.com&quot;</code></td><td>搜索根域名带有qq.com的网站。</td></tr><tr><td><code>icp=&quot;京ICP证030173号&quot;</code></td><td>查找备案号为“京ICP证030173号”的网站。</td></tr><tr><td><code>js_name=&quot;js/jquery.js&quot;</code></td><td>查找网站正文中包含js&#x2F;jquery.js的资产。</td></tr><tr><td><code>js_md5=&quot;82ac3f14327a8b7ba49baa208d4eaa15&quot;</code></td><td>查找js源码与之匹配的资产。</td></tr><tr><td><code>cname=&quot;ap21.inst.siteforce.com&quot;</code></td><td>查找cname为”ap21.inst.siteforce.com”的网站。</td></tr><tr><td><code>cname_domain=&quot;siteforce.com&quot;</code></td><td>查找cname包含“siteforce.com”的网站。</td></tr><tr><td><code>cloud_name=&quot;Aliyundun&quot;</code></td><td>通过云服务名称搜索资产。</td></tr><tr><td><code>product=&quot;NGINX&quot;</code></td><td>搜索此产品的资产。</td></tr><tr><td><code>category=&quot;服务&quot;</code></td><td>搜索此产品分类的资产。</td></tr><tr><td><code>icon_hash=&quot;-247388890&quot;</code></td><td>搜索使用此 icon 的资产。</td></tr><tr><td><code>host=&quot;.gov.cn&quot;</code></td><td>从url中搜索”.gov.cn”搜索要用host作为名称。</td></tr><tr><td><code>port=&quot;6379&quot;</code></td><td>查找对应“6379”端口的资产。</td></tr><tr><td><code>ip=&quot;1.1.1.1&quot;</code></td><td>从ip中搜索包含“1.1.1.1”的网站。</td></tr><tr><td><code>ip=&quot;220.181.111.1/24&quot;</code></td><td>查询IP为“220.181.111.1”的C网段资产。</td></tr><tr><td><code>status_code=&quot;402&quot;</code></td><td>查询服务器状态为“402”的资产。</td></tr><tr><td><code>protocol=&quot;quic&quot;</code></td><td>查询quic协议资产。</td></tr><tr><td><code>country=&quot;CN&quot;</code></td><td>搜索指定国家(编码)的资产。</td></tr><tr><td><code>region=&quot;Xinjiang Uyghur Autonomous Region&quot;</code></td><td>搜索指定行政区的资产。</td></tr><tr><td><code>city=&quot;Ürümqi&quot;</code></td><td>搜索指定城市的资产。</td></tr><tr><td><code>cert=&quot;baidu&quot;</code></td><td>搜索证书(https或者imaps等)中带有baidu的资产。</td></tr><tr><td><code>cert.subject=&quot;Oracle Corporation&quot;</code></td><td>搜索证书持有者是Oracle Corporation的资产。</td></tr><tr><td><code>cert.issuer=&quot;DigiCert&quot;</code></td><td>搜索证书颁发者为DigiCert Inc的资产。</td></tr><tr><td><code>cert.is_valid=true</code></td><td>验证证书是否有效，true有效，false无效。</td></tr><tr><td><code>cert.is_match=true</code></td><td>证书和域名是否匹配；true匹配、false不匹配。</td></tr><tr><td><code>cert.is_expired=false</code></td><td>证书是否过期；true过期、false未过期。</td></tr><tr><td><code>jarm=&quot;2ad...83e81&quot;</code></td><td>搜索JARM指纹。</td></tr><tr><td><code>banner=&quot;users&quot; &amp;&amp; protocol=&quot;ftp&quot;</code></td><td>搜索FTP协议中带有users文本的资产。</td></tr><tr><td><code>type=&quot;service&quot;</code></td><td>搜索所有协议资产，支持subdomain和service两种。</td></tr></tbody></table><h2 id="fofa的防护"><a href="#fofa的防护" class="headerlink" title="fofa的防护"></a>fofa的防护</h2><p>fofa的使用有可能暴露我们的服务，在各种论坛上我们经常可以看到各种使用fofa进行扫描然后进行深透攻击获取用户数据的事情</p><p>我们不能有害人之心，但同时我们也要有所防护，以下是我总结出的一些方法：</p><ol><li><p>使用Nginx或者Caddy等进行反向代理，尽量少的暴露其他端口</p><p>fofa扫出来的经常都是一些端口，我们使用这些web服务器进行反向代理，就不必暴露除80和443以外的端口了。我们就只需要在云服务或者ufw中暴露最少的端口，减少暴露风险</p><p>如果你是使用docker部署的服务，那么可以使用docker内的网络，这样就不需要开放云防火墙的端口了</p><p><img src="https://img.juniortree.com/202409282213167.png"></p><p>你可以使用以下命令查看：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip addr show docker0</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">4: docker0: &lt;NO-CARRIER,BROADCAST,MULTICAST,UP&gt; mtu 1500 qdisc noqueue state DOWN group default </span><br><span class="line">    <span class="built_in">link</span>/ether 02:42:e4:a3:b5:b9 brd ff:ff:ff:ff:ff:ff</span><br><span class="line">    inet 172.17.0.1/16 brd 172.17.255.255 scope global docker0</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br></pre></td></tr></table></figure><p>这里的IP就是<code>172.17.0.1</code>，使用这个就不需要开放防火墙的端口了</p></li><li><p>修改用户名和默认密码，设定特定权限</p><p>如果你不得不要暴露端口了，那么请一定要修改用户名和密码</p><p>较早4.0版本前的qb设置使用的是默认密码，经常出现被“黑”的情况</p><p>至于权限未设定而造成损失的在alist中尤为突出，经常有人不禁用guest账户，泄漏大量私人数据（哪怕alist文档中明确写明了要注意隐私问题</p></li><li><p>限制IP访问（未明确使用</p><p>可以通过限制fofa的IP来避免被扫描，但是这种方法实际上很难实现，因为除了fofa还有其他的空间测绘程序，比如说360的</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术 </tag>
            
            <tag> 网络安全 </tag>
            
            <tag> 网站 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我们是何时失去探知欲的</title>
      <link href="/2024/09/26/%E6%B7%B1%E5%85%A5%E6%80%9D%E8%80%83/%E6%88%91%E4%BB%AC%E6%98%AF%E4%BD%95%E6%97%B6%E5%A4%B1%E5%8E%BB%E6%8E%A2%E7%9F%A5%E6%AC%B2%E7%9A%84/"/>
      <url>/2024/09/26/%E6%B7%B1%E5%85%A5%E6%80%9D%E8%80%83/%E6%88%91%E4%BB%AC%E6%98%AF%E4%BD%95%E6%97%B6%E5%A4%B1%E5%8E%BB%E6%8E%A2%E7%9F%A5%E6%AC%B2%E7%9A%84/</url>
      
        <content type="html"><![CDATA[<h1 id="我们是何时失去探知欲的"><a href="#我们是何时失去探知欲的" class="headerlink" title="我们是何时失去探知欲的"></a>我们是何时失去探知欲的</h1><p>晚上回宿舍的时候突然想到以前的事情，遂写下这篇蓄谋已久但是从未动笔的文章</p><p>小时候家里喜欢种花花草草，我记得种得最多的是吊兰，第一株是从楼下花坛里面移栽过来的，我家在南方，有一年南方的冬天特别冷，然后我怕它冻死，就从热水器里面接了热水，然后浇了进去。可能在现在看来这个想法让人有点啼笑皆非，但是当时的我觉得这是一个“很好”的办法（有可能是小朋友对大自然的同情心</p><p><img src="https://img.duckk.org/2024/11/5c108675f97aec7283214f2ca0bc2b45.png"></p><p>好在吊兰在我的“毒手”下熬过了那个冬天，之后在枝条上长出了“气根”，这时候只要把它剪下来就可以重新移植了</p><p><img src="https://img.duckk.org/2024/11/8f9f037a3a51bbfed21f4e9a733e1326.jpeg"></p><p>我当时做了一个很有意思的尝试，拿了很多个塑料杯，然后把剪下来的小吊兰放到杯子里面，将里面泡上水。等到很多年会想起这件事的时候，才发现原来这叫做“水培”，属于是“歪打正着”了</p><p>在我大概读四五年级的时候，我去了一趟广州，在当地的商场里面看到了一本对我成长影响还挺深刻的书，《科学实验王》</p><p><img src="https://img.duckk.org/2024/11/aab5109e35c06ee869b499d2ca87a831.jpeg"></p><p>可能这个名字在现在可能听着会让你觉得有些尴尬或者说想找个地缝钻进去，但是对于只有10来岁的我来说，这本书的的确确是很具吸引力的</p><p>当时的我可能很难明白里面的一些概念，比如说“氧化还原”、“叶绿素的萃取”等等，但是对于我来说这些书籍的一样类似于一个引路人，并不需要很深奥的解释，只要把这些科学知识同生活联系在一起，将得通俗易懂，小朋友容易接受，这就够了</p><p><img src="https://img.duckk.org/2024/11/48bbc1de9d788385e931ed517308a973.jpeg"></p><p>哪怕在正式经受过系统的科学教育之后，当我再次翻阅这些书的时候我发现其中里面有些观点是不正确或者有偏颇的，但这并没有改变我对这系列书籍的热爱</p><p>甚至在小学的时候，我就开始依赖这些“课本外”的知识去解决一些深层次的问题</p><p>当我开始上高年级和初中之后，能阅读一些层次更深的书籍之后，我开始对“量子力学”和“微生物学”产生了浓厚的兴趣</p><p>在初中教育时期，小学所上的《科学》逐渐被细化开来，变成《生物》、《地理》、《物理》、《化学》。在初一的时候，我开始正式学习《生物》的相关知识</p><p>当时我的生物老师是一个很有教学经验而且很严格的女老师，那时候她大概快50岁了，她上课从来不说普通话，因为普通话远远没有方言形象和生动，又好在我们班上没有外地的，因此无伤大雅，反而称为了她教学上的优点</p><p>初中的生物学基本上以“通识”为主，我记得基本上就教大家认识一下各种生物，当时课本安排应该是从“低等到高等”这样的顺序，对生物学有着一些基本的概念</p><p>我记得我当时最感兴趣的应该是有关人体的内容，那应该是在初一下，学习了心肺循环。那一段时间我刚好得了较为严重的肺炎，因此只能请假前往医院打针，当时在打针的时候我脑子里就开始想药水是怎么流动的，是怎么循环的，慢慢地搞清楚了心肺循环的全过程——既生动，又形象</p><p><img src="https://img.duckk.org/2024/11/38a33a70e8c03a4674daf99acaf23ee8.png"></p><p>我记得当时我最感兴趣的应该是和免疫相关的，我具体记不清在哪一本书里面了，但是篇幅应该不多，只给了很少的分量，当时我还扼腕叹息</p><p>后来在家中我也做了很多奇怪的东西，比如说拿用来发酵的商品酵母，或者是青霉素、红霉素等等将其捣碎，然后再拿一个纸杯，然后在里面放一个棉球，加点用蔗糖（白砂糖）调配的糖水，之后再把上面的“菌种”撒进去，最后再套上一个用铝箔做的盖子，密封好，丢到书桌抽屉温暖的地方就算完工</p><p>可能现在看起来，我的这个“培养”过程有点过于粗糙，甚至可以说是危险，但在当时它给我带来了不少的乐趣，一直到高中以后，我才意识到我初中的时候培养的“抗生素菌种”可能是被抗生素淘汰后的“耐药菌”，这些事情还常常被我记在脑海里，令人寻味</p><p>我的第一本书“量子力学”入门书籍是霍金先生的《时间简史》，这本书陪伴了我初中三年的时光，当然还有《果壳中的宇宙》。刚开始其实是被它彩色印刷的纸张所吸引，这本书我同样阅读了很多次，你也自然而然地可以想到一个只有小学学历的人怎么可能完全吃透其中的内容</p><p><img src="https://img.duckk.org/2024/11/3bbbb3ad14bcaf6c3610ab67bedb5420.jpeg"></p><p>但是里面的一些基本观点或者理论同样对我今后的学习产生了重要的影响，比如说“曾祖父悖论”、“海瑟堡测不准原理”、“宇宙大爆炸模型”等等，时至今日哪怕我已经不再进行物理学方面的学习了，其中的内容我依然可以信手拈来</p><p>初二实际上是一个还蛮重要的转折点，因为在这一学期开始正式学习物理学科的内容。当时学的还是一些经典物理学的内容，诸如一些“阿基米德原理”啊等等，我对这些知识完全提不起一点兴趣。当时初二上是我父亲教我的，他从高中部下来，算支教。初中学的物理学还算很贴切实际生活，而我对日常生活中的物理学感触还是很丰富的，因此当时成绩并不差，第一次月考物理考了98分，全年级第二。之后由于各种原因换了新的物理老师</p><p>我的父亲在我成长道路上对我的帮助无疑是巨大的，他很鼓励我去探索发现科学，不管是物理上的抑或者生物、化学上的。我从前很喜欢和他讨论量子力学上的内容，直到有一天他说：“我回答不上来了，你要自己去找答案了”</p><p>这时候我才慢慢意识到我在某方面的学识已经超过他了，我确实要自己去找答案了</p><p>如果说初中给了我一个相对自由的空间的话，那么高中是彻彻底底的“凡尔登绞肉机”</p><p>高中的时候我毅然选择了传统理科，也就是物理、化学和生物作为我的高考科目。但是高中的内容和我希望去学习的内容截然不同，我在这时候逐渐丧失了对物理学的热情</p><p>在我看来，高中的物理学很少有比较创新或者探索性的内容，都是以经典力学为主，而且和数学的关系颇深。我的高中物理老师和我关系很好，他对我的评价就是“思路有了，但是数学太差”，对于要参加高考的我来说，物理真的是当头一棒，我很难从繁忙的教学任务和一次又一次差到极点的考试成绩中获得成就感</p><p>“做这件事情不快乐，我为什么要去做呢，我真的能坚持下来么？”这也是我当初从物理系转到生科院问得自己最多的一句话，“我真的快乐么？”</p><p>直到现在也还有人会和我说：“是你自己踢走了一路平坦的人生”，那我真的想问一下，你所追求的事情就是真正好的么？十年后，二十年后他真的还好么？甚至我真的能靠这条路走下去么？如果这些都不能那我还是选自己最爱的好了</p><p>在物理学习受阻的时候，生物的学习却要好得多，一方面是我确实比较喜欢，每次上课结束之后我都会马上做完作业加以巩固；另一方面高中的生物学确实有点像“背书比赛”，你只需要记住特点的名词、概念，就能获得不错的分数——“那为什么我能名列前茅呢？”现在想想确实挺有道理的</p><p>当时每周六晚上放假，我喜欢在电视上看B站，经常会刷到一些讲免疫或者病原体的视频，当时我有一个隔着走廊的朋友，有时候第二天上课我就会把昨天晚上看到的东西写到纸条上，然后传给他看，他会很仔细地看完然后和我分享，我们俩经常这样，乐此不疲</p><p>高考报志愿那年我并没有如愿进入生物专业学习，反而去到了一个偏向物理学的专业，我知道自己不是学习物理的料，遂下学期转入生命科学学院，学习生物科学</p><p>大学以来，我反而觉得觉得自己逐渐在丧失求知欲，明明已经得到了一个很好的平台，是时候大展身手，这时候反而畏畏缩缩了</p><p>而且我的注意力也在下降，以前可以安安稳稳地认认真真读完一本书，现在却要收到各种干扰——来自社交媒体、游戏等等</p><p>信息获取渠道越来越方便，我们开始只注重于答案本身而忽略了其中的过程</p><p>短视频高速发达，各种碎片化、未经考证的消息扑面而来</p><p>想到哪里写到哪里吧</p>]]></content>
      
      
      <categories>
          
          <category> 深入思考 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 闲聊 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>感觉日子过得越来越无趣</title>
      <link href="/2024/09/22/%E6%97%A5%E5%B8%B8/%E6%84%9F%E8%A7%89%E6%97%A5%E5%AD%90%E8%BF%87%E5%BE%97%E8%B6%8A%E6%9D%A5%E8%B6%8A%E6%97%A0%E8%B6%A3/"/>
      <url>/2024/09/22/%E6%97%A5%E5%B8%B8/%E6%84%9F%E8%A7%89%E6%97%A5%E5%AD%90%E8%BF%87%E5%BE%97%E8%B6%8A%E6%9D%A5%E8%B6%8A%E6%97%A0%E8%B6%A3/</url>
      
        <content type="html"><![CDATA[<p style="">感觉很少能有东西能让我感兴趣，游戏也好，技术也好，摄影也好，专业也好</p><p style="">我不知道是不是气候的原因，整个人变得懒懒的，很嗜睡</p><p style="">尤其是舍友早上五六点的时候喜欢打呼噜，导致我很容易被吵醒，变得更加嗜睡，易怒</p><p style="">他们忽然间说我变成熟了，我很难说是不是真的变成熟了，我感觉自己对一些事情似乎慢慢淡然了，感情也好，其他也罢</p><p style="">我没有很想赢只是不想输</p><p style="text-align: center; ; "><iframe src="https://music.163.com/#/song?id=2617644444" width="100%" height="300px" frameborder="0" allowfullscreen="true" framespacing="0" style="display: inline-block"></iframe></p>]]></content>
      
      
      <categories>
          
          <category> 随想 </category>
          
          <category> 日常 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随想 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于Golang和Docker图像无损压缩方案</title>
      <link href="/2024/09/20/Tech/%E5%9F%BA%E4%BA%8EGolang%E5%92%8CDocker%E5%9B%BE%E5%83%8F%E6%97%A0%E6%8D%9F%E5%8E%8B%E7%BC%A9%E6%96%B9%E6%A1%88/"/>
      <url>/2024/09/20/Tech/%E5%9F%BA%E4%BA%8EGolang%E5%92%8CDocker%E5%9B%BE%E5%83%8F%E6%97%A0%E6%8D%9F%E5%8E%8B%E7%BC%A9%E6%96%B9%E6%A1%88/</url>
      
        <content type="html"><![CDATA[<h1 id="基于Golang和Docker图像无损压缩方案"><a href="#基于Golang和Docker图像无损压缩方案" class="headerlink" title="基于Golang和Docker图像无损压缩方案"></a>基于Golang和Docker图像无损压缩方案</h1><blockquote><p>本项目已经开源到了Github上：<a href="https://github.com/Aicnal/composeImage">composeImage</a>，如果对你有帮助欢迎Star！</p></blockquote><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>笔者的NAS中存有大量的高清图片，这些图片占据的大量的空间，导致笔者的存储空间吃紧，同时文件空间太大不利于传输和分享，只能一个人存到本地太不够意思了。</p><p>因此我必须想出一种高效的方式来压缩图片，使其便于存储和发送，这时候我就想到了使用<code>webp</code>这种格式</p><p>笔者之前很喜欢用Python，因为它简单易用，但是这次要处理大约4万张图片，Python的性能确实不太够。这时候我想到了Golang，它同样简单易用，而且性能优异，还可以进行静态编译，我何乐而不为呢？</p><h2 id="具体实现"><a href="#具体实现" class="headerlink" title="具体实现"></a>具体实现</h2><p>首先我们要明确需求：</p><ul><li>能实现<code>jpg</code>和<code>png</code>格式的自动转换</li><li>能监控文件夹，如果监测到文件夹内存在文件变动则自动继续转换</li><li>重启后对已经转换过的文件不再继续转换，自动跳过</li><li>性能尽量要好，使用高并发，多线程</li></ul><p>之后我们就可以按照上面的需求开始写了，实际上写的过程很简单，我是直接丢给GPT进行写的，但是在这过程中存在一个问题，笔者是ARM Mac用户，而NAS是基于x86的，那么就必须使用交叉编译或者在NAS上重新搭建Golang环境。显然后者更加麻烦而且臃肿，我果断选择交叉编译——好了，第一个坑来了，我第一次使用的是来自Golang官方的<code>golang.org/x/image/webp</code>，直接运行的时候出现报错，显示导入错误，但是我仔细检查后觉得没有错误，就使用第三方<code>github.com/chai2010/webp </code>库，完美运行。</p><p>但到正式交叉编译的时候又傻眼了，显示缺少对于的gcc编译器。。。我直接裂开，后来我想到可以在容器内进行编译，再使用一个基础容器进行封装就好了</p><h3 id="容器化"><a href="#容器化" class="headerlink" title="容器化"></a>容器化</h3><p>首先要先在容器内进行编译，在这里我们直接使用一个基于Golang的容器，由于这个基础镜像所占空间比较大，我们使用<code>alpine</code>作为承载容器运行这个编译后的二进制文件</p><p>其中有一个坑就是，编译出来的文件需要一些依赖项，必须将其补齐才能正常运行</p><p>在docker中我们指定了两个文件夹来作为输入和输出文件夹</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用官方的Go镜像作为基础镜像</span></span><br><span class="line"><span class="keyword">FROM</span> golang:<span class="number">1.20</span> AS builder</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置工作目录</span></span><br><span class="line"><span class="keyword">WORKDIR</span><span class="language-bash"> /app</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 复制当前目录内容到工作目录</span></span><br><span class="line"><span class="keyword">COPY</span><span class="language-bash"> . .</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 下载依赖</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> go mod download</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 编译Go程序</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> go build -o composeImage .</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用一个更小的基础镜像来运行编译后的二进制文件</span></span><br><span class="line"><span class="keyword">FROM</span> alpine:latest</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装运行二进制文件所需的依赖项</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> apk add --no-cache libc6-compat</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置工作目录</span></span><br><span class="line"><span class="keyword">WORKDIR</span><span class="language-bash"> /app</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 从构建阶段复制编译后的二进制文件</span></span><br><span class="line"><span class="keyword">COPY</span><span class="language-bash"> --from=builder /app/composeImage .</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置执行权限</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> <span class="built_in">chmod</span> +x composeImage</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 运行程序</span></span><br><span class="line"><span class="keyword">CMD</span><span class="language-bash"> [<span class="string">&quot;./composeImage&quot;</span>, <span class="string">&quot;-input&quot;</span>, <span class="string">&quot;/input&quot;</span>, <span class="string">&quot;-output&quot;</span>, <span class="string">&quot;/output&quot;</span>, <span class="string">&quot;-quality&quot;</span>, <span class="string">&quot;90&quot;</span>, <span class="string">&quot;-workers&quot;</span>, <span class="string">&quot;4&quot;</span>]</span></span><br></pre></td></tr></table></figure><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><h3 id="Go"><a href="#Go" class="headerlink" title="Go"></a>Go</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/Aicnal/composeImage.git</span><br><span class="line">go mod download</span><br></pre></td></tr></table></figure><p>请不要直接使用<code>Go run...</code>进行运行，你必须提供输入和输出目录，压缩质量和线程数量<br>在正式使用之前请先进行编译：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">go build go build -o composeImage .</span><br></pre></td></tr></table></figure><p>之后再指定相关目录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./composeImage -input /input -output /output -quality 90 -workers 4</span><br></pre></td></tr></table></figure><h3 id="Docker"><a href="#Docker" class="headerlink" title="Docker"></a>Docker</h3><p>直接进行Docker构建</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker build -t image-compressor:latest .</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -v $(pwd)/input:/input -v $(pwd)/output:/output image-compressor:latest</span><br></pre></td></tr></table></figure><p>或者你可以使用<code>docker-compose.yaml</code>进行统一管理</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3.8&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">image-compressor:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">image-compressor:latest</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./input:/input</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./output:/output</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Golang </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Sanger 双脱氧链终止法</title>
      <link href="/2024/09/08/Note/Sanger%20%E5%8F%8C%E8%84%B1%E6%B0%A7%E9%93%BE%E7%BB%88%E6%AD%A2%E6%B3%95/"/>
      <url>/2024/09/08/Note/Sanger%20%E5%8F%8C%E8%84%B1%E6%B0%A7%E9%93%BE%E7%BB%88%E6%AD%A2%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1 id="Sanger-双脱氧链终止法"><a href="#Sanger-双脱氧链终止法" class="headerlink" title="Sanger 双脱氧链终止法"></a>Sanger 双脱氧链终止法</h1><blockquote><p><strong>双脱氧链终止法</strong>（英语：dideoxyribonucleotide ［簡稱 dideoxy］ chain-termination method），又称桑格法（英语：Sanger method），为一种常用的核酸测序技术，用于DNA分析，由英国生物化学家弗雷德里克·桑格于1977年发明。双脱氧链终止法与化学降解法以及其衍生方法统称为第一代DNA测序技术，为人类基因组计划所使用主要测序方法。</p></blockquote><h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p>双脱氧链终止法采用DNA复制原理，常见的DNA复制体系使用单脱氧核糖核苷酸，其核苷酸的3’能与其他核苷酸的5’结合形成<strong>磷酸二酯键</strong>，即手拉手形成DNA骨架。</p><p><img src="https://img.duckk.org/2024/11/d684d9b80300e8cbade23ed925c2cdb4.png"></p><p>经过改造后的的<strong>ddNTP</strong>，其3’的羟基被脱去，失去与5’脱水缩合能力，从而在此形成断链，中止DNA链的延伸。此外这些<strong>ddNTP</strong>上还连接有放射性同位素或者荧光基团，能被仪器捕获到。</p><p><img src="https://img.duckk.org/2024/11/e0b435ca5ab1e176ea1123dde9db3440.png"></p><p>以下是一些最常用的带有荧光基团的<strong>ddNTP</strong>：</p><p><img src="https://img.duckk.org/2024/11/b6d3eaa7bd84c73aa7a3b930b9584677.png"></p><h2 id="测序过程"><a href="#测序过程" class="headerlink" title="测序过程"></a>测序过程</h2><h3 id="体系"><a href="#体系" class="headerlink" title="体系"></a>体系</h3><ul><li><p>单链DNA模版</p><p>Sanger测序法的经典测序反应是将靶DNA片段克隆于 M13mp载体，从重组克隆噬菌体颗粒中分离得到单链DNA模板，再按Sanger 法进行测序。</p></li><li><p>DNS引物（Primer</p><p>和PCR的作用类似，与DNA模版的部分序列互补配对，确定起始位置，一般来说，通用引物的 长度以15~30bp 为宜。</p></li><li><p>DNA聚合酶</p><p>用来合成DNA长链</p></li><li><p>正常的脱氧核苷酸三磷酸（dNTP）</p></li><li><p>改造后的双脱氧核苷酸三磷酸（ddNTP）</p></li><li><p>缓冲液</p></li></ul><h3 id="测序反应"><a href="#测序反应" class="headerlink" title="测序反应"></a>测序反应</h3><p>之后在反应体系内进行复制，在此过程中存在着两种复制情况：</p><ul><li><p>dNTP</p><p>如果DNA聚合酶刚好连接的是dNTP，则反应可以继续下去，DNA就可以正常连接形成长链，和正常PCR复制相同</p></li><li><p>ddNTP</p><p>如果DNA聚合酶连接的是ddNTP，此时由于其3’缺少羟基，无法发生正常的聚合反应，因此复制中断，形成短连接</p></li></ul><p>实际上复制的过程要分为四次，分别往四个独立的体系中加入<strong>ddATP</strong>、<strong>ddTTP</strong>、<strong>ddCTP</strong>、<strong>ddGTP</strong>，分别进行四次测序反应，分别显影（关于这个部分实际上存在疑问，有些资料说可以同时测序，有些则提出需要分别测序</p><p><img src="https://img.duckk.org/2024/11/126a56e2fa1e0ef336d43a178c470906.png"></p><p>具体的复制情况如下图所示：</p><p><img src="https://img.duckk.org/2024/11/374db372be2f6118f82d5d095872656f.png"></p><h3 id="分离"><a href="#分离" class="headerlink" title="分离"></a>分离</h3><p>按照更合理的顺序来说，这个过程需要四个单独的反应来测试所有四种 ddNTP。在从结合引物进行多轮模板 DNA 延伸后，将所得 DNA 片段热变性，并使用凝胶电泳按大小进行分离。 1977 年的最初出版物中，ssDNA 碱基配对环的形成是在某些位置解析条带时遇到严重困难的原因。这通常使用变性聚丙烯酰胺-尿素凝胶进行，四个反应中的每一个都在四个单独泳道（泳道 A、T、G、C）之一中运行。然后可以通过放射自显影或紫外光观察 DNA 带，并且可以从X 射线胶片或凝胶图像上直接读取 DNA 序列。</p><p><img src="https://img.duckk.org/2024/11/c02d146a30252f0d1167d5430bbafc4f.png"></p><p><img src="https://img.duckk.org/2024/11/839dc8e17668e067b245ca974d05b33e.png"></p><h2 id="番外"><a href="#番外" class="headerlink" title="番外"></a>番外</h2><h3 id="脱氧核苷酸三磷酸和脱氧核糖核苷酸的区别："><a href="#脱氧核苷酸三磷酸和脱氧核糖核苷酸的区别：" class="headerlink" title="脱氧核苷酸三磷酸和脱氧核糖核苷酸的区别："></a><strong>脱氧核苷酸三磷酸和脱氧核糖核苷酸的区别</strong>：</h3><p>下面是GPT给出的解释：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">脱氧核苷酸三磷酸（deoxyribonucleoside triphosphate, dNTP）和脱氧核糖核苷酸（deoxyribonucleotide）是两种密切相关的分子，但它们之间有一些关键的区别：</span><br><span class="line"></span><br><span class="line">1.磷酸基团的数量：</span><br><span class="line">•脱氧核苷酸三磷酸（dNTP）：包含一个核苷（由一个脱氧核糖和一个碱基组成）以及三个磷酸基团。这是DNA合成过程中使用的前体分子。在DNA复制或修复中，dNTP会失去两个磷酸基团，生成相应的脱氧核苷酸并加入到DNA链中。</span><br><span class="line">•脱氧核糖核苷酸：通常指的是核苷和一个磷酸基团，即单磷酸脱氧核糖核苷酸（如dAMP、dGMP、dCMP、dTMP）。它是dNTP在被加入到DNA链中后留下的形式。</span><br><span class="line">2.功能：</span><br><span class="line">•dNTP：作为DNA聚合酶在合成DNA链时的原料。在合成过程中，dNTP提供碱基，并通过形成磷酸二酯键将其插入到新生的DNA链中。</span><br><span class="line">•脱氧核糖核苷酸：这是DNA链中的构成单元，每一个碱基在DNA链中都是以单磷酸形式存在。</span><br><span class="line">3.化学结构：</span><br><span class="line">•dNTP：核糖上的2’位碳是氢（去除了2’位的羟基），并且连接三个磷酸基团（α、β、γ磷酸）。</span><br><span class="line">•脱氧核糖核苷酸：核糖上的2’位碳也是氢，但只有一个磷酸基团（α磷酸）与其相连。</span><br><span class="line"></span><br><span class="line">总结来说，dNTP是含有三个磷酸基团的DNA前体分子，而脱氧核糖核苷酸通常是指单磷酸的形式，是dNTP在参与DNA合成后的产物。</span><br></pre></td></tr></table></figure><p>我认为，<strong>脱氧核苷酸三磷酸</strong>在参与DNA的复制过程中，为复制过程中提供能量，发生去磷酸化，从而磷酸基团断裂，生成相应的<strong>脱氧核糖核苷酸</strong>并加入到DNA链中。</p><p>因此体系中加入<strong>脱氧核苷酸三磷酸</strong>不仅仅解决了复制原料问题，还解决了能量问题。</p><blockquote><p>参考目录：<a href="https://en.wikipedia.org/wiki/Sanger_sequencing#">Sanger sequencing</a>、<a href="https://zh.wikipedia.org/wiki/%E6%A1%91%E6%A0%BC%E6%B5%8B%E5%BA%8F">桑格测序</a>、《高通量测序技术》</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 生物学 </category>
          
          <category> Note </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 基因 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>开学——新生</title>
      <link href="/2024/09/05/%E6%97%A5%E5%B8%B8/%E5%BC%80%E5%AD%A6%E2%80%94%E2%80%94%E6%96%B0%E7%94%9F/"/>
      <url>/2024/09/05/%E6%97%A5%E5%B8%B8/%E5%BC%80%E5%AD%A6%E2%80%94%E2%80%94%E6%96%B0%E7%94%9F/</url>
      
        <content type="html"><![CDATA[<h1 id="开学"><a href="#开学" class="headerlink" title="开学"></a>开学</h1><p>开学第一周，由于降转的原因有很多选课需要自己去找老师取消，跑了很多次本部，我一直很喜欢本部前面大楼的爬山虎，春夏很好看，很有氛围，秋冬开始枯萎就有点难看了</p><p><img src="https://img.duckk.org/2024/11/980fd8df897db97ec61672a5dc9fc3a2.jpeg"></p><p>本部的咖啡厅里面的夹心浏览面包很好吃，只不过价格有点小贵，大概12块</p><p>很有意思的是生科和物理系只隔了一条马路（确实幽默 算是心心念念了</p><p><img src="https://img.duckk.org/2024/11/571245d9d4d5be4701993a86cf2a2606.jpeg"></p><p>今天还开了生科院新生开学典礼，挺无聊的说实话，开班会前艺术楼内的光影很漂亮</p><p><img src="https://img.duckk.org/2024/11/2734916f6f415572bf2bce32303af136.jpeg"></p>]]></content>
      
      
      <categories>
          
          <category> 日常 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大学 </tag>
            
            <tag> 闲聊 </tag>
            
            <tag> 随想 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>游记——贵州铜仁一日游</title>
      <link href="/2024/08/17/%E6%97%85%E8%A1%8C%E6%97%A5%E8%AE%B0/%E6%B8%B8%E8%AE%B0%E2%80%94%E2%80%94%E8%B4%B5%E5%B7%9E%E9%93%9C%E4%BB%81%E4%B8%80%E6%97%A5%E6%B8%B8/"/>
      <url>/2024/08/17/%E6%97%85%E8%A1%8C%E6%97%A5%E8%AE%B0/%E6%B8%B8%E8%AE%B0%E2%80%94%E2%80%94%E8%B4%B5%E5%B7%9E%E9%93%9C%E4%BB%81%E4%B8%80%E6%97%A5%E6%B8%B8/</url>
      
        <content type="html"><![CDATA[<h1 id="贵州铜仁一日游"><a href="#贵州铜仁一日游" class="headerlink" title="贵州铜仁一日游"></a>贵州铜仁一日游</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>暑假有空，自驾从湖南出发，前往<strong>苗王城</strong>和<strong>大明边城</strong>。不巧的是高速路上突然下起了大雨，还挺吓人的</p><p>这里刚刚经过贵州边界hhh 之前也是跑这条高速去的梵净山</p><p><img src="https://img.duckk.org/2024/11/3db077347506b8e095952f7633435e17.jpeg"></p><h2 id="苗王城"><a href="#苗王城" class="headerlink" title="苗王城"></a>苗王城</h2><p>刚开始去<strong>苗王城</strong>的时候没找对地方，只在外面的茶园就停下来了，一度让我们以为<strong>苗王城</strong>就只是一个茶园</p><p>茶园很大，尤其是很整齐，来拍照的游客自然也不在少数，此时天刚好要下雨，变得雾蒙蒙远处犹有仙气</p><p><img src="https://img.duckk.org/2024/11/b9c5a88169c242a45694e26bea66e593.heic"></p><p><img src="https://img.duckk.org/2024/11/66b0f0c97b971a44a658300fb623a8bd.webp"></p><p>沿着导航给的那条路继续往里面走，便可以看到<strong>苗王城</strong>的“庐山真面目”，这里便是大门</p><p><img src="https://img.duckk.org/2024/11/6c21dc4039ff18586f62a9a9f527cea6.webp"></p><p>进入<strong>苗王城</strong>需要买票，售票处在大门的右侧，买了票之后便可正式进入</p><p><img src="https://img.duckk.org/2024/11/13cfbef7b4de811ea3077347f18ba82a.webp"></p><p>这条路的右边有一个广场，有一个类似于“鼓”的石碑，上面写了“<strong>中国苗王城</strong>”，没想到这几个字居然是欧阳中石老师写的</p><p><img src="https://img.duckk.org/2024/11/ca8d2a9778546c16adc4e3828b6d97c9.webp"></p><p>走进城门，左侧有人在打鼓欢迎游客，十分热情</p><p><img src="https://img.duckk.org/2024/11/3fecd28989fdcd86af47ea577344d8be.webp"></p><p>古城墙，绿松树，“苗王城”这几个字更具韵味</p><p><img src="https://img.duckk.org/2024/11/579c0361432393e1c34825fa0e5f36cc.webp"></p><p>穿过城门进入广场，大柱子，长廊，游客络绎不绝</p><p><img src="https://img.duckk.org/2024/11/1890899490ba8e958cc174da22e5272b.heic"></p><p><img src="https://img.duckk.org/2024/11/7e99bd88b86a4e45a0953fd00a04967a.heic"></p><p>苗寨比较具有风韵的应该就是小巷，感觉和湖南有些地方的古城落有点像</p><p>“曲径通幽处，禅房花木深”，这里没有所谓“禅房”，只有一间间的苗族小屋</p><p><img src="https://img.duckk.org/2024/11/94c9ed188d8bb68eac23b64c47970050.webp"></p><p>我们在巷子里面穿行的时候，碰到了一个游客大哥，和我们说苗寨的酒特别香哈哈哈哈，还问我们有没有开车，劝我们去尝一尝，不过因为我们是自驾游出来的，就不得不放弃了这次的尝试机会</p><p><img src="https://img.duckk.org/2024/11/811f120d72571508fe93fef25bdf7ea6.webp"></p><p><img src="https://img.duckk.org/2024/11/f78f161cde7185f411f2f40ebe039cfa.webp"></p><p>苗语也很有意思，一路上导游教游客用苗语做回答，路上也有很多像这种“苗译汉译英”</p><p><img src="https://img.duckk.org/2024/11/0d4641dc493f2530f0b83cd56dd56ab2.webp"></p><p><strong>苗王府</strong>算得上这次参观的重头戏，其整体的规格制度有点像北方皇宫的建筑特色，不过也融合了当地苗族建筑的艺术特点，感觉挺有意思</p><p><img src="https://img.duckk.org/2024/11/8e00407617110d840965cd543ace5212.heic"></p><p><img src="https://img.duckk.org/2024/11/c5f90300cafa9463a895103d8f114424.heic"></p><p><strong>苗王城</strong>依水而建，沿着小路可以一直走到码头，水是翠绿色的</p><p><img src="https://img.duckk.org/2024/11/062dd96ece9dd386c54a6ee4ff245e6d.heic"></p><h2 id="大明边城"><a href="#大明边城" class="headerlink" title="大明边城"></a>大明边城</h2><p>在浏览完<strong>苗王城</strong>之后我们继续驱车前往<strong>大明边城</strong>。<strong>大明边城</strong>离铜仁市区较近，我们没有选择走高速，而是选择走国道前往，路上下起了倾盆大雨（还是有点吓人</p><p><img src="https://img.duckk.org/2024/11/4974f4940ae468c0e457e86951e5a9f9.heic"></p><p><img src="https://img.duckk.org/2024/11/d8f46bfc24168573280b9e0cd016acf1.heic"></p><p>之后在城内找了一个小店吃了酸汤鱼，也算是贵州特色，酸汤鱼的鱼肉不是一片一片的，而是一坨一坨的，里面还煮了很多西红柿，豆芽菜还有豆腐之类的</p><p>吃饭旁边有一个小阳台，如果不下雨的话在旁边吃饭很有氛围</p><p><img src="https://img.duckk.org/2024/11/42f8e3dff3884efae073ea6fc1222244.jpeg"></p><p><img src="https://img.duckk.org/2024/11/82f604964cf8b7aac2f57383c2935c7c.jpeg"></p><p>这边风景独好~</p><p><img src="https://img.duckk.org/2024/11/f1bdfe1ee667c593afe3cafd1a31a62c.heic"></p><p><img src="https://img.duckk.org/2024/11/c6f2cdf047ed3925975fa8d16e61177c.heic"></p><p>回去路上还偶遇农夫山泉灌装厂hhhh</p><p><img src="https://img.duckk.org/2024/11/7be0694f73c0a2f2c7541f300ab69748.jpeg"></p><p>以后有机会可以更深入地自驾贵州，还挺好玩的</p>]]></content>
      
      
      <categories>
          
          <category> 旅行日记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 旅行 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何自建PT刷流盒子</title>
      <link href="/2024/08/16/Tech/%E5%A6%82%E4%BD%95%E8%87%AA%E5%BB%BAPT%E5%88%B7%E6%B5%81%E7%9B%92%E5%AD%90/"/>
      <url>/2024/08/16/Tech/%E5%A6%82%E4%BD%95%E8%87%AA%E5%BB%BAPT%E5%88%B7%E6%B5%81%E7%9B%92%E5%AD%90/</url>
      
        <content type="html"><![CDATA[<h1 id="如何自建PT刷流盒子"><a href="#如何自建PT刷流盒子" class="headerlink" title="如何自建PT刷流盒子"></a>如何自建PT刷流盒子</h1><h2 id="选择机器"><a href="#选择机器" class="headerlink" title="选择机器"></a>选择机器</h2><p>为了刷流我们最好选择大带宽、大容量的服务器，在这里我们简称大盘鸡<br>在这里为了方便演示我就拿Digital Ocean的一台服务器进行搭建，如果你要正式刷流了还是买个硬盘容量大点的</p><p><img src="https://img.duckk.org/2024/11/590284049b26fd86a73ba1d266e0d124.png"></p><p>操作系统可以用Centos或者Debian系的都行，这个不影响</p><p><img src="https://img.duckk.org/2024/11/9c2a37c964381fffef7f43c54f5dada9.png"></p><p>填写密码，请务必牢记，这是后续连接服务器的唯一凭证</p><p><img src="https://img.duckk.org/2024/11/93827a20d07b8119098b5f6c447591a4.png"></p><p>如果服务器提供IPv6地址的话建议开启（你懂的 一般来说服务器厂商都会免费提供IPv6地址 具体流量和带宽资费就不知道了 Digital Ocean免费提供</p><p><img src="https://img.duckk.org/2024/11/d1e888ae9f470bc0819f3e03e84fb9e6.png"></p><p>之后即创建完成</p><p><img src="https://img.duckk.org/2024/11/c8a3f84627a4247619a6649ce4f66d2f.png"></p><h2 id="登录到服务器"><a href="#登录到服务器" class="headerlink" title="登录到服务器"></a>登录到服务器</h2><p>在这里我使用<code>Xshell</code>连接服务器</p><p>添加一个新服务器：</p><p><img src="https://img.duckk.org/2024/11/2934ebbc60d8b30613eb8e329a4f25cc.png"></p><p><code>Name</code>这里填你自己想给服务器命名的名字，<code>Host</code>这里填服务器厂商给你的服务器分配的IP地址，确认完毕后点击<code>OK</code></p><p><img src="https://img.duckk.org/2024/11/07d4a323f77b595a3da3f5fbf87f7d21.png"></p><p>之后选择，连接即可</p><p><img src="https://img.duckk.org/2024/11/9e20c709f877f67d0f61428bb3f2d303.png"></p><p>点击<code>Accept and Save</code>：</p><p><img src="https://img.duckk.org/2024/11/edcdeccbf88a1d97dff61b49d97131ff.png"></p><p>我们默认使用<code>root</code>账户进行登录：</p><p><img src="https://img.duckk.org/2024/11/ded61a6292d8eb48fd709983fb4fa91d.png"></p><p>输入你之前设定的密码，点击<code>OK</code>进行登录：</p><p><img src="https://img.duckk.org/2024/11/18d814a82d10249ec9515323015126ad.png"></p><p>此时登录完成：</p><p><img src="https://img.duckk.org/2024/11/e341f785d943eaff26e254ab8c8c6e67.png"></p><h2 id="安装qBittorrent-nox"><a href="#安装qBittorrent-nox" class="headerlink" title="安装qBittorrent-nox"></a>安装qBittorrent-nox</h2><p><strong>qBittorrent-nox</strong>是<strong>qBittorrent</strong>的服务器版，用户通过WebUI进行访问（hhh 是不是和平时NAS上的qb一样了</p><h3 id="1-安装"><a href="#1-安装" class="headerlink" title="1. 安装"></a>1. 安装</h3><p>在Ubuntu&#x2F;Debian上安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt update</span><br><span class="line"><span class="built_in">sudo</span> apt install qbittorrent-nox -y</span><br></pre></td></tr></table></figure><p>在CentOS&#x2F;RHEL上安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> yum install epel-release -y</span><br><span class="line"><span class="built_in">sudo</span> yum install qbittorrent-nox -y</span><br></pre></td></tr></table></figure><h3 id="2-配置qBittorrent-nox"><a href="#2-配置qBittorrent-nox" class="headerlink" title="2. 配置qBittorrent-nox"></a>2. 配置qBittorrent-nox</h3><p>安装完成后，运行以下命令启动qBittorrent：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">qbittorrent-nox</span><br></pre></td></tr></table></figure><p>第一次启动会弹出法律声明，同意确定按<code>y</code>回车即可：</p><p><img src="https://img.duckk.org/2024/11/13d00e285ede21e65696fe3f48849803.png"></p><p>之后会弹出用户名和密码，用户名默认就是<code>admin</code>，至于密码qb后期版本更新之后变成随机的了：</p><p><img src="https://img.duckk.org/2024/11/dcdda1d172ea2b337cd891557f3f5182.png"></p><p>之后通过<code>http://IP:8080</code>进行访问，进入WebUI（是不是很熟悉hhhh 此时请务必重新设置密码，随机密码每次开启都会重置</p><p><img src="https://img.duckk.org/2024/11/b155a1078e4ae9e637652c9a82c0a4cc.png"></p><p>此时回到<code>Xshell</code>，按住<code>Ctrl + C</code>，先暂时退出服务器的qbittorrent-nox进程</p><p>之后用下面的指令启用后台运行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">qbittorrent-nox -d</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在博客中添加Live图</title>
      <link href="/2024/08/15/Tech/%E5%9C%A8%E5%8D%9A%E5%AE%A2%E4%B8%AD%E6%B7%BB%E5%8A%A0Live%E5%9B%BE/"/>
      <url>/2024/08/15/Tech/%E5%9C%A8%E5%8D%9A%E5%AE%A2%E4%B8%AD%E6%B7%BB%E5%8A%A0Live%E5%9B%BE/</url>
      
        <content type="html"><![CDATA[<h1 id="为博客添加Live图"><a href="#为博客添加Live图" class="headerlink" title="为博客添加Live图"></a>为博客添加Live图</h1><div style="width: 80%; max-width: 640px; aspect-ratio: 1; margin: auto;"     data-live-photo     data-photo-src="https://img.juniortree.com/202408151005027.JPEG"     data-video-src="https://img.juniortree.com/202408151005487.MOV"></div></br><div style="width: 80%; max-width: 640px; aspect-ratio: 1; margin: auto;"     data-live-photo     data-photo-src="https://img.juniortree.com/202408151525591.JPEG"     data-video-src="https://img.juniortree.com/202408152105218.MOV"></div></br><p>Apple提供了很生动的Live实况图，在实际展示的过程中非常生动形象，在撰写博客的过程中，我自己也尝试将博客中嵌入实况图片</p><p>其实Apple提供的iCloud网页版为我们提供了很好的示例，为了实现本文开始的效果，我们也将使用Apple官方所提供的方法</p><h2 id="资源准备"><a href="#资源准备" class="headerlink" title="资源准备"></a>资源准备</h2><p>在了解如何实现Live实况图效果的时候，我们需要了解实况图的组成</p><p>实况图本身是由一张图片和视频文件组成，我建议你从iCloud官网或者使用数据线导出：</p><h3 id="iCould下载"><a href="#iCould下载" class="headerlink" title="iCould下载"></a>iCould下载</h3><p><img src="https://img.juniortree.com/202408152117995.png"></p><h3 id="数据线导出"><a href="#数据线导出" class="headerlink" title="数据线导出"></a>数据线导出</h3><p>同时可以看到存在 <code>JPG</code>、<code>PNG</code>、<code>HEIC</code>等多种图片文件和 <code>MOV</code>等视频文件，官方对图片文件没有具体要求，不过有博主推荐都转换成 <code>JPG</code>文件，可以都尝试一下</p><p><img src="https://img.juniortree.com/202408152118328.png"></p><p><img src="https://img.juniortree.com/202408152119920.png"></p><h3 id="上传图床"><a href="#上传图床" class="headerlink" title="上传图床"></a>上传图床</h3><p>我平时写MD喜欢使用图床，我建议你将图片和视频都上传图床，从而分别获得图片和视频图床链接</p><h2 id="MD插入"><a href="#MD插入" class="headerlink" title="MD插入"></a>MD插入</h2><p>MD文档的插入分为两部分：</p><ul><li><code>&lt;script&gt;</code>标签的插入</li><li>嵌入网页的插入<br>在这其中，请将 <code>data-photo-src</code>和 <code>data-video-src</code>替换成你上传图床的图片和视频链接</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;width: 80%; max-width: 640px; aspect-ratio: 1; margin: auto;&quot;</span></span></span><br><span class="line"><span class="tag">     <span class="attr">data-live-photo</span></span></span><br><span class="line"><span class="tag">     <span class="attr">data-photo-src</span>=<span class="string">&quot;https://...&quot;</span></span></span><br><span class="line"><span class="tag">     <span class="attr">data-video-src</span>=<span class="string">&quot;https://...&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.apple-livephotoskit.com/lpk/1/livephotoskit.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>当然如果你在博客内可以设置代码注入，可以将 <code>&lt;script&gt;</code>代码插入到文章页当中去，那么可以不要在MD文档中插入</p><p>以下是一个MD文档示例：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">### Live Photo 示例</span></span><br><span class="line"></span><br><span class="line">以下是一个 Live Photo 的嵌入示例：</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;width: 80%; max-width: 640px; aspect-ratio: 1; margin: auto;&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">     <span class="attr">data-live-photo</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">     <span class="attr">data-photo-src</span>=<span class="string">&quot;https://...&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">     <span class="attr">data-video-src</span>=<span class="string">&quot;https://...&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.apple-livephotoskit.com/lpk/1/livephotoskit.js&quot;</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h2 id="踩过的坑"><a href="#踩过的坑" class="headerlink" title="踩过的坑"></a>踩过的坑</h2><ol><li><strong>图床跨域访问</strong>：<br>如果你是自建图床，请务必开启<strong>跨域访问</strong>，而且如果你的图床使用了CDN回源，请务必配置CDN的<strong>跨域访问</strong>，这个问题困扰了我很久，如果你按照上述配置出现以下情形：<br><img src="https://img.juniortree.com/202408152140537.png"><br>建议按住 <code>F12</code>进入浏览器控制台，看看是不是出现报错，如果出现这种 <code>blocked by CORS</code>基本上就是跨域访问没跑了<br><img src="https://img.juniortree.com/202408152141712.png"></li><li><strong>浏览器支持</strong>：<br>Apple提供的方案并不支持所有的浏览器，有些浏览器可能不能完全兼容，建议使用Chrome浏览器进行调试，并且停用缓存</li><li><strong><code>&lt;iframe&gt;</code>标签实现</strong>：<br>有老哥通过<code>&lt;iframe&gt;</code>标签实现了一样的效果，以下是我通过GPT写的一个demo，未尝试过：</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;zh-CN&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Live Photo<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.apple-livephotoskit.com/lpk/1/livephotoskit.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.live-photo-container</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">            aspect-ratio: <span class="number">1</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;live-photo&quot;</span> <span class="attr">class</span>=<span class="string">&quot;live-photo-container&quot;</span> <span class="attr">data-live-photo</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 获取 URL 参数</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> urlParams = <span class="keyword">new</span> <span class="title class_">URLSearchParams</span>(<span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">search</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> photoSrc = urlParams.<span class="title function_">get</span>(<span class="string">&#x27;photo&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> videoSrc = urlParams.<span class="title function_">get</span>(<span class="string">&#x27;video&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 动态设置图片和视频链接</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> livePhotoElement = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;live-photo&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">        livePhotoElement.<span class="title function_">setAttribute</span>(<span class="string">&#x27;data-photo-src&#x27;</span>, photoSrc);</span></span><br><span class="line"><span class="language-javascript">        livePhotoElement.<span class="title function_">setAttribute</span>(<span class="string">&#x27;data-video-src&#x27;</span>, videoSrc);</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">### Live Photo 示例</span></span><br><span class="line"></span><br><span class="line">以下是一个通过 <span class="code">`&lt;iframe&gt;`</span> 嵌入的 Live Photo 示例：</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">&quot;live-photo-iframe.html?photo=https://...&amp;video=https://...&quot;</span> </span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">width</span>=<span class="string">&quot;320&quot;</span> </span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">height</span>=<span class="string">&quot;320&quot;</span> </span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">frameborder</span>=<span class="string">&quot;0&quot;</span> </span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">allowfullscreen</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>这样的好处是我们不必在每次写作后维护这么多的html标签，你需要将第一个文件上传到网站的某个目录下，然后在标签中调用</p><blockquote><p>参考文章：<a href="https://developer.apple.com/documentation/livephotoskitjs">LivePhotosKit JS</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术 </tag>
            
            <tag> 网站 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>随想——晚风</title>
      <link href="/2024/08/14/%E6%97%A5%E5%B8%B8/%E9%9A%8F%E6%83%B3%E2%80%94%E2%80%94%E6%99%9A%E9%A3%8E/"/>
      <url>/2024/08/14/%E6%97%A5%E5%B8%B8/%E9%9A%8F%E6%83%B3%E2%80%94%E2%80%94%E6%99%9A%E9%A3%8E/</url>
      
        <content type="html"><![CDATA[<p>“晚风依旧很温柔”</p><iframe type="music" frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=1848190450&auto=1&height=66"></iframe><p><img src="https://img.duckk.org/2024/11/4009f6d146571b75682f8227b3766aa1.heic"></p>]]></content>
      
      
      <categories>
          
          <category> 日常 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 闲聊 </tag>
            
            <tag> 随想 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows下搭建求生之路2专用原版和插件服务器</title>
      <link href="/2024/08/13/Tech/Windows%E4%B8%8B%E6%90%AD%E5%BB%BA%E6%B1%82%E7%94%9F%E4%B9%8B%E8%B7%AF2%E4%B8%93%E7%94%A8%E5%8E%9F%E7%89%88%E5%92%8C%E6%8F%92%E4%BB%B6%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
      <url>/2024/08/13/Tech/Windows%E4%B8%8B%E6%90%AD%E5%BB%BA%E6%B1%82%E7%94%9F%E4%B9%8B%E8%B7%AF2%E4%B8%93%E7%94%A8%E5%8E%9F%E7%89%88%E5%92%8C%E6%8F%92%E4%BB%B6%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="Windows下搭建求生之路2专用原版和插件服务器"><a href="#Windows下搭建求生之路2专用原版和插件服务器" class="headerlink" title="Windows下搭建求生之路2专用原版和插件服务器"></a>Windows下搭建求生之路2专用原版和插件服务器</h1><p>寒假期间和同学高强度打求生，但无奈游戏内本地服务器联机延时过高，平均时延在100ms往上，而且无法加插件实现多人房，因此琢磨了一下如何自己搭建求生之路2专用服务器。无奈网上大多教程是基于Linux的，部分教程也较老，我自己也踩了很多坑，因此写下这篇博客来分享和帮助大家避坑。</p><h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><p>本教程基于Windows11家庭版，可以运行到所有Windows版本。</p><h2 id="原版服务器安装"><a href="#原版服务器安装" class="headerlink" title="原版服务器安装"></a>原版服务器安装</h2><p>我们需要先下载<a href="https://steamcdn-a.akamaihd.net/client/installer/steamcmd.zip">SteamCMD</a></p><p><img src="https://s2.loli.net/2024/02/07/hKHoCjPZ7Y1TztJ.png"></p><p>解压获得SteamCMD文件。<strong>注意：文件目录不要带有中文</strong></p><p><del>从文件我们可以看出SteamCMD是一个很古早的项目（bushi</del></p><p><img src="https://s2.loli.net/2024/02/07/QKSncm6pkorFVi3.png"></p><p>之后我们需要创建一个<code>.bat</code>文件来启动安装程序，我们先新建一个文本文件</p><p>然后将下面的代码复制进去</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">start</span> steamcmd.exe +login anonymous +force_install_dir l4d2_sv +app_update <span class="number">222860</span> validate +quit</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2024/02/07/LqazbojRPUTlmDW.png"></p><p>点击左上角<code>文件</code>，点击<code>另存为</code></p><p><img src="https://s2.loli.net/2024/02/07/8fDyPw7LkgxBui2.png"></p><p>保存类型选择<code>所有文件（*.*)</code>，文件名改为<code>.bat</code>，最后点击保存</p><p><img src="https://s2.loli.net/2024/02/07/RXhdGabvlAVIEp5.png"></p><p>然后再回到刚开始我们存放SteamCMD的那个文件夹，会发现多出了一个文件，删除文本文件</p><p><img src="https://s2.loli.net/2024/02/07/8FBofTDPKvHnXgG.png"></p><p>现在双击运行红框内文件</p><p><img src="https://s2.loli.net/2024/02/07/QRxqg3cmJIu682i.png"></p><p>运行成功后会弹出一个黑漆漆的窗口，此时服务器配置文件开始下载，下载大小在8G左右，如果你有科学上网环境的话建议开启，不然可能会出现卡顿</p><p>当安装完成之后窗口会自动关闭，此时我们打开文件夹可以看到多出了很多文件</p><p><img src="https://s2.loli.net/2024/02/07/4FgRPEBCquTQOed.png"></p><p>此时打开<code>l4d2_sv</code>文件夹，找到下面的<code>srcds</code>可执行文件，双击打开</p><p><img src="https://s2.loli.net/2024/02/07/aKoGwVHU5uqxLX4.png"></p><p>由于我们家用电脑没有公网IP，因此我们在这里先将网络改为<code>局域网</code>再用其他的内网穿透软件实现联机功能，RCON密码可以随便写，我这里以<code>666</code>为例</p><p><img src="https://s2.loli.net/2024/02/07/edLsz5hUm1l6QNS.png"></p><p>点击<code>开始服务器</code>之后等待片刻即可进入</p><p><img src="https://s2.loli.net/2024/02/07/Hbfhj6VgztnJUx2.png"></p><p>之后玩家可以通过内网穿透后的IP进入到服务器中，这里以<code>樱花内网穿透</code>为例</p><p><img src="https://s2.loli.net/2024/02/07/1AZaRytVKWHe6iL.png"></p><p>之后打开求生之路游戏客户端，选择<code>选项</code>–&gt;<code>键盘/鼠标</code></p><p><img src="https://s2.loli.net/2024/02/07/uHcVBKTt7svLbRd.png"></p><p>之后选择<code>允许使用开发者控制台</code>使其变为<code>已启用</code></p><p><img src="https://s2.loli.net/2024/02/07/YJh6lyVbTFar1xU.png"></p><p>返回主界面，按键盘上的<code>~</code>进入控制台</p><p><img src="https://s2.loli.net/2024/02/07/FywcJfiHm19G2zj.png"></p><p>输入代码<code>connect 内网穿透后的地址</code></p><p><img src="https://s2.loli.net/2024/02/07/Y5WMXkAlvs8a1yG.png"></p><p>到此原版服务器的搭建完成</p><h2 id="插件服务器安装"><a href="#插件服务器安装" class="headerlink" title="插件服务器安装"></a>插件服务器安装</h2><p>插件服务器的安装要在原版服务器的基础上，插件我们采用大神的豆瓣插件整合包，这里我给出了云盘资源：<a href="https://alist.aicnal.online/Share/Software">AList网盘</a></p><p><img src="https://s2.loli.net/2024/02/07/ethkxbj3uVg9Y5M.png"></p><p>我们直接将它下载下来，解压得到以下文件</p><p><img src="https://s2.loli.net/2024/02/07/6ZqxuPAamYlostU.png"></p><p>现在我们将文件全部复制到服务器的<code>l4d2_sv</code>中去</p><p><img src="https://s2.loli.net/2024/02/07/aIg6CuljyiqcwXE.png"></p><p>双击运行<code>JSGME.exe</code>，打开插件安装程序</p><p><img src="https://s2.loli.net/2024/02/07/dES6KtY2mjUNHzF.png"></p><p>此时选择自己需要的插件进行安装即可，安装完成之后重启服务器来重载插件，此时重新启动服务器后我们要关闭<code>安全（Valve反作弊）</code></p><p><img src="https://s2.loli.net/2024/02/10/T2nXOjhU3QdMKay.png"></p><p>此时再打开服务器即为插件服</p><h2 id="结尾"><a href="#结尾" class="headerlink" title="结尾"></a>结尾</h2><p>本文简单介绍了求生之路2专用服务器的搭建过程，其中还涉及大量的技术点由于篇幅设置还未涉及，还望多多指教。至于专用服务器的优点大家可以参考Steam社区的这篇文章：<a href="https://steamcommunity.com/sharedfiles/filedetails/?id=2595030698&searchtext=%E4%B8%93%E7%94%A8%E6%9C%8D%E5%8A%A1%E5%99%A8">为什么不要使用本地服务器游玩</a></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术 </tag>
            
            <tag> 游戏 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>WSL学习笔记</title>
      <link href="/2024/08/12/Note/WSL%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
      <url>/2024/08/12/Note/WSL%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="WSL学习笔记"><a href="#WSL学习笔记" class="headerlink" title="WSL学习笔记"></a>WSL学习笔记</h1><blockquote><p>适用于 Linux 的 Windows 子系统 (WSL) 是 Windows 的一项功能，可用于在 Windows 计算机上运行 Linux 环境，而无需单独的虚拟机或双引导。 WSL 旨在为希望同时使用 Windows 和 Linux 的开发人员提供无缝高效的体验。</p></blockquote><p>本笔记主要介绍<strong>WSL2</strong>。</p><h2 id="WSL的版本区别"><a href="#WSL的版本区别" class="headerlink" title="WSL的版本区别"></a>WSL的版本区别</h2><p>WSL有两个版本，两个版本不仅在名字上，在技术内核上也有巨大区别:</p><ol><li><strong>WSL1</strong>：是较早的版本，通过将Linux内核调用转换为Windows内核调用，使得Linux应用程序可以在Windows上运行。虽然性能比起传统虚拟机要好，但还是有一些局限性，例如I&#x2F;O性能相对较低。对于<strong>WSL1</strong>你可以理解为将Linux翻译成Windows进行执行，本质上并不运行真正的Linux的系统，因此存在着缺陷。</li><li><strong>WSL2</strong>：是较新的版本，使用了真正的Linux内核，运行在轻量级的虚拟机中。它提供了更好的性能，尤其是在文件I&#x2F;O操作上。同时，WSL 2能够更好地兼容Linux应用程序，几乎所有在Linux上能运行的应用程序都可以在WSL 2上运行。实际上整个Windows和Linux都运行在基于<strong>Hyperv</strong>的虚拟化平台上，本质上是一个大虚拟机，你可以理解为<strong>WSL2</strong>上运行的是真正的Linux系统，具有完整Linux内核的系统。</li></ol><table><thead><tr><th>功能</th><th>WSL 1</th><th>WSL 2</th></tr></thead><tbody><tr><td>Windows 和 Linux 之间的集成</td><td>✅</td><td>✅</td></tr><tr><td>启动时间短</td><td>✅</td><td>✅</td></tr><tr><td>与传统虚拟机相比，占用的资源量少</td><td>✅</td><td>✅</td></tr><tr><td>可以与当前版本的 VMware 和 VirtualBox 一起运行</td><td>✅</td><td>❌</td></tr><tr><td>托管 VM</td><td>❌</td><td>✅</td></tr><tr><td>完整的 Linux 内核</td><td>❌</td><td>✅</td></tr><tr><td>完全的系统调用兼容性</td><td>❌</td><td>✅</td></tr><tr><td>跨 OS 文件系统的性能</td><td>✅</td><td>❌</td></tr><tr><td>systemd 支持</td><td>❌</td><td>✅</td></tr><tr><td>IPv6 支持</td><td>✅</td><td>✅</td></tr></tbody></table><h2 id="WSL2使用的前置条件"><a href="#WSL2使用的前置条件" class="headerlink" title="WSL2使用的前置条件"></a>WSL2使用的前置条件</h2><h3 id="CPU虚拟化"><a href="#CPU虚拟化" class="headerlink" title="CPU虚拟化"></a>CPU虚拟化</h3><p><img src="https://img.duckk.org/2024/11/f0cc72693c2934e74dac2c7408bbb859.png"></p><h3 id="Windows功能"><a href="#Windows功能" class="headerlink" title="Windows功能"></a>Windows功能</h3><p>其中有两个功能：</p><ol><li>虚拟化平台</li><li>适用于Linux的Windows子系统</li></ol><p><img src="https://img.duckk.org/2024/11/76cb7809d2c861ed87e09f95595166f2.png"></p><h2 id="安装系统"><a href="#安装系统" class="headerlink" title="安装系统"></a>安装系统</h2><p>直接使用<code>powershell</code>进行安装：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wsl <span class="literal">--install</span> <span class="literal">--web-download</span></span><br></pre></td></tr></table></figure><p>其中<code>web-download</code>是其中的一个选项，此选项会从微软的在线服务器下载并安装最新的WSL版本、Linux内核和相关组件，而不依赖于你当前Windows系统中的Windows Update或预装包。这个选项非常有用，尤其是在你希望确保安装最新版本的WSL时，或者当你的系统配置限制了使用本地或离线安装时。</p><p>如果在国内环境的话建议使用，减少了因为网络问题而无法下载的问题</p><p>此时下载完成之后会显示：</p><p><img src="https://img.duckk.org/2024/11/9df6ab32514fc483540ee6df8068b42f.png"></p><p>之后安装要求输入<code>root</code>用户名与密码：</p><p><img src="https://img.duckk.org/2024/11/21ff24c493e5a11f5a98a61612cc6eb7.png"></p><p>安装完成之后会自动进入终端：</p><p><img src="https://img.duckk.org/2024/11/fe2f693defc3293f467fe55753cb5637.png"></p><p>即默认<strong>WSL</strong>安装完成</p><h3 id="其他版本WSL安装"><a href="#其他版本WSL安装" class="headerlink" title="其他版本WSL安装"></a>其他版本WSL安装</h3><p>目前<strong>WSL2</strong>已经支持几乎所有的Linux发行版，我们可以通过以下指令进行查看：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wsl <span class="literal">--list</span> <span class="literal">--online</span></span><br></pre></td></tr></table></figure><p><img src="https://img.duckk.org/2024/11/9afae10ba0ffa4d7dc522a5f626160aa.png"></p><p>常见的官方支持的发行版有：</p><table><thead><tr><th>NAME</th><th>FRIENDLY NAME</th></tr></thead><tbody><tr><td>Ubuntu</td><td>Ubuntu</td></tr><tr><td>Debian</td><td>Debian GNU&#x2F;Linux</td></tr><tr><td>kali-linux</td><td>Kali Linux Rolling</td></tr><tr><td>Ubuntu-18.04</td><td>Ubuntu 18.04 LTS</td></tr><tr><td>Ubuntu-20.04</td><td>Ubuntu 20.04 LTS</td></tr><tr><td>Ubuntu-22.04</td><td>Ubuntu 22.04 LTS</td></tr><tr><td>Ubuntu-24.04</td><td>Ubuntu 24.04 LTS</td></tr><tr><td>OracleLinux_7_9</td><td>Oracle Linux 7.9</td></tr><tr><td>OracleLinux_8_7</td><td>Oracle Linux 8.7</td></tr><tr><td>OracleLinux_9_1</td><td>Oracle Linux 9.1</td></tr><tr><td>openSUSE-Leap-15.6</td><td>openSUSE Leap 15.6</td></tr><tr><td>SUSE-Linux-Enterprise-15-SP5</td><td>SUSE Linux Enterprise 15 SP5</td></tr><tr><td>SUSE-Linux-Enterprise-Server-15-SP6</td><td>SUSE Linux Enterprise Server 15 SP6</td></tr><tr><td>openSUSE-Tumbleweed</td><td>openSUSE Tumbleweed</td></tr></tbody></table><p>其他一些发行版可以通过其他方式进行安装，可以通过下载root文件手动安装，本文在这里不做介绍</p><p>这里我们安装<strong>Kali-linux</strong>：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wsl <span class="literal">--install</span> kali<span class="literal">-linux</span> <span class="literal">--web-download</span></span><br></pre></td></tr></table></figure><p>其安装过程与安装<strong>Ubuntu</strong>类似</p><p><img src="https://img.duckk.org/2024/11/89ac8d106aec8c66adb5425be7742cc7.png"></p><h2 id="WSL的基本指令"><a href="#WSL的基本指令" class="headerlink" title="WSL的基本指令"></a>WSL的基本指令</h2><p>1.<strong>系统镜像管理</strong>：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wsl <span class="literal">--list</span> <span class="literal">-v</span></span><br></pre></td></tr></table></figure><p>这里显示了<strong>WSL</strong>中所有的子系统以及运行状态</p><p><img src="https://img.duckk.org/2024/11/5ddaa69e3e6f4769329b372a1523bc6a.png"></p><p>其中<code>*</code>代表目前<strong>WSL</strong>中默认启动的系统</p><ol start="2"><li><strong>默认系统的切换</strong>：</li></ol><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wsl <span class="literal">--set-default</span> &lt;NAME&gt;</span><br></pre></td></tr></table></figure><p>这里的<code>NAME</code>指的是系统的名字，请务必注意区分大小写，比如说我现在切换为<code>Ubuntu</code>：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wsl <span class="literal">--set-default</span> Ubuntu</span><br></pre></td></tr></table></figure><p><img src="https://img.duckk.org/2024/11/c21da55b91e0914dbbb44493ba796943.png"></p><p>之后我们再执行1中的命令：</p><p><img src="https://img.duckk.org/2024/11/55a8f549e03b38f3ff551fc287795c19.png"></p><p>此时默认系统以及被切换为<code>Ubuntu</code></p><ol start="3"><li><strong>系统的启动</strong>：</li></ol><p><strong>PowerShell</strong>右上箭头，后打开后选中你想要运行的系统：</p><p><img src="https://img.duckk.org/2024/11/e216ad49fc13ef0924e6389770e3c821.png"></p><p>启动速度很快，几乎秒开（看人缘 偶尔快）：</p><p><img src="https://img.duckk.org/2024/11/e50c99d22092222b466d9d84502d9cb4.png"></p><p>如果你想要通过命令行启动系统，可以使用：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wsl <span class="literal">-d</span> &lt;NAME&gt;</span><br></pre></td></tr></table></figure><p><img src="https://img.duckk.org/2024/11/7a36bf3360d9f77ba1035dc89766f22a.png"></p><ol start="4"><li><strong>系统的关闭</strong>：</li></ol><ul><li>直接关闭终端</li><li>使用<code>exit</code>，出现<code>logout</code>即为退出登录成功</li></ul><p><img src="https://img.duckk.org/2024/11/fcdf20e09dbbf0e4d10a4e9f496672c3.png"></p><ol start="5"><li><strong>系统的删除</strong>：</li></ol><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wsl <span class="literal">--unregister</span> &lt;NAME&gt;</span><br></pre></td></tr></table></figure><p><img src="https://img.duckk.org/2024/11/d5bfd31dae041c995139be3828abd6dc.png"></p><ol start="6"><li><strong>镜像的导出</strong>：</li></ol><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wsl <span class="literal">--export</span> &lt;NAME&gt; &lt;EXPORT NAME&gt;</span><br></pre></td></tr></table></figure><p><img src="https://img.duckk.org/2024/11/be30ed8bddf273e1fab14504c2fb914b.png"></p><p>之后再对应文件夹内即可看到<code>tar</code>文件，进入文件后不难看出其包含了基本的Linux文件结构</p><p><img src="https://img.duckk.org/2024/11/7b41941a042b523b4bfd96cf65172ef1.png"></p><p>如果你想要切换其他的压缩格式，比如说<code>7z</code>、<code>rar</code>等等，你可以更改文件后缀名，比如说<code>Ubuntu.7z</code>等等</p><ol start="7"><li><strong>镜像的导入</strong>：</li></ol><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wsl <span class="literal">--import</span> &lt;NAME&gt; &lt;导入路径&gt; &lt;导出镜像路径&gt;</span><br></pre></td></tr></table></figure><p><img src="https://img.duckk.org/2024/11/91b5c9e2a8d98419da4e1d43299c1ed8.png"></p><p>之后进入导入路径查看：</p><p><img src="https://img.duckk.org/2024/11/f11db15f544bde29039f277fba914238.png"></p><p>这更加证实了<strong>WSL2</strong>是基于<strong>Hyperv</strong>的既定事实</p><h2 id="关于子系统的一些"><a href="#关于子系统的一些" class="headerlink" title="关于子系统的一些"></a>关于子系统的一些</h2><ol><li><strong>磁盘挂载</strong>：</li></ol><p><img src="https://img.duckk.org/2024/11/03af5bdd44b810f79c823f121ae1ee06.png"></p><p><strong>Windows</strong>下的C盘与D盘是作为磁盘直接挂载在<strong>WSL</strong>下的，这意味着两个文件是相通的</p><p>但由于<strong>WSL</strong>的<strong>I&#x2F;O</strong>性能很弱，如果你需要进行大量文件拷贝的操作的话，可以采取内网传输的方法</p><ol start="2"><li><strong>包管理器</strong>：</li></ol><p>之前说了<strong>WSL</strong>中运行的是完整Linux，因此我们可以直接使用包管理器进行安装，不过需要注意的是，使用前需要先进行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt update</span><br></pre></td></tr></table></figure><p>之后再进行安装，不然有可能会出错</p><ol start="3"><li><strong>显卡直连</strong>：</li></ol><p><strong>WSL</strong>本身支持显卡直连，你需要安装以下步骤：</p><ul><li><p>你需要安装适用于 Windows 的最新 NVIDIA 驱动程序，确保其支持 CUDA 和 WSL 2。</p></li><li><p>安装<strong>CUDA</strong>工具包：</p><ul><li><strong>添加 CUDA 存储库</strong>：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 7FA2AF80</span><br><span class="line"><span class="built_in">sudo</span> add-apt-repository <span class="string">&quot;deb http://developer.download.nvidia.com/compute/cuda/repos/ubuntu2204/x86_64/ /&quot;</span></span><br><span class="line"><span class="built_in">sudo</span> apt-get update</span><br></pre></td></tr></table></figure><ul><li><strong>安装 CUDA 工具包</strong>：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt-get install nvidia-cuda-toolkit</span><br></pre></td></tr></table></figure></li><li><p><strong>安装驱动</strong>：</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt-get install nvidia-utils-535</span><br></pre></td></tr></table></figure><ul><li><strong>验证</strong>：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvidia-smi</span><br></pre></td></tr></table></figure><p><img src="https://img.duckk.org/2024/11/9733c4992b921a8d3f7641f23efb2db6.png"></p><ol start="4"><li><strong>GUI显示</strong>：</li></ol><p>这个对我来说没啥用意义，不写了。。。</p><blockquote><p>参考文章：<a href="https://learn.microsoft.com/zh-cn/windows/wsl/">适用于 Linux 的 Windows 子系统文档</a><br><a href="https://www.bilibili.com/video/BV1tW42197za">超详细的WSL教程：Windows上的Linux子系统</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> Note </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker拉取镜像时的疑惑——Layer</title>
      <link href="/2024/08/11/Tech/Docker%E6%8B%89%E5%8F%96%E9%95%9C%E5%83%8F%E6%97%B6%E7%9A%84%E7%96%91%E6%83%91%E2%80%94%E2%80%94Layer/"/>
      <url>/2024/08/11/Tech/Docker%E6%8B%89%E5%8F%96%E9%95%9C%E5%83%8F%E6%97%B6%E7%9A%84%E7%96%91%E6%83%91%E2%80%94%E2%80%94Layer/</url>
      
        <content type="html"><![CDATA[<h1 id="Docker拉取镜像时的疑惑"><a href="#Docker拉取镜像时的疑惑" class="headerlink" title="Docker拉取镜像时的疑惑"></a>Docker拉取镜像时的疑惑</h1><p>不知道你在拉取镜像的时候会不会有这样的疑惑——我不是只拉取了一个镜像嘛，为什么会出现这么多的东西</p><p><img src="https://img.juniortree.com/202408111104626.png"></p><h2 id="Docker中Layer（层）的概念"><a href="#Docker中Layer（层）的概念" class="headerlink" title="Docker中Layer（层）的概念"></a>Docker中<code>Layer</code>（层）的概念</h2><p>在 Docker 中，镜像（Image）是由多个层（Layer）组成的。这些层就像文件系统的快照，每一层都记录了从上一层开始的一系列变化。我们上面下载时候出现的<code>ec99f8b99825</code>就属于一个层。</p><p>诸如 <code>ec99f8b99825</code> 的字符串是层的唯一标识符（Layer ID）。每一层都有一个独特的 ID，用来识别和引用这一层。拉取镜像时，Docker 会逐层下载这些层，并最终组合成一个完整的镜像。</p><p>使用层对于Docker镜像有以下好处：</p><ol><li><strong>共享和复用</strong>：如果不同的镜像共享相同的基础层，那么这些层只需要下载和存储一次，节省了磁盘空间和下载时间。</li><li><strong>分层构建</strong>：Dockerfile 中的每一条指令（如 <code>RUN</code>, <code>COPY</code>, <code>ADD</code> 等）都会创建一个新的层。这样如果你对 Dockerfile 进行了一些小的修改，Docker 只需要重建修改后的部分，而不需要重新构建整个镜像。</li></ol><h2 id="Layer的建立"><a href="#Layer的建立" class="headerlink" title="Layer的建立"></a><code>Layer</code>的建立</h2><p>当你使用 Dockerfile 创建镜像时，Docker 会按照 Dockerfile 中的每一条指令逐步构建镜像。每一条指令都会生成一个新的层，这个层记录了指令执行后文件系统的变化。最终镜像是由这些层按顺序叠加而成。</p><p>例如你现在有一个<code>Dockerfile</code>：</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> ubuntu:<span class="number">20.04</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> apt-get update</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> apt-get install -y python3</span></span><br><span class="line"><span class="keyword">COPY</span><span class="language-bash"> . /app</span></span><br></pre></td></tr></table></figure><ul><li>**<code>FROM ubuntu:20.04</code>**：这条指令会拉取一个基础镜像（ubuntu:20.04）。这个镜像已经包含了操作系统的基本文件系统，它是整个镜像的基础层。</li><li>**<code>RUN apt-get update</code>**：这条指令会更新包管理器的索引，并生成一个新的层，记录了更新后的系统状态。</li><li>**<code>RUN apt-get install -y python3</code>**：这条指令安装 Python3，同样会生成一个新的层，记录安装 Python3 后文件系统的变化。</li><li>**<code>COPY . /app</code>**：这条指令将当前目录下的所有文件复制到镜像中的 <code>/app</code> 目录，生成一个新的层，记录这些文件的添加。</li></ul><p>最终生成的镜像由这几层叠加而成，每一层都记录了自上一个层以来的文件系统的变化。</p><p><img src="https://img.juniortree.com/202408111128194.png"></p><h2 id="Cached-layers-（缓存层）"><a href="#Cached-layers-（缓存层）" class="headerlink" title="Cached layers （缓存层）"></a><code>Cached layers</code> （缓存层）</h2><p>当你运行构建时，构建器会尝试重用早期构建中的层。如果图像的某个图层未更改，则构建器会从构建缓存中选取它。如果自上次构建以来某个层发生了更改，则必须重新构建该层以及后续的所有层。</p><p>这样如果你对 Dockerfile 进行了一些小的修改，Docker 只需要重建修改后的部分，而不需要重新构建整个镜像。</p><p><img src="https://img.juniortree.com/202408111136181.png"></p><h2 id="Layer的复用"><a href="#Layer的复用" class="headerlink" title="Layer的复用"></a><code>Layer</code>的复用</h2><p>这个其实算比较常见了，如果你拉取的镜像共用同一<code>Layer</code>，那么它不必重新拉取，而是可以复用。</p><p>每个层都有一个唯一的 ID，用来标识这一层。这个 ID 是通过对层内容进行哈希计算生成的，因此相同内容的层总是会生成相同的 ID。</p><p>当你拉取一个镜像时，Docker 会显示每个层的 ID。例如，诸如 <code>ec99f8b99825</code> 的字符串就是层的 ID。Docker 会逐层检查本地是否已经有该层，如果有就会跳过下载，直接复用本地已有的层。如果没有，则会从镜像仓库下载该层。</p><h2 id="Layer的合并与文件系统"><a href="#Layer的合并与文件系统" class="headerlink" title="Layer的合并与文件系统"></a><code>Layer</code>的合并与文件系统</h2><p>当你拉取一个镜像时，Docker 会从远程仓库逐层下载组成该镜像的所有层。每个层下载完成后，Docker 会显示该层的状态，如 “下载完成”、“拉取完成”等。最终，这些层会在本地组合起来，形成完整的镜像。</p><p>虽然镜像由多个层组成，但在容器内，这些层会合并为一个统一的文件系统。容器看到的文件系统是这些层的叠加结果，每一层的更改会覆盖上层的内容。例如，如果在后面的层中删除或修改了文件，容器内的文件系统会反映这些变化，而不会看到原始的文件。</p><blockquote><p>参考文章：<a href="https://docs.docker.com/build/guide/layers/">Docs Docker | Layer</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker Compose部署随机图API</title>
      <link href="/2024/08/10/Tech/Docker%20Compose%E9%83%A8%E7%BD%B2%E9%9A%8F%E6%9C%BA%E5%9B%BEAPI/"/>
      <url>/2024/08/10/Tech/Docker%20Compose%E9%83%A8%E7%BD%B2%E9%9A%8F%E6%9C%BA%E5%9B%BEAPI/</url>
      
        <content type="html"><![CDATA[<h1 id="Docker-Compose部署随机图API"><a href="#Docker-Compose部署随机图API" class="headerlink" title="Docker Compose部署随机图API"></a>Docker Compose部署随机图API</h1><p>平时我们部署博客的时候，为了考虑美观会考虑使用随机图来作为文章的封面，现在有很多大佬愿意提供随机图API，通过API我们可以很方便地部署随机图，不必自己寻找图片，考虑带宽支出</p><p>不过很多时候一些公益API访问速度很慢，其中很多图片并不是我们所想要的，这时候我们就要考虑自建随机图API了，我参考了很多教程，他们中的很多都是基于<strong>宝塔</strong>来实现的，但其实我们不必要安装<strong>宝塔面板</strong>，完全可以在Docker内实现</p><h2 id="前置准备"><a href="#前置准备" class="headerlink" title="前置准备"></a>前置准备</h2><p>首先我们先建立一个文件夹来方式我们的<code>docker-compose</code>和其他的随机图文件，并且进入该文件夹内：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> random-pic &amp;&amp; <span class="built_in">cd</span> random-pic</span><br></pre></td></tr></table></figure><p>之后上传随机图的<code>php</code>文件，在这里有三个版本，其中一个版本我尝试过无法使用（可能是我没有正确使用？</p><h3 id="原理介绍"><a href="#原理介绍" class="headerlink" title="原理介绍"></a>原理介绍</h3><p>随机图的基本实现是通过新建一个站点，通过向站点发送请求，站点文件将请求重定向（301）到随机图所在图链，从而实现随机图切换：</p><p><img src="https://img.juniortree.com/202408102228129.png"></p><h3 id="图片准备"><a href="#图片准备" class="headerlink" title="图片准备"></a>图片准备</h3><p>获取到原始图片之后，我建议你对图片继续压缩处理，常见的诸如将图片转换成<code>webp</code>，这能有效减小文件体积，加快用户端的加载速度，如果你使用的是对象存储或者套了CDN的话，这能减小带宽和费用压力</p><p>在这里推荐一下来自<strong>Google</strong>的<strong>Squoosh</strong>，是一个很全能的图片压缩程序，不用下载，直接在浏览器中就可以使用：<a href="https://squoosh.app/">网址</a></p><p><img src="https://img.juniortree.com/202408102234079.png"></p><p>基本上支持了常见图片类型的转换和压缩：</p><p><img src="https://img.juniortree.com/202408102235817.png"></p><h3 id="版本1（不支持桌面与移动端切换"><a href="#版本1（不支持桌面与移动端切换" class="headerlink" title="版本1（不支持桌面与移动端切换"></a>版本1（不支持桌面与移动端切换</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//存放api随机图链接的文件名img.txt</span></span><br><span class="line"><span class="variable">$filename</span> = <span class="string">&quot;img.txt&quot;</span>;</span><br><span class="line"><span class="keyword">if</span>(!<span class="title function_ invoke__">file_exists</span>(<span class="variable">$filename</span>))&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;文件不存在&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">//从文本获取链接</span></span><br><span class="line"><span class="variable">$pics</span> = [];</span><br><span class="line"><span class="variable">$fs</span> = <span class="title function_ invoke__">fopen</span>(<span class="variable">$filename</span>, <span class="string">&quot;r&quot;</span>);</span><br><span class="line"><span class="keyword">while</span>(!<span class="title function_ invoke__">feof</span>(<span class="variable">$fs</span>))&#123;</span><br><span class="line">    <span class="variable">$line</span>=<span class="title function_ invoke__">trim</span>(<span class="title function_ invoke__">fgets</span>(<span class="variable">$fs</span>));</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$line</span>!=<span class="string">&#x27;&#x27;</span> &amp;&amp; <span class="title function_ invoke__">substr</span>(<span class="variable">$str</span> , <span class="number">0</span> , <span class="number">1</span>) != <span class="string">&#x27;#&#x27;</span>)&#123;</span><br><span class="line">        <span class="title function_ invoke__">array_push</span>(<span class="variable">$pics</span>, <span class="variable">$line</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">// 从数组随机获取链接</span></span><br><span class="line"><span class="comment">// $pic = $pics[array_rand($pics)];</span></span><br><span class="line"><span class="variable">$pic</span> = <span class="variable">$pics</span>[<span class="title function_ invoke__">random_int</span>(<span class="number">0</span>, <span class="title function_ invoke__">count</span>(<span class="variable">$pics</span>) - <span class="number">1</span>)]; <span class="comment"># 真随机</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">//返回指定格式</span></span><br><span class="line"><span class="variable">$type</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;type&#x27;</span>];</span><br><span class="line"><span class="keyword">switch</span>(<span class="variable">$type</span>)&#123;</span><br><span class="line"> </span><br><span class="line"><span class="comment">//JSON返回</span></span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;json&#x27;</span>:</span><br><span class="line">    <span class="title function_ invoke__">header</span>(<span class="string">&#x27;Content-type:text/json&#x27;</span>);</span><br><span class="line">    <span class="keyword">die</span>(<span class="title function_ invoke__">json_encode</span>([<span class="string">&#x27;pic&#x27;</span>=&gt;<span class="variable">$pic</span>]));</span><br><span class="line"> </span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">    <span class="keyword">die</span>(<span class="title function_ invoke__">header</span>(<span class="string">&quot;Location: <span class="subst">$pic</span>&quot;</span>));</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>此时你要在该文件夹内新建一个<code>img.txt</code>文件，用来保存随机图的图链，这里的图链就决定了你图片加载的速度，请务必选择一些速度比较快的图床，这能够有效提高使用体验和加载速度：</p><p><img src="https://img.juniortree.com/202408102236567.png"></p><p>此时你的文件结构应该如下，有<code>img.txt</code>和<code>random.php</code>两个文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── img.txt</span><br><span class="line">└── random.php</span><br></pre></td></tr></table></figure><h3 id="版本2（支持桌面与移动端切换"><a href="#版本2（支持桌面与移动端切换" class="headerlink" title="版本2（支持桌面与移动端切换"></a>版本2（支持桌面与移动端切换</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// 函数：访客设备</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">is_mobile</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">empty</span>(<span class="variable">$_SERVER</span>[<span class="string">&#x27;HTTP_USER_AGENT&#x27;</span>]) || </span><br><span class="line">        <span class="title function_ invoke__">strpos</span>(<span class="variable">$_SERVER</span>[<span class="string">&#x27;HTTP_USER_AGENT&#x27;</span>], <span class="string">&#x27;iPad&#x27;</span>) !== <span class="literal">false</span>) &#123;</span><br><span class="line">        <span class="comment">// 因为iPad有类似于PC的长宽比，所以我设置为电脑端</span></span><br><span class="line">            <span class="variable">$is_mobile</span> = <span class="literal">false</span>;</span><br><span class="line">        &#125; <span class="keyword">elseif</span> ( <span class="title function_ invoke__">strpos</span>(<span class="variable">$_SERVER</span>[<span class="string">&#x27;HTTP_USER_AGENT&#x27;</span>], <span class="string">&#x27;Mobile&#x27;</span>) !== <span class="literal">false</span> </span><br><span class="line">            || <span class="title function_ invoke__">strpos</span>(<span class="variable">$_SERVER</span>[<span class="string">&#x27;HTTP_USER_AGENT&#x27;</span>], <span class="string">&#x27;Android&#x27;</span>) !== <span class="literal">false</span></span><br><span class="line">            || <span class="title function_ invoke__">strpos</span>(<span class="variable">$_SERVER</span>[<span class="string">&#x27;HTTP_USER_AGENT&#x27;</span>], <span class="string">&#x27;Silk/&#x27;</span>) !== <span class="literal">false</span></span><br><span class="line">            || <span class="title function_ invoke__">strpos</span>(<span class="variable">$_SERVER</span>[<span class="string">&#x27;HTTP_USER_AGENT&#x27;</span>], <span class="string">&#x27;Kindle&#x27;</span>) !== <span class="literal">false</span></span><br><span class="line">            || <span class="title function_ invoke__">strpos</span>(<span class="variable">$_SERVER</span>[<span class="string">&#x27;HTTP_USER_AGENT&#x27;</span>], <span class="string">&#x27;BlackBerry&#x27;</span>) !== <span class="literal">false</span></span><br><span class="line">            || <span class="title function_ invoke__">strpos</span>(<span class="variable">$_SERVER</span>[<span class="string">&#x27;HTTP_USER_AGENT&#x27;</span>], <span class="string">&#x27;Opera Mini&#x27;</span>) !== <span class="literal">false</span></span><br><span class="line">            || <span class="title function_ invoke__">strpos</span>(<span class="variable">$_SERVER</span>[<span class="string">&#x27;HTTP_USER_AGENT&#x27;</span>], <span class="string">&#x27;Opera Mobi&#x27;</span>) !== <span class="literal">false</span> ) &#123;</span><br><span class="line">        <span class="variable">$is_mobile</span> = <span class="literal">true</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$is_mobile</span> = <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$is_mobile</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">// 电脑与手机用不同的壁纸</span></span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">is_mobile</span>())&#123;</span><br><span class="line">   <span class="comment">// 手机壁纸</span></span><br><span class="line">   <span class="variable">$filename</span> = <span class="string">&quot;img_mobile.txt&quot;</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">   <span class="comment">// 电脑壁纸</span></span><br><span class="line">   <span class="variable">$filename</span> = <span class="string">&quot;img.txt&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">//存放api随机图链接的文件名img.txt</span></span><br><span class="line"><span class="keyword">if</span>(!<span class="title function_ invoke__">file_exists</span>(<span class="variable">$filename</span>))&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;文件不存在&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">//从文本获取链接</span></span><br><span class="line"><span class="variable">$pics</span> = [];</span><br><span class="line"><span class="variable">$fs</span> = <span class="title function_ invoke__">fopen</span>(<span class="variable">$filename</span>, <span class="string">&quot;r&quot;</span>);</span><br><span class="line"><span class="keyword">while</span>(!<span class="title function_ invoke__">feof</span>(<span class="variable">$fs</span>))&#123;</span><br><span class="line">    <span class="variable">$line</span>=<span class="title function_ invoke__">trim</span>(<span class="title function_ invoke__">fgets</span>(<span class="variable">$fs</span>));</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$line</span>!=<span class="string">&#x27;&#x27;</span> &amp;&amp; <span class="title function_ invoke__">substr</span>(<span class="variable">$str</span> , <span class="number">0</span> , <span class="number">1</span>) != <span class="string">&#x27;#&#x27;</span>)&#123;</span><br><span class="line">        <span class="title function_ invoke__">array_push</span>(<span class="variable">$pics</span>, <span class="variable">$line</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">//从数组随机获取链接</span></span><br><span class="line"><span class="variable">$pic</span> = <span class="variable">$pics</span>[<span class="title function_ invoke__">array_rand</span>(<span class="variable">$pics</span>)];</span><br><span class="line"> </span><br><span class="line"><span class="comment">//返回指定格式</span></span><br><span class="line"><span class="variable">$type</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;type&#x27;</span>];</span><br><span class="line"><span class="keyword">switch</span>(<span class="variable">$type</span>)&#123;</span><br><span class="line"> </span><br><span class="line"><span class="comment">//JSON返回</span></span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;json&#x27;</span>:</span><br><span class="line">    <span class="title function_ invoke__">header</span>(<span class="string">&#x27;Content-type:text/json&#x27;</span>);</span><br><span class="line">    <span class="keyword">die</span>(<span class="title function_ invoke__">json_encode</span>([<span class="string">&#x27;pic&#x27;</span>=&gt;<span class="variable">$pic</span>]));</span><br><span class="line"> </span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">    <span class="keyword">die</span>(<span class="title function_ invoke__">header</span>(<span class="string">&quot;Location: <span class="subst">$pic</span>&quot;</span>));</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>使用这种方法，你需要额外添加一个<code>img_mobile.txt</code>文件来放置用于移动端的图片，文件内容同<code>img.txt</code></p><p>此时你的文件结构应该如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── img_mobile.txt</span><br><span class="line">├── img.txt</span><br><span class="line">└── random.php</span><br></pre></td></tr></table></figure><h3 id="版本3（尚未成功"><a href="#版本3（尚未成功" class="headerlink" title="版本3（尚未成功"></a>版本3（尚未成功</h3><p>此版本需要引用<code>Mobile_Detect.php</code>，用于检测用户的设备类型（如手机、平板、桌面等），你需要自行去GitHub上下载源码，并且将它放置到此文件夹内：</p><ol><li><strong>访问 GitHub 仓库</strong>：<ul><li>访问 <a href="https://github.com/serbanghita/Mobile-Detect">Mobile_Detect GitHub 仓库</a>。</li></ul></li><li><strong>下载 ZIP 文件</strong>：<ul><li>在仓库页面上，点击绿色的 “Code” 按钮，然后选择 “Download ZIP” 以下载整个仓库的压缩包。</li></ul></li><li>**解压并找到 <code>Mobile_Detect.php</code>**：<ul><li>解压下载的 ZIP 文件，在解压后的目录中，找到 <code>src/Mobile_Detect.php</code> 文件。</li></ul></li><li><strong>将文件放到正确的位置</strong>：<ul><li>将 <code>Mobile_Detect.php</code> 文件放置到你的项目目录中，例如 <code>/root/random-pic/</code>。</li></ul></li></ol><p>之后<code>random.php</code>的内容为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 函数：访客设备</span></span><br><span class="line"><span class="comment"> * 博客园：https://www.cnblogs.com/freephp/p/13979503.html</span></span><br><span class="line"><span class="comment"> * Github: https://github.com/serbanghita/Mobile-Detect</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">is_mobile</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">require</span>(<span class="keyword">__DIR__</span> . <span class="string">&#x27;/MobileDetect.php&#x27;</span>); <span class="comment">// 修正文件路径</span></span><br><span class="line">    <span class="variable">$MobileDetect</span> = <span class="keyword">new</span> <span class="title class_">Mobile_Detect</span>();</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$MobileDetect</span>-&gt;<span class="title function_ invoke__">isTablet</span>()) &#123;</span><br><span class="line">        <span class="comment">// 平板定义为PC类</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125; <span class="keyword">elseif</span> (<span class="variable">$MobileDetect</span>-&gt;<span class="title function_ invoke__">isMobile</span>()) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">// 电脑与手机用不同的壁纸</span></span><br><span class="line"><span class="variable">$filename</span> = <span class="title function_ invoke__">is_mobile</span>() ? <span class="string">&quot;img_mobile.txt&quot;</span> : <span class="string">&quot;img.txt&quot;</span>;</span><br><span class="line"> </span><br><span class="line"><span class="comment">// 存放api随机图链接的文件名</span></span><br><span class="line"><span class="keyword">if</span>(!<span class="title function_ invoke__">file_exists</span>(<span class="variable">$filename</span>))&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;文件不存在&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">// 从文本获取链接</span></span><br><span class="line"><span class="variable">$pics</span> = [];</span><br><span class="line"><span class="variable">$fs</span> = <span class="title function_ invoke__">fopen</span>(<span class="variable">$filename</span>, <span class="string">&quot;r&quot;</span>);</span><br><span class="line"><span class="keyword">while</span>(!<span class="title function_ invoke__">feof</span>(<span class="variable">$fs</span>))&#123;</span><br><span class="line">    <span class="variable">$line</span> = <span class="title function_ invoke__">trim</span>(<span class="title function_ invoke__">fgets</span>(<span class="variable">$fs</span>));</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$line</span> != <span class="string">&#x27;&#x27;</span> &amp;&amp; <span class="title function_ invoke__">substr</span>(<span class="variable">$line</span>, <span class="number">0</span>, <span class="number">1</span>) != <span class="string">&#x27;#&#x27;</span>)&#123; <span class="comment">// 修正变量名</span></span><br><span class="line">        <span class="title function_ invoke__">array_push</span>(<span class="variable">$pics</span>, <span class="variable">$line</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_ invoke__">fclose</span>(<span class="variable">$fs</span>);</span><br><span class="line"> </span><br><span class="line"><span class="comment">// 从数组随机获取链接</span></span><br><span class="line"><span class="variable">$pic</span> = <span class="variable">$pics</span>[<span class="title function_ invoke__">random_int</span>(<span class="number">0</span>, <span class="title function_ invoke__">count</span>(<span class="variable">$pics</span>) - <span class="number">1</span>)]; <span class="comment">// 真随机</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">// 返回指定格式</span></span><br><span class="line"><span class="variable">$type</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;type&#x27;</span>] ?? <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="keyword">switch</span>(<span class="variable">$type</span>)&#123;</span><br><span class="line"> </span><br><span class="line"><span class="comment">// JSON 返回</span></span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;json&#x27;</span>:</span><br><span class="line">    <span class="title function_ invoke__">header</span>(<span class="string">&#x27;Content-type: application/json&#x27;</span>); <span class="comment">// 修正 Content-type</span></span><br><span class="line">    <span class="keyword">die</span>(<span class="title function_ invoke__">json_encode</span>([<span class="string">&#x27;pic&#x27;</span> =&gt; <span class="variable">$pic</span>]));</span><br><span class="line"> </span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">    <span class="keyword">die</span>(<span class="title function_ invoke__">header</span>(<span class="string">&quot;Location: <span class="subst">$pic</span>&quot;</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>此时还是需要添加<code>img_mobile.txt</code>，同<strong>版本2</strong></p><p>此时文件结构如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── img_mobile.txt</span><br><span class="line">├── img.txt</span><br><span class="line">├── MobileDetect.php</span><br><span class="line">└── random.php</span><br></pre></td></tr></table></figure><h3 id="Docker-Compose部署"><a href="#Docker-Compose部署" class="headerlink" title="Docker Compose部署"></a>Docker Compose部署</h3><p>为了部署这个站点，在这里我们直接使用Docker Compose进行操作：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3.8&#x27;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">web:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">nginx:latest</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;9000:80&quot;</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/root/random-pic:/usr/share/nginx/html</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./default.conf:/etc/nginx/conf.d/default.conf</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">random-pic</span></span><br><span class="line">    <span class="attr">depends_on:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">php-fpm</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">mynetwork</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">php-fpm:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">php:7.4-fpm</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/root/random-pic:/usr/share/nginx/html</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">mynetwork</span></span><br><span class="line"></span><br><span class="line"><span class="attr">networks:</span></span><br><span class="line">  <span class="attr">mynetwork:</span></span><br><span class="line">    <span class="attr">driver:</span> <span class="string">bridge</span></span><br></pre></td></tr></table></figure><p>这里为了方便测试我们不占用80端口，而是使用9000端口，之后使用Nginx或者其他工具进行反代即可</p><p>此时不要急着启动容器，我们还需要定制一下<code>Nginx</code>的配置文件：</p><p>此时新建一个<code>default.conf</code></p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">    <span class="attribute">listen</span> <span class="number">80</span>;</span><br><span class="line">    <span class="attribute">server_name</span> localhost;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">root</span> /usr/share/nginx/html;</span><br><span class="line">    <span class="attribute">index</span> random.php;</span><br><span class="line"></span><br><span class="line">    <span class="section">location</span> <span class="regexp">~ \.php$</span> &#123;</span><br><span class="line">        <span class="attribute">include</span> fastcgi_params;</span><br><span class="line">        <span class="attribute">fastcgi_pass</span> php-fpm:<span class="number">9000</span>;</span><br><span class="line">        <span class="attribute">fastcgi_index</span> random.php;</span><br><span class="line">        <span class="attribute">fastcgi_param</span> SCRIPT_FILENAME <span class="variable">$document_root</span><span class="variable">$fastcgi_script_name</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>写入后保存，你的文件结构应该是这样的：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── default.conf</span><br><span class="line">├── docker-compose.yaml</span><br><span class="line">├── img_mobile.txt</span><br><span class="line">├── img.txt</span><br><span class="line">└── random.php</span><br></pre></td></tr></table></figure><p>之后正式启动容器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker compose up -d</span><br></pre></td></tr></table></figure><p>之后访问域名+端口即可看到随机图效果</p><h2 id="后语"><a href="#后语" class="headerlink" title="后语"></a>后语</h2><p>个人感觉给随机图域名套上CDN还是有意义的，因为这个严格来说也算个静态网站，如果有CDN缓存的话随机图的切换速度会变快很多</p><blockquote><p>参考文献：<a href="https://blognas.hwb0307.com/linux/docker/1363">Docker系列 WordPress系列 自建随机图API之静态壁纸</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术 </tag>
            
            <tag> Docker </tag>
            
            <tag> Nginx </tag>
            
            <tag> 网站 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于腾讯云EdgeOne的自适应webp转换</title>
      <link href="/2024/08/09/Tech/%E5%9F%BA%E4%BA%8E%E8%85%BE%E8%AE%AF%E4%BA%91EdgeOne%E7%9A%84%E8%87%AA%E9%80%82%E5%BA%94webp%E8%BD%AC%E6%8D%A2/"/>
      <url>/2024/08/09/Tech/%E5%9F%BA%E4%BA%8E%E8%85%BE%E8%AE%AF%E4%BA%91EdgeOne%E7%9A%84%E8%87%AA%E9%80%82%E5%BA%94webp%E8%BD%AC%E6%8D%A2/</url>
      
        <content type="html"><![CDATA[<h1 id="基于腾讯云EdgeOne的自适应webp转换"><a href="#基于腾讯云EdgeOne的自适应webp转换" class="headerlink" title="基于腾讯云EdgeOne的自适应webp转换"></a>基于腾讯云EdgeOne的自适应webp转换</h1><p>EdgeOne是腾讯云提出的边缘计算相关产品，和CloudFlare的小黄云类似，实际上大致等于CDN+安全防护，同时它还提供了边缘函数来提供我们使用，我们可以借助边缘函数实现一些功能，比如说自动将请求的<code>png</code>或<code>jpg</code>图片转换成<code>webp</code>，从而节省流量，加快网站的访问速度，目前暂时是免费的，直接开始白嫖</p><p>但是这个方法目前只适用于你使用自建图床或者专门给图床套了这个EO的情况，如果直接给主站使用的话可能会出现无法访问的情况？本人没有试过，还望大家反馈</p><h2 id="具体步骤"><a href="#具体步骤" class="headerlink" title="具体步骤"></a>具体步骤</h2><p>首先我们进入腾讯云EO的控制台：</p><p><img src="https://img.duckk.org/2024/11/7cf1bef0a6acd29e2187c998a0de15d0.png"></p><p>之后进入<strong>站点列表</strong>，选择你想要部署边缘函数的站点，进入到站点设置中：</p><p><img src="https://img.juniortree.com/202408092012580.png"></p><p>进入到左侧边栏：<strong>边缘函数</strong>，选择<strong>函数管理</strong>，在这里我们新建一个函数：</p><p><img src="https://img.duckk.org/2024/11/e1cfd3dece71a85222c0810a9c5fda8e.png"></p><p>在这里腾讯云提供了一些常用的预设，我们直接使用就好，这里我们为了自适应转<code>webp</code>，所以使用<strong>图片处理</strong>，选择完成之后点击下一步：</p><p><img src="https://img.duckk.org/2024/11/5659f66b59fa031f80d7fe66e967134f.png"></p><p>这里随便取一个名字，你自己以后维护的时候知道是什么函数就行，之后下滑点击<strong>创建并部署</strong></p><p><img src="https://img.duckk.org/2024/11/62f91c6b894fe1d6a87c8919756f547f.png"></p><p>成功创建函数之后会提示你添加<code>触发规则</code>，这个的意思是边缘函数不是自动执行的，需要有一定的触发条件，比如说绑定到某个域名上，或者碰到什么样的文件类型才会触发，我们现在先<strong>新增触发规则</strong>：</p><p><img src="https://img.duckk.org/2024/11/d8c4e9b98f84e8d6d2e20cc75fbc926a.png"></p><p>在这里我绑定了腾讯云COS的回源CDN域名，这里我的<strong>匹配类型</strong>选择<code>HOST</code>，也就是域名或者主机名，后面的值就是我对应图床的域名，确定完成之后点击<strong>确定</strong>，之后<strong>边缘函数</strong>会自动部署</p><p><img src="https://img.duckk.org/2024/11/e1542da3d528a9114d49a86d6d9e039d.png"></p><p>这个过程中你的EO可能会中断大概五分钟左右，之后如果控制台都显示已部署完成即部署成功</p><h2 id="检验"><a href="#检验" class="headerlink" title="检验"></a>检验</h2><p>那么我们应该如何检验呢，下面以其中一张照片为例</p><p>我首先通过诸如PicGo等软件将图片上传到腾讯云COS中去，之后得到CDN地址为：<a href="https://img.juniortree.com/202408091010252.png">https://img.juniortree.com/202408091010252.png</a></p><p>此时你会发现其文件还是<code>.png</code>后缀，就觉得失败了，但其实不是这样的</p><p>如果按照官方的教程，通过<code>curl</code>指令去查询文件元素，结果发现<code>Content-Type</code>还是<code>png</code>，觉得肯定是失败的</p><p><img src="https://img.duckk.org/2024/11/f6742701ce6e2c1c552c877647449b26.png"></p><p>我之前也被这个问题困扰了很久，也发过工单问过客服，但最终我还是搞明白了</p><p>首先我们需要将这个图片在浏览器中打开：</p><p><img src="https://img.duckk.org/2024/11/192cc058aab1f971949580b1814423ed.png"></p><p>按住<code>F12</code>打开开发者模式，选择<code>网络</code>：</p><p><img src="https://img.duckk.org/2024/11/e35e353dd0bac927fae7fbf06d3bd887.png"></p><p>此时再按<code>F5+Ctrl</code>强制刷新缓存，之后再观察右边的文件类型是不是<code>webp</code>，如果是则说明函数使用成功</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术 </tag>
            
            <tag> 网站 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一些思考，关于想要的</title>
      <link href="/2024/08/09/%E6%97%A5%E5%B8%B8/%E4%B8%80%E4%BA%9B%E6%80%9D%E8%80%83/"/>
      <url>/2024/08/09/%E6%97%A5%E5%B8%B8/%E4%B8%80%E4%BA%9B%E6%80%9D%E8%80%83/</url>
      
        <content type="html"><![CDATA[<h1 id="随想"><a href="#随想" class="headerlink" title="随想"></a>随想</h1><p>我们一开始所想要的，所追求的，并不是我们最后正在得到的</p><p>可能我们做很多事情的时候都会头脑发热，比如说还是读书时候跟风谈的恋爱、读大学的时候一门心思想学的专业、突发奇想想去学一门编程语言…</p><p>这些经历的最后结果我们不得而知，我也经常怀疑过我们做这些事情的价值——以前想过但是最后没有做成，那么这件事情就真的没有意义吗？</p><p>答案显而易见是否定的，成长过程中做出的每一个选择，走过的每一段路，在未来的某个时刻都会反哺我们。做当下最想做的就好了，至于得失兴盛，那是我们后来的判断</p>]]></content>
      
      
      <categories>
          
          <category> 日常 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 闲聊 </tag>
            
            <tag> 随想 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>自建图床的一点心得</title>
      <link href="/2024/08/08/Tech/%E8%87%AA%E5%BB%BA%E5%9B%BE%E5%BA%8A%E7%9A%84%E4%B8%80%E7%82%B9%E5%BF%83%E5%BE%97/"/>
      <url>/2024/08/08/Tech/%E8%87%AA%E5%BB%BA%E5%9B%BE%E5%BA%8A%E7%9A%84%E4%B8%80%E7%82%B9%E5%BF%83%E5%BE%97/</url>
      
        <content type="html"><![CDATA[<h1 id="自建图床的一点心得"><a href="#自建图床的一点心得" class="headerlink" title="自建图床的一点心得"></a>自建图床的一点心得</h1><blockquote><p>没有恰任何钱，纯自费体验</p></blockquote><p>平时大家写MD的应该或多或少都接触过“图床”。图床原本是用作存储文章图片的，为的是能实现“即看即得”。我们不必再在本地保存，依赖于“图床”，确保了照片读取的快速与稳定。</p><p>实际上我也接触过一些“免费图床”，诸如著名的<code>sm.ms</code>、<code>telegraph</code>等等，但这些图床都存在一个问题——上传文件大小有限制、读取速度慢、大陆延时高；一些其他的图床则可能存在着“跑路”的问题，一些图片比较多或者追求稳定的朋友可能会选择使用“<strong>对象存储</strong>”自建图床。</p><h2 id="入坑"><a href="#入坑" class="headerlink" title="入坑"></a>入坑</h2><p>刚开始我使用对象存储搭建图床是因为我使用的本地图床加载速度太慢（服务器带宽小），而且我的博客还经常迁移，因此使用对象存储搭建图床，将文章中的图片做稳定化存储对于我来说无疑是重要和有意义的。</p><p>因为之前使用香港云服务器，托管商是<em>某云</em>，因此入坑他们家的对象存储，当时应该是刚刚推出对象存储服务，价格很便宜，一口气续了半年，第一次花了54.6，后来发现套餐选的不太行，又重新换，再多花了18块升级套餐</p><p><img src="https://img.juniortree.com/202408081210769.png"></p><p><img src="https://img.juniortree.com/202408081210807.png"></p><p>具体套餐如下：</p><p><img src="https://img.juniortree.com/202408081212842.png"></p><p>其实对于图床来说哪怕是最低的套餐都有点太多了，50G根本用不完，我写了半年的博客，甚至还存了一些视频只用了大概0.5G左右，绝大多数的空间被浪费了</p><p><img src="https://img.juniortree.com/202408081213896.png"></p><p>实际上用的过程中速度还是挺快的？节点在<strong>湖北十堰</strong>，只有一个节点，海外的访问速度很慢（这也是大多数对象存储存在的问题），必须套一个CDN使用，国内速度很好</p><p><img src="https://img.juniortree.com/202408081215724.png"></p><p>大概在十月份到期，续费大概要：</p><p><img src="https://img.juniortree.com/202408081301569.png"></p><p>价格确实有点贵</p><h2 id="其他方案"><a href="#其他方案" class="headerlink" title="其他方案"></a>其他方案</h2><p>后来使用了鹅厂的CDN服务，然后就了解了一下COS资费和价格</p><p>鹅厂的对象存储服务分为三种资源包：</p><ul><li>存储容量</li><li>流量</li><li>读写请求</li></ul><p>我写博客做图床所需要的容量并不多，10G足矣，又因为我又CDN，其回源流量资费更低，读写请求10万次价格很低，基本上可以忽略不计，那么这样算一下一年使用大厂对象存储做图床的价格大概是：</p><table><thead><tr><th>资源包类型</th><th>价格（元）</th></tr></thead><tbody><tr><td>存储容量（10G）</td><td>9.77</td></tr><tr><td>流量（CDN回源流量包 10G）</td><td>12. 42</td></tr><tr><td>读写请求（10万次）</td><td>0.83</td></tr></tbody></table><p>这样算下来一年对象存储图床的价格大概是：23.02元</p><p>如果再算上一年边缘计算EO的价格65元，总共的价格是88.02元，低于我原来单独使用对象存储的价格，而且新注册的用户还会送半年50G的存储容量</p><p>其中<strong>CDN回源流量包</strong>，你必须使用EO套到原COS的域名上</p><p>鹅厂的边缘计算也很有意思，本质是一个和CloudFlare代理一样的东西，只不过他在国内的访问速度更快😇（国外也有节点</p><p>除此之外还能抵抗DDOS攻击，套餐每月50G的流量是清洗过的流量，具体抵抗效果的还没试过</p><h2 id="自动转换"><a href="#自动转换" class="headerlink" title="自动转换"></a>自动转换</h2><p>前面说了边缘函数，其提供了能自动将<code>jpg</code>和<code>png</code>转换的功能</p><p><img src="https://img.juniortree.com/202408081320496.png"></p><p>目前还不要钱（卷起来卷起来</p><p><img src="https://img.juniortree.com/202408081321601.png"></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>某云的有些产品确实不错，诸如游戏云，香港云，不久前还推出了宁波大盘鸡，对象存储的速度也很快</p><p>不过我还是准备只用来写博客，某云的套餐就有点太多了，如果我不用来做图床，而是用来当下载站、数据湖可能会</p><p>考虑一下</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术 </tag>
            
            <tag> 闲聊 </tag>
            
            <tag> 网站 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>夏天夏天</title>
      <link href="/2024/08/08/%E6%97%A5%E5%B8%B8/%E5%A4%8F%E5%A4%A9%E5%A4%8F%E5%A4%A9/"/>
      <url>/2024/08/08/%E6%97%A5%E5%B8%B8/%E5%A4%8F%E5%A4%A9%E5%A4%8F%E5%A4%A9/</url>
      
        <content type="html"><![CDATA[<p>喜欢夏天，尤其是和你在一起的每一天</p><p><img src="https://img.duckk.org/2024/11/07e794582953a3b7d38a29ff1c15c527.heic"></p><p><img src="https://img.duckk.org/2024/11/a0bd52ef48cc65aa302f81a8a565e67a.heic"></p>]]></content>
      
      
      <categories>
          
          <category> 日常 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 闲聊 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>八月初</title>
      <link href="/2024/08/01/%E6%97%A5%E5%B8%B8/%E5%85%AB%E6%9C%88%E5%88%9D/"/>
      <url>/2024/08/01/%E6%97%A5%E5%B8%B8/%E5%85%AB%E6%9C%88%E5%88%9D/</url>
      
        <content type="html"><![CDATA[<h1 id="八月初"><a href="#八月初" class="headerlink" title="八月初"></a>八月初</h1><h2 id="天气"><a href="#天气" class="headerlink" title="天气"></a>天气</h2><p>今天早上出了大太阳，下午午睡的时候便下起了大雨</p><p>不过和往常一样，雨没有下很久，一会儿便停了，又出了太阳，下面引用朋友圈几位的图：</p><p><img src="https://img.duckk.org/2024/11/156fa1f7bddc57132aa7481ab5799648.jpeg"></p><p>下面这个更稀奇一点，双彩：</p><p>我的的确确不是美术生，不过看到彩虹我内心亦然是快乐的，是稀奇的</p><h2 id="改造"><a href="#改造" class="headerlink" title="改造"></a>改造</h2><p>因为前几天家庭网络的IPv6突然断了，有一些业务访问出现了问题。在和客服交涉的过程中发现家里的宽带是千兆的？（我之前一直以为是百兆</p><p>后来下定决心要进行改造</p><p>先是联系师傅改了桥接，运营商送的光猫只用来做光信号转换（类似于光模块），之后用我自己手上的一个“软路由”机器进行拨号，这样有以下几个好处：</p><ul><li>减小了光猫的负担，我怀疑之前IPv6掉线是光猫的原因</li><li>能对家庭网络进行更个性化的处理，比如说内建DNS缓存服务器（可以去看看我前面写的博客</li><li>尽可能地压榨带宽，X86软路由的性能远好于光猫，尽可能的避免由于光猫性能而出现的瓶颈</li></ul><p>在这里我介绍一下软路由的配置：</p><h3 id="软路由"><a href="#软路由" class="headerlink" title="软路由"></a>软路由</h3><p>首先是来自联想M910X的准系统，很小</p><p>然后是CPU：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">Architecture:            x86_64</span><br><span class="line">  CPU op-mode(s):        32-bit, 64-bit</span><br><span class="line">  Address sizes:         39 bits physical, 48 bits virtual</span><br><span class="line">  Byte Order:            Little Endian</span><br><span class="line">CPU(s):                  4</span><br><span class="line">  On-line CPU(s) list:   0-3</span><br><span class="line">Vendor ID:               GenuineIntel</span><br><span class="line">  BIOS Vendor ID:        Intel(R) Corporation</span><br><span class="line">  Model name:            Intel(R) Pentium(R) CPU G4560 @ 3.50GHz</span><br><span class="line">    BIOS Model name:     Intel(R) Pentium(R) CPU G4560 @ 3.50GHz</span><br><span class="line">    CPU family:          6</span><br><span class="line">    Model:               158</span><br><span class="line">    Thread(s) per core:  2</span><br><span class="line">    Core(s) per socket:  2</span><br><span class="line">    Socket(s):           1</span><br><span class="line">    Stepping:            9</span><br><span class="line">    CPU max MHz:         3500.0000</span><br><span class="line">    CPU min MHz:         800.0000</span><br><span class="line">    BogoMIPS:            6999.82</span><br><span class="line">    Flags:               fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc art arch_perfmon </span><br><span class="line">                         pebs bts rep_good nopl xtopology nonstop_tsc cpuid aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx est tm2 ssse3 sdbg cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic movbe popcnt tsc_</span><br><span class="line">                         deadline_timer aes xsave rdrand lahf_lm abm 3dnowprefetch cpuid_fault epb invpcid_single pti ssbd ibrs ibpb stibp tpr_shadow vnmi flexpriority ept vpid ept_ad fsgsbase tsc_adjust </span><br><span class="line">                         smep erms invpcid mpx rdseed smap clflushopt intel_pt xsaveopt xsavec xgetbv1 xsaves dtherm arat pln pts hwp hwp_notify hwp_act_window hwp_epp md_clear flush_l1d</span><br><span class="line">Virtualization features: </span><br><span class="line">  Virtualization:        VT-x</span><br><span class="line">Caches (<span class="built_in">sum</span> of all):   </span><br><span class="line">  L1d:                   64 KiB (2 instances)</span><br><span class="line">  L1i:                   64 KiB (2 instances)</span><br><span class="line">  L2:                    512 KiB (2 instances)</span><br><span class="line">  L3:                    3 MiB (1 instance)</span><br><span class="line">Vulnerabilities:   </span><br><span class="line">  Gather data sampling:  Not affected</span><br><span class="line">  Itlb multihit:         KVM: Mitigation: VMX disabled</span><br><span class="line">  L1tf:                  Mitigation; PTE Inversion; VMX conditional cache flushes, SMT vulnerable</span><br><span class="line">  Mds:                   Mitigation; Clear CPU buffers; SMT vulnerable</span><br><span class="line">  Meltdown:              Mitigation; PTI</span><br><span class="line">  Mmio stale data:       Mitigation; Clear CPU buffers; SMT vulnerable</span><br><span class="line">  Retbleed:              Mitigation; IBRS</span><br><span class="line">  Spec rstack overflow:  Not affected</span><br><span class="line">  Spec store bypass:     Mitigation; Speculative Store Bypass disabled via prctl and seccomp</span><br><span class="line">  Spectre v1:            Mitigation; usercopy/swapgs barriers and __user pointer sanitization</span><br><span class="line">  Spectre v2:            Mitigation; IBRS, IBPB conditional, STIBP conditional, RSB filling, PBRSB-eIBRS Not affected</span><br><span class="line">  Srbds:                 Mitigation; Microcode</span><br><span class="line">  Tsx async abort:       Not affected</span><br></pre></td></tr></table></figure><p>当时图便宜（20块）买的，寒假的时候靠这颗CPU和朋友开MC服务器</p><p>内存是两条4G 2400笔记本内存条：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">total        used        free      shared  buff/cache   available</span><br><span class="line">Mem:        8077816      655244     5770764      309984     1651808     6997800</span><br><span class="line">Swap:             0           0           0</span><br></pre></td></tr></table></figure><p>Openwrt对内存的要求还是很低的，我基本上不跑什么Docker容器</p><p>接着是网卡：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">00:1f.6 Ethernet controller: Intel Corporation Ethernet Connection (2) I219-LM</span><br><span class="line">01:00.0 Ethernet controller: Intel Corporation I350 Gigabit Network Connection (rev 01)</span><br><span class="line">01:00.1 Ethernet controller: Intel Corporation I350 Gigabit Network Connection (rev 01)</span><br><span class="line">01:00.2 Ethernet controller: Intel Corporation I350 Gigabit Network Connection (rev 01)</span><br><span class="line">01:00.3 Ethernet controller: Intel Corporation I350 Gigabit Network Connection (rev 01)</span><br></pre></td></tr></table></figure><p>其中 <code>I219-LM</code>是主板上的内置网卡，在Openwrt上作为 <code>WAN</code>口</p><p>选择 <code>I350</code>作为 <code>PCI-E</code>网卡其实也是权衡之举，因为M910X这个机器空间很小，这张卡也刚好是买机器的商家推荐的，兼容性也不错</p><h3 id="路由器"><a href="#路由器" class="headerlink" title="路由器"></a>路由器</h3><p>路由器是来自<strong>TP-LINK</strong>的 <code>TL-XDR3010易拓版</code>，本身支持千兆和 <code>WIFI-6</code>，也有支持2.5G的版本，不过我家里没有NAS或能内网能跑满2.5G的应用，就没有加钱买</p><h3 id="光猫"><a href="#光猫" class="headerlink" title="光猫"></a>光猫</h3><p>光猫是移动的 <code>H2-3e</code>，感觉这个机器在网上相关的介绍不是很多，在这里我也不多做赘述</p><h3 id="网线"><a href="#网线" class="headerlink" title="网线"></a>网线</h3><p>原网线是 <code>CAT5e</code>（超五类线），最高传输速度有 <code>1000M</code>，但是在我实际使用的时候几乎只能跑到 <code>100M</code>，不过考虑到衰减（光猫到路由器网线的距离有20多米，这条网线拉了有十多年）一狠下心还是准备换线</p><p>换线准备换六类线：</p><p><img src="https://img.duckk.org/2024/11/2fdc0d7d3310f68db244479abe31221f.png"></p><p>当时担心自己好久没打水晶头一下买了20个</p><p><img src="https://img.duckk.org/2024/11/7716da7f166a6c5987cd4ea7df95c3e2.png"></p><h3 id="改造成果"><a href="#改造成果" class="headerlink" title="改造成果"></a>改造成果</h3><p>最终还是实现了内网跑满 <code>1Gpbs</code>的愿望，不过不知道为什么上下不对等</p><p><img src="https://img.duckk.org/2024/11/7c026bd2057aea8eaffaaf86753ad2cd.png"></p><p>外网也跑到了将近 <code>1000Mpbs</code>，不过不知道是我设备的原因还是宽带本来就只有这么快，使用了多个教育站测速最高只有这么多，大多数时候只有大概 <code>500Mpbs</code>，已经准备联系客服了</p><p><img src="https://img.duckk.org/2024/11/3b5756aca9b5cbfd3334eb6380895554.png"></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>总的来说，折腾的快乐远远大于使用的乐趣，其实平时日常使用很少很少能跑满带宽</p>]]></content>
      
      
      <categories>
          
          <category> 日常 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随写 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>iStore实现 SmartDNS + AdGuard Home IP优选+广告屏蔽</title>
      <link href="/2024/07/31/Tech/Smart-Adguard/"/>
      <url>/2024/07/31/Tech/Smart-Adguard/</url>
      
        <content type="html"><![CDATA[<h1 id="iStore实现-SmartDNS-AdGuard-Home-IP优选-广告屏蔽"><a href="#iStore实现-SmartDNS-AdGuard-Home-IP优选-广告屏蔽" class="headerlink" title="iStore实现 SmartDNS + AdGuard Home IP优选+广告屏蔽"></a>iStore实现 SmartDNS + AdGuard Home IP优选+广告屏蔽</h1><blockquote><p>参考自<a href="https://blog.csdn.net/tonyhi6/article/details/139212440">openwrt 官方版 安装配置 AdGuard Home + smartdns 告别广告烦扰 教程 软路由实测 系列五</a></p></blockquote><p>SmartDNS 和 AdGuard Home 都是用于优化 DNS 解析和提供广告拦截功能的工具，但它们各自有不同的特点和用途：</p><h3 id="SmartDNS"><a href="#SmartDNS" class="headerlink" title="SmartDNS"></a>SmartDNS</h3><ol><li><strong>主要功能</strong>：<ul><li>提供 DNS 解析服务，旨在加速互联网访问和绕过地理限制。</li><li>支持智能 DNS 缓存和解析，优化网站加载速度。</li><li>通过配置不同的 DNS 服务器来提高解析效率和稳定性。</li></ul></li><li><strong>特点</strong>：<ul><li><strong>速度优化</strong>：通过选择最佳的 DNS 服务器来提升访问速度。</li><li><strong>跨地域访问</strong>：能够帮助绕过地理限制，使用户可以访问受限内容。</li><li><strong>简易配置</strong>：通常提供用户友好的配置界面和说明。</li></ul></li></ol><h3 id="AdGuard-Home"><a href="#AdGuard-Home" class="headerlink" title="AdGuard Home"></a>AdGuard Home</h3><ol><li><strong>主要功能</strong>：<ul><li>提供 DNS 解析服务，并附带广告拦截和隐私保护功能。</li><li>支持对 DNS 请求进行过滤，阻止广告、恶意软件和跟踪器。</li><li>具备用户自定义规则和白名单功能，允许精确控制过滤内容。</li></ul></li><li><strong>特点</strong>：<ul><li><strong>广告拦截</strong>：内置广告拦截功能，有效阻止网页和应用中的广告。</li><li><strong>隐私保护</strong>：保护用户免受跟踪器的侵扰，增强隐私安全。</li><li><strong>易于配置和管理</strong>：通过 Web 界面提供友好的管理和配置功能。</li><li><strong>扩展性</strong>：支持自定义过滤规则和黑名单&#x2F;白名单设置，满足个性化需求。</li></ul></li></ol><h3 id="结合使用"><a href="#结合使用" class="headerlink" title="结合使用"></a>结合使用</h3><ul><li><strong>SmartDNS</strong> 可以用于提高 DNS 解析速度和访问受限内容，而 <strong>AdGuard Home</strong> 则可以提供额外的广告拦截和隐私保护。</li><li>在配置上，您可以将 <strong>SmartDNS</strong> 作为 AdGuard Home 的上游 DNS 服务器，结合两者的优点，提升网络体验和保护。</li></ul><p>本教程旨在同时使用<strong>SmartDNS</strong>与<strong>Adgurad Home</strong>来优化网络环境。</p><h2 id="安装与配置SmartDNS"><a href="#安装与配置SmartDNS" class="headerlink" title="安装与配置SmartDNS"></a>安装与配置SmartDNS</h2><p>在这里我使用<strong>iStore</strong>来安装<strong>SmartDNS</strong>：</p><p><img src="https://img.juniortree.com/202408080958434.png"></p><p>安装完成之后我们继续配置：</p><p><img src="https://img.juniortree.com/202408080958745.png"></p><p>缓存大小可以填大一点，有助于减小上游DNS请求的数量，尤其是现在阿里云的公共DNS限制QPS，SmartDNS的缓存策略有助于帮我们避免限制：</p><p><img src="https://img.juniortree.com/202408080959656.png"></p><p>继续往下填写上游DNS服务器，这里是<strong>SmartDNS</strong>请求的上游服务器，可以多填一点：</p><p><img src="https://img.juniortree.com/202408080959466.png"></p><p>下面是我自己所使用的一些公共DNS服务器，尽量使用一些 <code>DoT</code>或者 <code>DoH</code>协议的DNS服务，能够避免挟持</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">https://dns10.quad9.net/dns-query</span><br><span class="line">https://dns.google/dns-query</span><br><span class="line">https://1dot1dot1dot1.cloudflare-dns.com/</span><br><span class="line">dns.google</span><br><span class="line">cloudflare-dns.com</span><br><span class="line">dns.alidns.com</span><br><span class="line">dot.pub</span><br><span class="line">https://dns.alidns.com/dns-query</span><br><span class="line">https://223.5.5.5/dns-query</span><br><span class="line">https://223.6.6.6/dns-query</span><br></pre></td></tr></table></figure><p>这时候我们可以通过 <code>nslookup</code>指令来测试<strong>SmartDNS</strong>服务的可行性：</p><p><img src="https://img.juniortree.com/202408080959592.png"></p><h2 id="安装与配置AdGuard-Home"><a href="#安装与配置AdGuard-Home" class="headerlink" title="安装与配置AdGuard Home"></a>安装与配置AdGuard Home</h2><p>在这里我们不使用Docker，直接使用 <code>opkg</code>包管理器安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">opkg update</span><br><span class="line">opkg install adguardhome</span><br><span class="line"><span class="comment">#启动</span></span><br><span class="line">/etc/init.d/adguardhome start</span><br><span class="line">/etc/init.d/adguardhome <span class="built_in">enable</span></span><br></pre></td></tr></table></figure><p>此时我们可以通过 <code>http://IP:3000</code>进入管理界面</p><p>在正式配置<strong>AdGuard Home</strong>之前，我们要修改原DNS服务器的 <code>53</code>端口出来给<strong>Adguard Home</strong>：</p><p><img src="https://img.juniortree.com/202408080959842.png"></p><p><img src="https://img.juniortree.com/202408081000839.png"></p><p><img src="https://img.juniortree.com/202408081000221.png"></p><p>此时回到<strong>AdGuard Home</strong>配置主页就可以使用 <code>53</code>端口，但是由于 <code>80</code>端口被<strong>iStore</strong>占用，你可以使用 <code>3001</code>端口代替，之后配置<strong>AdGuard Home</strong>上游服务器，由于<strong>SmartDNS</strong>的监听端口被替换成 <code>8053</code>，删除其他的DNS服务器，在这里我们使用<strong>显式声明</strong>：</p><p><img src="https://img.juniortree.com/202408081000992.png"></p><p><strong>测试上游DNS</strong>，没有问题：</p><p><img src="https://img.juniortree.com/202408081001224.png"></p><p>因为<strong>SmartDNS</strong>具备缓存的功能，因此<strong>AdGuard Home</strong>不需要缓存，在这里全删掉留空即可：</p><p><img src="https://img.juniortree.com/202408081001301.png"></p><p>如果你想要添加<strong>AdGuard Home</strong>规则的话，不妨看看这篇文章：<a href="https://blog.juniortree.com/archives/58gF3BUt">AdGuard Home使用体验</a></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Adguard </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Adguard-Home使用体验</title>
      <link href="/2024/07/29/Tech/Adguard-Home%E4%BD%BF%E7%94%A8%E4%BD%93%E9%AA%8C/"/>
      <url>/2024/07/29/Tech/Adguard-Home%E4%BD%BF%E7%94%A8%E4%BD%93%E9%AA%8C/</url>
      
        <content type="html"><![CDATA[<h1 id="AdGuard-Home使用体验"><a href="#AdGuard-Home使用体验" class="headerlink" title="AdGuard Home使用体验"></a>AdGuard Home使用体验</h1><blockquote><p>AdGuard Home is a network-wide software for blocking ads and tracking. After you set it up, it’ll cover ALL your home devices, and you don’t need any client-side software for that.</p><p>“AdGuard Home 是一个全域范围的，用来阻挡广告和追踪的软件。当你安装完成之后，它将覆盖你家里所有的设备，你从此不需要任何客户端软件来阻挡广告”</p></blockquote><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>说起<strong>AdGuard Home</strong>你也许会比较陌生，但如果说起<strong>AdGuard</strong>那你大概率使用过它的插件。</p><p>“<strong>AdGuard</strong>是全球最先进的广告拦截器”，这句话如果单领出来确实有点广告法，但的确对得起<strong>AdGuard</strong>的强大功能，我最常见使用的是<strong>AdGurad</strong>的浏览器插件，这个插件能拦截绝大数的浏览器广告，但对于一些基于无法安装插件的情况，比如说微信小程序里面的广告，这种方法就无济于事了</p><p><img src="https://img.juniortree.com/202408081108599.webp"></p><p>因此<strong>AdGurad</strong>推出了<strong>AdGurad Home</strong>，从根源上解决了广告的问题</p><p>目前该项目已经开源到了GitHub：<a href="https://github.com/AdguardTeam/AdGuardHome">地址</a></p><h2 id="技术解析"><a href="#技术解析" class="headerlink" title="技术解析"></a>技术解析</h2><blockquote><p>Free and open source, powerful network-wide ads &amp; trackers blocking DNS server.</p><p>“免费和开源、强大的全域网络广告与追踪器阻挡DNS服务器”</p></blockquote><p><strong>AdGuard Home</strong>的本质其实是一个<strong>DNS缓存服务器</strong>，它通过从上游DNS服务器中获取DNS解析结果，与本地的<strong>DNS黑名单</strong>和<strong>白名单</strong>进行匹配，从而对属于<strong>广告</strong>或者其他你不愿意看到的内容的DNS请求进行过滤，如果设备请求的域名在黑名单中，<strong>AdGuard Home</strong>则不会返回DNS解析结果，从而达到屏蔽<strong>广告</strong>和<strong>追踪器</strong>的功能。</p><p>如果是黑名单中的域名，最终返回客户端的请求结果会是：</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">响应代码</span><br><span class="line">NOERROR</span><br><span class="line">规则</span><br><span class="line">||data.kuiniuca.com^</span><br><span class="line">AdGuard DNS filter</span><br><span class="line">响应</span><br><span class="line">A: 0.0.0.0 (ttl=10)</span><br><span class="line">响应</span><br><span class="line">AAAA: :: (ttl=10)</span><br></pre></td></tr></table></figure><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>官方的文档提供的很详细的安装教程，在这里比较推荐的部署方法是采用Docker：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">docker run --name adguardhome\</span><br><span class="line">    --restart unless-stopped\</span><br><span class="line">    -v /my/own/workdir:/opt/adguardhome/work\</span><br><span class="line">    -v /my/own/confdir:/opt/adguardhome/conf\</span><br><span class="line">    -p 53:53/tcp -p 53:53/udp\</span><br><span class="line">    -p 67:67/udp -p 68:68/udp\</span><br><span class="line">    -p 80:80/tcp -p 443:443/tcp -p 443:443/udp -p 3000:3000/tcp\</span><br><span class="line">    -p 853:853/tcp\</span><br><span class="line">    -p 784:784/udp -p 853:853/udp -p 8853:8853/udp\</span><br><span class="line">    -p 5443:5443/tcp -p 5443:5443/udp\</span><br><span class="line">    -d adguard/adguardhome</span><br></pre></td></tr></table></figure><p>为了避免DNS缓存数据和配置文件的丢失，你应该将 <code>/opt/adguardhome/work</code>与 <code>/opt/adguardhome/conf</code>映射出来做持久卷处理。你也不必担心该数据的庞大体积，DNS数据本身很小</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">liueic@liueic-ThinkCentre-M910x:~/adguard$ <span class="built_in">ls</span> -lh</span><br><span class="line">总用量 8.0K</span><br><span class="line">drwxr-xr-x 2 root root 4.0K 7月  29 14:45 confdir</span><br><span class="line">drwxr-xr-x 3 root root 4.0K 7月  27 16:29 workdir</span><br></pre></td></tr></table></figure><p>其中<strong>AdGuard Home</strong>还提供了 <code>HDCP</code>、<code>TLS</code>、<code>DOH</code>等诸多功能，如果你部署在局域网而且已经有主路由，只想将<strong>AdGuard Home</strong>当作<strong>DNS服务器</strong>，那你可以只开放<strong>53</strong>、<strong>3000</strong>，并将<strong>80</strong>映射为其他端口作为WebUI的端口</p><p>安装完成进入 <code>http://IP:3000</code>进行设置</p><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>前面说了<strong>AdGuard Home</strong>，主要是作为DNS缓存服务器使用，因此选取未被污染的<strong>上游DNS服务器</strong>显得尤为重要，在这里我推荐几个我使用比较多的DNS服务器：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">https://dns10.quad9.net/dns-query# AdGuard Home官方维护</span><br><span class="line">https://dns.google/dns-query# Google DoH服务器</span><br><span class="line">https://1dot1dot1dot1.cloudflare-dns.com/# CloudFlare DoH服务器</span><br><span class="line">dns.google# Google DoT服务器</span><br><span class="line">cloudflare-dns.com # CloudFlare DoT服务器</span><br><span class="line">dns.alidns.com# 阿里云 DoT服务器</span><br><span class="line">dot.pub# DNSpub DoT服务器</span><br><span class="line">https://dns.alidns.com/dns-query # 阿里云 DoH服务器</span><br><span class="line">https://223.5.5.5/dns-query# 阿里云 DoH服务器</span><br><span class="line">https://223.6.6.6/dns-query# 阿里云 DoH服务器</span><br></pre></td></tr></table></figure><p>在这里我选取了较多的上游服务器，其中需要注意的是<strong>阿里云</strong>公共DNS对于请求数量进行了限制（QPS 20），而腾讯的公共DNS有污染的传言，所以并不完全可靠</p><p>在这里我推荐你使用 <code>并行请求</code>，加上 <code>乐观缓存</code>，这样的话可以在尽可能保证请求质量的基础上加快本地的DNS请求速度</p><p><img src="https://img.juniortree.com/202408102128642.webp"></p><p><img src="https://img.juniortree.com/202408081106463.webp"></p><p>其实你没必要担心因为 <code>乐观缓存</code>的存在而影响DNS解析的正确程度，因为你访问的大多数网址的DNS解析结果一般不会发生较大的变化，相反由于 <code>乐观缓存</code>的本地缓存，整个DNS请求的效率会很高，会大大改善本地的网络连接状况：</p><p><img src="https://img.juniortree.com/202408081107769.webp"></p><h2 id="DNS-黑名单"><a href="#DNS-黑名单" class="headerlink" title="DNS 黑名单"></a>DNS 黑名单</h2><p><strong>AdGuard Home</strong>的<strong>DNS 黑名单</strong>是整个的核心，它决定了最终对抗广告和追踪器的质量，在这里我推荐一个效果比较好，误伤比较小的DNS黑名单，以下加速链接为CDN加速后的链接：</p><p>AdGuard DNS filter：<a href="https://raw.githubusercontent.com/217heidai/adblockfilters/main/rules/adblockdns.txt">原始链接</a> | <a href="https://mirror.ghproxy.com/https://raw.githubusercontent.com/217heidai/adblockfilters/main/rules/adblockdns.txt">加速链接</a></p><p>AdAway Default Blocklist：<a href="https://raw.githubusercontent.com/217heidai/adblockfilters/main/rules/AdGuard_DNS_filter.txt">原始链接</a> | <a href="https://mirror.ghproxy.com/https://raw.githubusercontent.com/217heidai/adblockfilters/main/rules/AdGuard_DNS_filter.txt">加速链接</a></p><p>AdGuard Base filter：<a href="https://raw.githubusercontent.com/217heidai/adblockfilters/main/rules/AdGuard_Base_filter.txt">原始链接</a> | <a href="https://mirror.ghproxy.com/https://raw.githubusercontent.com/217heidai/adblockfilters/main/rules/AdGuard_Base_filter.txt">加速链接</a></p><p>AdGuard Chinese filter：<a href="https://raw.githubusercontent.com/217heidai/adblockfilters/main/rules/AdGuard_Chinese_filter.txt">原始链接</a> | <a href="https://mirror.ghproxy.com/https://raw.githubusercontent.com/217heidai/adblockfilters/main/rules/AdGuard_Chinese_filter.txt">加速链接</a></p><p>CJX’s Annoyance List：<a href="https://raw.githubusercontent.com/217heidai/adblockfilters/main/rules/CJX's_Annoyance_List.txt">原始链接</a> | <a href="https://mirror.ghproxy.com/https://raw.githubusercontent.com/217heidai/adblockfilters/main/rules/CJX's_Annoyance_List.txt">加速链接</a></p><p>乘风MV：<a href="https://raw.githubusercontent.com/xinggsf/Adblock-Plus-Rule/master/mv.txt">原始链接</a> |  <a href="https://mirror.ghproxy.com/https://raw.githubusercontent.com/xinggsf/Adblock-Plus-Rule/master/mv.txt">加速链接</a></p><p>乘风Rules：<a href="https://raw.githubusercontent.com/xinggsf/Adblock-Plus-Rule/master/rule.txt">原始链接</a> | <a href="https://mirror.ghproxy.com/https://raw.githubusercontent.com/xinggsf/Adblock-Plus-Rule/master/rule.txt">加速链接</a></p><p>jiekouAD： <a href="https://raw.githubusercontent.com/217heidai/adblockfilters/main/rules/jiekouAD.txt">原始链接</a> | <a href="https://mirror.ghproxy.com/https://raw.githubusercontent.com/217heidai/adblockfilters/main/rules/jiekouAD.txt">加速链接</a></p><p>EasyList：<a href="https://raw.githubusercontent.com/217heidai/adblockfilters/main/rules/EasyList.txt">原始链接</a> | <a href="https://mirror.ghproxy.com/https://raw.githubusercontent.com/217heidai/adblockfilters/main/rules/EasyList.txt">加速链接</a></p><p>EasyList China：<a href="https://raw.githubusercontent.com/217heidai/adblockfilters/main/rules/EasyList_China.txt">原始链接</a> | <a href="https://mirror.ghproxy.com/https://raw.githubusercontent.com/217heidai/adblockfilters/main/rules/EasyList_China.txt">加速链接</a></p><p>EasyPrivacy：<a href="https://raw.githubusercontent.com/217heidai/adblockfilters/main/rules/EasyPrivacy.txt">原始链接</a> | <a href="https://mirror.ghproxy.com/https://raw.githubusercontent.com/217heidai/adblockfilters/main/rules/EasyPrivacy.txt">加速链接</a></p><p>BlueSkyXN：<a href="https://raw.githubusercontent.com/BlueSkyXN/AdGuardHomeRules/master/all.txt">原始链接</a> | <a href="https://mirror.ghproxy.com/https://raw.githubusercontent.com/BlueSkyXN/AdGuardHomeRules/master/all.txt">加速链接</a></p><p>秋叶：<a href="https://raw.githubusercontent.com/TG-Twilight/AWAvenue-Ads-Rule/main/AWAvenue-Ads-Rule.txt">原始链接</a> ｜<a href="https://github.tmby.shop/https://raw.githubusercontent.com/TG-Twilight/AWAvenue-Ads-Rule/main/AWAvenue-Ads-Rule.txt">加速链接</a></p><p><img src="https://img.juniortree.com/202408081107681.webp"></p><p>总体来说效果还是很不错的，一些常见的广告都可以过滤，你还可以添加一些特殊的规则，比如说针对“电子书”、“电视剧”等等</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>总体来说，使用体验还是很不错的，尤其是本地有DNS缓存之后整体的解析速度很快，而且也不会存在因为解析错误而导致无法访问的情况。</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> AdGuard </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>&#39;NC&#39;文件的读取与使用</title>
      <link href="/2024/07/29/Tech/%E6%96%87%E4%BB%B6%E7%9A%84%E8%AF%BB%E5%8F%96%E4%B8%8E%E4%BD%BF%E7%94%A8/"/>
      <url>/2024/07/29/Tech/%E6%96%87%E4%BB%B6%E7%9A%84%E8%AF%BB%E5%8F%96%E4%B8%8E%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="NC文件的读取与使用"><a href="#NC文件的读取与使用" class="headerlink" title=".NC文件的读取与使用"></a><code>.NC</code>文件的读取与使用</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p>NetCDF(network Common Data Form)网络通用数据格式是一种面向数组型并适于网络共享的数据的描述和编码标准。目前，NetCDF广泛应用于<strong>大气科学、水文、海洋学、环境模拟、地球物理</strong>等诸多领域。用户可以借助多种方式方便地管理和操作 NetCDF 数据集。</p></blockquote><p>在数学建模的过程中，我们难免会接触到一些气象文件，而 <code>.nc</code>文件便是其中最为常见的一种，我们如果能利用好这些文件，对我们进行数学建模有着极大的好处和便利。</p><h2 id="Matlab"><a href="#Matlab" class="headerlink" title="Matlab"></a>Matlab</h2><p><strong>Matlab</strong>是一款强大的数学建模软件，其中也加入了对于 <code>.nc</code>文件的支持</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">% 定义年份范围</span></span><br><span class="line">start_year = <span class="number">2014</span>;</span><br><span class="line">end_year = <span class="number">2020</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">% 遍历每一年</span></span><br><span class="line"><span class="keyword">for</span> year = start_year:end_year</span><br><span class="line">    <span class="comment">% 构建文件名</span></span><br><span class="line">    nc_filename = sprintf(<span class="string">&#x27;.nc\\MARv3.11.3-ssp245-%d_clip.nc&#x27;</span>, year);</span><br><span class="line">  </span><br><span class="line">    <span class="comment">% 获取文件信息</span></span><br><span class="line">    info = ncinfo(nc_filename);</span><br><span class="line">  </span><br><span class="line">    <span class="comment">% 创建结构体来存储RU变量的数据</span></span><br><span class="line">    data = struct();</span><br><span class="line">  </span><br><span class="line">    <span class="comment">% 读取RU变量的数据</span></span><br><span class="line">    varname = <span class="string">&#x27;RU&#x27;</span>;</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">ismember</span>(varname, &#123;info.Variables.Name&#125;)</span><br><span class="line">        data.(varname) = ncread(nc_filename, varname);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        error(<span class="string">&#x27;变量 %s 不存在于文件 %s 中。&#x27;</span>, varname, nc_filename);</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">  </span><br><span class="line">    <span class="comment">% 构建CSV文件名</span></span><br><span class="line">    csv_filename = sprintf(<span class="string">&#x27;RU_%d_data.csv&#x27;</span>, year);</span><br><span class="line">  </span><br><span class="line">    <span class="comment">% 将RU变量的数据写入CSV文件</span></span><br><span class="line">    writematrix(data.RU, csv_filename);</span><br><span class="line">  </span><br><span class="line">    <span class="comment">% 显示处理信息</span></span><br><span class="line">    fprintf(<span class="string">&#x27;Data for year %d has been written to %s\n&#x27;</span>, year, csv_filename);</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>在这里我使用<strong>Matlab</strong>读取了从2014~2020全年的数据，并且只读取变量 <code>RU</code>的数值，将其写入到 <code>CSV</code>文件中，方便下一步处理</p><h2 id="netCDF4"><a href="#netCDF4" class="headerlink" title="netCDF4"></a>netCDF4</h2><blockquote><p>目前最新的Python 3.12尚不支持netCDF4，因此请使用Python 3.11版本</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> netCDF4</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="comment"># 打开 .nc 文件</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> years <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1993</span>, <span class="number">2014</span>):</span><br><span class="line">    dataset = netCDF4.Dataset(<span class="string">r&#x27;.nc\MARv3.11.3-historical-&#123;&#125;_clip.nc&#x27;</span>.<span class="built_in">format</span>(years), <span class="string">&#x27;r&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    smb = dataset.variables[<span class="string">&#x27;SMB&#x27;</span>][:]</span><br><span class="line">    x = dataset.variables[<span class="string">&#x27;x&#x27;</span>][:]</span><br><span class="line">    y = dataset.variables[<span class="string">&#x27;y&#x27;</span>][:]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 绘制 &#x27;SMB&#x27; 的空间分布图</span></span><br><span class="line">    plt.figure(figsize=(<span class="number">10</span>, <span class="number">6</span>))</span><br><span class="line">    plt.contourf(x, y, smb[<span class="number">0</span>, :, :], cmap=<span class="string">&#x27;viridis&#x27;</span>)</span><br><span class="line">    plt.colorbar(label=<span class="string">&#x27;SMB&#x27;</span>)</span><br><span class="line">    plt.title(<span class="string">r&#x27;Spatial Distribution Map of SMB &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(years))</span><br><span class="line">    plt.xlabel(<span class="string">&#x27;X&#x27;</span>)</span><br><span class="line">    plt.ylabel(<span class="string">&#x27;Y&#x27;</span>)</span><br><span class="line">    plt.savefig(<span class="string">r&#x27;SMB\Spatial Distribution Map of SMB &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(years), bbox_inches=<span class="string">&#x27;tight&#x27;</span>)</span><br><span class="line">    <span class="comment"># plt.show()</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 关闭文件</span></span><br><span class="line">    dataset.close()</span><br></pre></td></tr></table></figure><h2 id="xarray"><a href="#xarray" class="headerlink" title="xarray"></a>xarray</h2><blockquote><p>此方法为ChatGPT生成的方法，本人在自己系统环境中没有使用成功过，因此只供参考</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> xarray <span class="keyword">as</span> xr</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 打开 .nc 文件，并忽略冲突的坐标解码</span></span><br><span class="line">file_path = <span class="string">&#x27;/mnt/data/MARv3.11.3-historical-1993_clip.nc&#x27;</span></span><br><span class="line">ds = xr.open_dataset(file_path, decode_cf=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看数据集的信息</span></span><br><span class="line">ds_info = ds</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看变量 &#x27;SMB&#x27; 的数据</span></span><br><span class="line">smb = ds[<span class="string">&#x27;SMB&#x27;</span>]</span><br><span class="line">smb_info = smb</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取特定时间点的数据并绘制空间图</span></span><br><span class="line">time_index = <span class="number">0</span>  <span class="comment"># 选择第一个时间点</span></span><br><span class="line">smb_at_time = smb.isel(time=time_index)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 绘制 &#x27;SMB&#x27; 的空间分布图</span></span><br><span class="line">plt.figure(figsize=(<span class="number">10</span>, <span class="number">6</span>))</span><br><span class="line">plt.contourf(ds[<span class="string">&#x27;x&#x27;</span>].values[<span class="number">0</span>], ds[<span class="string">&#x27;y&#x27;</span>].values[:, <span class="number">0</span>], smb_at_time, cmap=<span class="string">&#x27;viridis&#x27;</span>)</span><br><span class="line">plt.colorbar(label=<span class="string">&#x27;SMB&#x27;</span>)</span><br><span class="line">plt.title(<span class="string">f&#x27;SMB at time index <span class="subst">&#123;time_index&#125;</span>&#x27;</span>)</span><br><span class="line">plt.xlabel(<span class="string">&#x27;X&#x27;</span>)</span><br><span class="line">plt.ylabel(<span class="string">&#x27;Y&#x27;</span>)</span><br><span class="line">plt.show()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取特定位置的时间序列数据并绘制时间序列图</span></span><br><span class="line">x_index = <span class="number">10</span>  <span class="comment"># 选择一个 x 位置</span></span><br><span class="line">y_index = <span class="number">5</span>   <span class="comment"># 选择一个 y 位置</span></span><br><span class="line">smb_time_series = smb[:, y_index, x_index]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 绘制 &#x27;SMB&#x27; 的时间序列图</span></span><br><span class="line">plt.figure(figsize=(<span class="number">10</span>, <span class="number">6</span>))</span><br><span class="line">plt.plot(ds[<span class="string">&#x27;time&#x27;</span>].values, smb_time_series)</span><br><span class="line">plt.title(<span class="string">f&#x27;SMB Time Series at location (x=<span class="subst">&#123;x_index&#125;</span>, y=<span class="subst">&#123;y_index&#125;</span>)&#x27;</span>)</span><br><span class="line">plt.xlabel(<span class="string">&#x27;Time&#x27;</span>)</span><br><span class="line">plt.ylabel(<span class="string">&#x27;SMB&#x27;</span>)</span><br><span class="line">plt.show()</span><br><span class="line"></span><br><span class="line">ds_info, smb_info</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学建模 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C语言基础语法</title>
      <link href="/2024/07/28/Note/C%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/"/>
      <url>/2024/07/28/Note/C%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1 id="C语言基础算法"><a href="#C语言基础算法" class="headerlink" title="C语言基础算法"></a>C语言基础算法</h1><h2 id="1、阶乘"><a href="#1、阶乘" class="headerlink" title="1、阶乘"></a>1、阶乘</h2><h3 id="递归实现"><a href="#递归实现" class="headerlink" title="递归实现"></a>递归实现</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 递归函数计算阶乘</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">factorial</span><span class="params">(<span class="type">int</span> n)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (n == <span class="number">0</span> || n == <span class="number">1</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span> n * factorial(n - <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入一个整数：&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">  </span><br><span class="line">    <span class="comment">// 调用函数计算阶乘并输出结果</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d 的阶乘是 %d\n&quot;</span>, n, factorial(n));</span><br><span class="line">  </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="循环实现"><a href="#循环实现" class="headerlink" title="循环实现"></a>循环实现</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> n, fact = <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入一个整数：&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">  </span><br><span class="line">    <span class="comment">// 循环计算阶乘</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">        fact *= i;</span><br><span class="line">    &#125;</span><br><span class="line">  </span><br><span class="line">    <span class="comment">// 输出结果</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d 的阶乘是 %d\n&quot;</span>, n, fact);</span><br><span class="line">  </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2、排序"><a href="#2、排序" class="headerlink" title="2、排序"></a>2、排序</h2><h3 id="冒泡排序"><a href="#冒泡排序" class="headerlink" title="冒泡排序"></a>冒泡排序</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 冒泡排序函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">bubbleSort</span><span class="params">(<span class="type">int</span> arr[], <span class="type">int</span> n)</span> &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n<span class="number">-1</span>; i++) &#123;</span><br><span class="line">        <span class="comment">// 内层循环用于比较相邻元素并交换位置</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; n-i<span class="number">-1</span>; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (arr[j] &gt; arr[j+<span class="number">1</span>]) &#123;</span><br><span class="line">                <span class="comment">// 如果前一个元素大于后一个元素，则交换它们</span></span><br><span class="line">                <span class="type">int</span> temp = arr[j];</span><br><span class="line">                arr[j] = arr[j+<span class="number">1</span>];</span><br><span class="line">                arr[j+<span class="number">1</span>] = temp;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> arr[] = &#123;<span class="number">64</span>, <span class="number">34</span>, <span class="number">25</span>, <span class="number">12</span>, <span class="number">22</span>, <span class="number">11</span>, <span class="number">90</span>&#125;;</span><br><span class="line">    <span class="type">int</span> n = <span class="keyword">sizeof</span>(arr)/<span class="keyword">sizeof</span>(arr[<span class="number">0</span>]);</span><br><span class="line">  </span><br><span class="line">    <span class="comment">// 调用冒泡排序函数对数组进行排序</span></span><br><span class="line">    bubbleSort(arr, n);</span><br><span class="line">  </span><br><span class="line">    <span class="comment">// 输出排序后的数组</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;排序后的数组：\n&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, arr[i]);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">  </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="选择排序"><a href="#选择排序" class="headerlink" title="选择排序"></a>选择排序</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 选择排序函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">selectionSort</span><span class="params">(<span class="type">int</span> arr[], <span class="type">int</span> n)</span> &#123;</span><br><span class="line">    <span class="type">int</span> i, j, min_idx, temp;</span><br><span class="line">    <span class="comment">// 选择排序的外循环，从数组第一个元素开始</span></span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n - <span class="number">1</span>; i++) &#123;</span><br><span class="line">        <span class="comment">// 假设当前元素为最小值</span></span><br><span class="line">        min_idx = i;</span><br><span class="line">        <span class="comment">// 在剩余未排序序列中寻找最小值的索引</span></span><br><span class="line">        <span class="keyword">for</span> (j = i + <span class="number">1</span>; j &lt; n; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (arr[j] &lt; arr[min_idx]) &#123;</span><br><span class="line">                min_idx = j;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 将最小值与当前位置交换</span></span><br><span class="line">        temp = arr[min_idx];</span><br><span class="line">        arr[min_idx] = arr[i];</span><br><span class="line">        arr[i] = temp;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> arr[] = &#123;<span class="number">64</span>, <span class="number">34</span>, <span class="number">25</span>, <span class="number">12</span>, <span class="number">22</span>, <span class="number">11</span>, <span class="number">90</span>&#125;;</span><br><span class="line">    <span class="type">int</span> n = <span class="keyword">sizeof</span>(arr) / <span class="keyword">sizeof</span>(arr[<span class="number">0</span>]);</span><br><span class="line">  </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;未排序数组：\n&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, arr[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">  </span><br><span class="line">    selectionSort(arr, n);</span><br><span class="line">  </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;排序后的数组：\n&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, arr[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">  </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3、斐波那契数列"><a href="#3、斐波那契数列" class="headerlink" title="3、斐波那契数列"></a>3、斐波那契数列</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">\\该函数最终会返回一个数字</span><br><span class="line"><span class="type">double</span> <span class="title function_">fabric</span><span class="params">(<span class="type">int</span> n)</span>&#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">0</span>, b = <span class="number">1</span>, c;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">2</span>; i &lt;= n; ++i)&#123;</span><br><span class="line">        c = a+b;</span><br><span class="line">        a = b;</span><br><span class="line">        b = c;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> b;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4、ASCII码的使用"><a href="#4、ASCII码的使用" class="headerlink" title="4、ASCII码的使用"></a>4、ASCII码的使用</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stdio.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">65</span>;i &lt;= <span class="number">90</span>;i++)&#123;</span><br><span class="line">        <span class="type">char</span> letter = (<span class="type">char</span>)i;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%c\n&quot;</span>,letter);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">90</span>; j &gt;= <span class="number">65</span>; j--) &#123;</span><br><span class="line">        <span class="type">char</span> letter = (<span class="type">char</span>)j;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%c\n&quot;</span>,letter);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大学 </tag>
            
            <tag> Clang </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CC爬虫攻击测试与防护</title>
      <link href="/2024/07/24/Tech/CC%E7%88%AC%E8%99%AB%E6%94%BB%E5%87%BB%E6%B5%8B%E8%AF%95%E4%B8%8E%E9%98%B2%E6%8A%A4/"/>
      <url>/2024/07/24/Tech/CC%E7%88%AC%E8%99%AB%E6%94%BB%E5%87%BB%E6%B5%8B%E8%AF%95%E4%B8%8E%E9%98%B2%E6%8A%A4/</url>
      
        <content type="html"><![CDATA[<h1 id="CC爬虫攻击测试与防护"><a href="#CC爬虫攻击测试与防护" class="headerlink" title="CC爬虫攻击测试与防护"></a>CC爬虫攻击测试与防护</h1><blockquote><p>本文章旨在对最基本的CC攻击进行测试与防护，本次测试的所有站点均为本人自建，没有也不会去攻击其他站点。希望各位读者能够遵循当地法律法规，不要做危害他人计算机的行为</p></blockquote><h2 id="测试流程"><a href="#测试流程" class="headerlink" title="测试流程"></a>测试流程</h2><ol><li>裸机无防护测试；</li><li>WAF雷池测试</li><li>Cloudflare 防护测试</li></ol><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><h3 id="程序"><a href="#程序" class="headerlink" title="程序"></a>程序</h3><p>在这里我用Python写了一个小脚本，主要使用了 <code>aiohttp</code>和 <code>asyncio</code>两个库，模拟高并发来进行测试</p><p>当然你同样可以使用 <code>requests</code>来进行测试</p><p>如果你想测试比较极端的环境，你甚至可以部署很多的Docker容器，模拟高并发环境</p><p>默认的参数 <code>total_requests = 10000</code>、<code>threads = 20</code></p><h3 id="肉鸡"><a href="#肉鸡" class="headerlink" title="肉鸡"></a>肉鸡</h3><p>测试的机器是一台2C2G的服务器：</p><p><img src="https://img.juniortree.com/202408081001452.webp"></p><p>上面部署了一个最基础的以Halo为模板的博客系统，来模拟常见的业务过程</p><h3 id="裸机无防护测试"><a href="#裸机无防护测试" class="headerlink" title="裸机无防护测试"></a>裸机无防护测试</h3><p><img src="https://img.juniortree.com/202408081003300.webp"></p><p>一上来攻击CPU直接炸了</p><p>网页访问很慢，由于我使用了<strong>Ajax</strong>加载，从而导致网页无法正常跳转，表现为一直留在原界面，用户端体验极差</p><h3 id="WAF雷池测试"><a href="#WAF雷池测试" class="headerlink" title="WAF雷池测试"></a>WAF雷池测试</h3><p><strong>雷池</strong>实际上是一个类似于<strong>Nginx Proxy Manager</strong>的<strong>反代</strong>程序，不过它最具特色的就是带有防火墙功能：</p><p><img src="https://img.juniortree.com/202408081003708.webp"></p><p>因为<strong>专业版</strong>要钱，所以在这里我们只用最基础的<strong>社区版</strong>，按照官方的要求，我们应该将他部署在另外一台干净的反代服务器上，但是由于我们只进行最基础的测试，我这里就部署在同一台机器上了：</p><p><img src="https://img.juniortree.com/202408081003365.webp"></p><p>请务必确定反代前源服务器的可用性：（在这里你可以填入容器内的IP地址，就可以不开启云服务器的端口）</p><p><img src="https://img.juniortree.com/202408081004768.webp"></p><p><img src="https://img.juniortree.com/202408081004334.webp"></p><h4 id="未开启防火墙"><a href="#未开启防火墙" class="headerlink" title="未开启防火墙"></a>未开启防火墙</h4><p>现在我们还未开启任何防护服务，开始测试：</p><p><img src="https://img.juniortree.com/202408081004584.webp"></p><p>可以看到在被攻击的全程，服务器被打爆了，CPU占有率一直高居不下，网站也无法正常访问</p><h4 id="开启防火墙"><a href="#开启防火墙" class="headerlink" title="开启防火墙"></a>开启防火墙</h4><p>开启<strong>人机验证</strong>，开启之后进入网页需要我们等待片刻（有点类似于<strong>Cloudflare</strong>的<strong>CAPTCHA</strong>）</p><p><img src="https://img.juniortree.com/202408081004722.webp"></p><p>此时我们重新攻击：</p><p><img src="https://img.juniortree.com/202408081005774.webp"></p><p>此时的过程很有意思，服务器的CPU占用会先飚的很高，之后会迅速降低，趋于平均，网站也恢复正常访问</p><p><img src="https://img.juniortree.com/202408081005937.webp"></p><p><img src="https://img.juniortree.com/202408081005695.webp"></p><p><img src="https://img.juniortree.com/202408081006427.webp"></p><h3 id="Cloudflare-防护测试"><a href="#Cloudflare-防护测试" class="headerlink" title="Cloudflare 防护测试"></a>Cloudflare 防护测试</h3><h4 id="CND"><a href="#CND" class="headerlink" title="CND"></a>CND</h4><p>如图，已经通过 <strong>Cloudflare</strong>小黄云代理了：</p><p><img src="https://img.juniortree.com/202408081006681.webp"></p><p>开始测试：</p><p><img src="https://img.juniortree.com/202408081006002.webp"></p><p>服务器也还是直接炸了，网站无法正常打开</p><p><strong>自动程序攻击模式</strong>未奏效</p><p><img src="https://img.juniortree.com/202408081006731.webp"></p><p>一直到攻击结束，<strong>Cloudflare</strong>都未能对<strong>CC攻击</strong>做出正确反映和拦截（我估计是要氪金？</p><p>PS：后来发现是要开启<strong>五秒盾</strong>，效果还挺好的</p><h4 id="Tunnels"><a href="#Tunnels" class="headerlink" title="Tunnels"></a>Tunnels</h4><p>我们先创建一个<strong>Tunnel</strong>，在这里我直接使用<strong>Docker</strong>进行部署：</p><p><img src="https://img.juniortree.com/202408081007954.webp"></p><p>开始测试之后：</p><p><img src="https://img.juniortree.com/202408081008429.webp"></p><p>还是炸，<strong>Cloudflare</strong>没有任何拦截作用~</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>为自己的WordPress添加Cloudflare验证码</title>
      <link href="/2024/07/23/Tech/%E4%B8%BA%E8%87%AA%E5%B7%B1%E7%9A%84WordPress%E6%B7%BB%E5%8A%A0Cloudflare%E9%AA%8C%E8%AF%81%E7%A0%81/"/>
      <url>/2024/07/23/Tech/%E4%B8%BA%E8%87%AA%E5%B7%B1%E7%9A%84WordPress%E6%B7%BB%E5%8A%A0Cloudflare%E9%AA%8C%E8%AF%81%E7%A0%81/</url>
      
        <content type="html"><![CDATA[<h1 id="为自己的WordPress添加Cloudflare验证码"><a href="#为自己的WordPress添加Cloudflare验证码" class="headerlink" title="为自己的WordPress添加Cloudflare验证码"></a>为自己的WordPress添加Cloudflare验证码</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>我们自建的WordPress博客有时候可能会遭到异常流量的攻击从而导致正常用户无法访问，此时一个验证码就显得尤为重要。Cloudflare作为全球知名的域名托管商为我们提供了免费的验证码服务，我们可以利用这个验证码来更好地保护我们的网站。</p><h3 id="先决条件"><a href="#先决条件" class="headerlink" title="先决条件"></a>先决条件</h3><p>你的WordPress域名必须托管到<strong>Cloudflare</strong>，如果你不知道如何将自己其他地方的域名转入到<strong>Cloudflare</strong>，可以参考其他教程。</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>首先我们需要在WordPress安装<a href="https://wordpress.org/plugins/simple-cloudflare-turnstile/">Simple Cloudflare Turnstile</a>，这个插件能帮助我们连接到Cloudflare的验证码服务。</p><p><img src="https://s2.loli.net/2024/02/07/XPspj7oGBYKRJOl.png"></p><p>安装之后要记得点击启用才能正常打开插件。</p><p>安装完成之后会出现这样的界面，点击红框区域的链接获取我们所需要的 <code>site key</code>和 <code>secret key</code></p><p><img src="https://s2.loli.net/2024/02/07/Rtiw9B5jSIhsaQX.png"></p><p>之后会跳转到<strong>Cloudflare</strong>的登录界面，你可以在红框标出部分修改仪表盘的语言为<strong>中文</strong>。</p><p><img src="https://s2.loli.net/2024/02/07/GFtRPlHp6WmBK3r.png"></p><p>我们点击中间的<strong>添加站点</strong>来为我们的网站添加验证码服务。</p><p><img src="https://s2.loli.net/2024/02/07/oh5TeXQjlignBk6.png"></p><p>你可以和我一样给你的添加一个容易辨识的名字（如果你有很多域名的话你自己能分辨就可以），然后选择<strong>域</strong>，即你网站的域名，<strong>小组件模式</strong>建议选择<strong>Cloudflare</strong>推荐的<strong>托管</strong>模式，它会自己选择是否需要对访问者使用验证码。</p><p>确定无误了之后我们点击<strong>创建</strong>。</p><p><img src="https://s2.loli.net/2024/02/07/SBUmzrvNMgHXZV4.png"></p><p>之后会显示出<strong>站点密钥</strong>和<strong>密钥</strong>，此时我们返回到自己WordPress的 <code>Simple Cloudflare Turnstile</code>插件中，将从<strong>Cloudflare</strong>中获得的key复制进去。</p><p><img src="https://s2.loli.net/2024/02/07/5ZXeu4ROKpGMNtd.png"></p><p>滑动到下面我们可以看到验证码开启的选项，从上到下分别是 <code>登录</code>、<code>注册</code>、<code>重置密码</code>和 <code>评论</code>，笔者在这里都打开了，各位读者可以选择性打开。</p><p><img src="https://s2.loli.net/2024/02/07/2TxsPhnNzLoV5jA.png"></p><p><img src="https://s2.loli.net/2024/02/07/APSDp2l1mrLcBQa.png"></p><p>如图这样就是成功了，我们可以点击 <code>TEST RESPONSE</code>来测试API是否成功调用</p><p><img src="https://s2.loli.net/2024/02/07/GkbaiXc1843KwFB.png"></p><p>现在，我们就已经成功为我们的WordPress站点添加了Cloudflare验证码。</p><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>Cloudflare Turnstile在尽可能减少对访问者的干扰下保护了网站的安全，如果你的WordPress面临着被机器人或者各种诈骗评论的影响，不妨试一试这款快捷的验证码服务。</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Wordpress </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何将文件夹内的图片文件批量转换为PDF文件</title>
      <link href="/2024/07/23/Tech/%E5%A6%82%E4%BD%95%E5%B0%86%E6%96%87%E4%BB%B6%E5%A4%B9%E5%86%85%E7%9A%84%E5%9B%BE%E7%89%87%E6%96%87%E4%BB%B6%E6%89%B9%E9%87%8F%E8%BD%AC%E6%8D%A2%E4%B8%BAPDF%E6%96%87%E4%BB%B6/"/>
      <url>/2024/07/23/Tech/%E5%A6%82%E4%BD%95%E5%B0%86%E6%96%87%E4%BB%B6%E5%A4%B9%E5%86%85%E7%9A%84%E5%9B%BE%E7%89%87%E6%96%87%E4%BB%B6%E6%89%B9%E9%87%8F%E8%BD%AC%E6%8D%A2%E4%B8%BAPDF%E6%96%87%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<h1 id="如何将文件夹内的图片文件批量转换为PDF文件"><a href="#如何将文件夹内的图片文件批量转换为PDF文件" class="headerlink" title="如何将文件夹内的图片文件批量转换为PDF文件"></a>如何将文件夹内的图片文件批量转换为PDF文件</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>笔者手头上有很多漫画，但是下下来的图片都为单独的 <code>jpg</code>或者 <code>png</code>格式，而这种格式不利于我们导入到其他的阅读器或者在nas上使用 <code>komga</code>等刮削器进行处理，于是我本来打算自写一个Python程序来对文件进行处理。</p><p>但刚好在GitHub上看到了一个项目，能实现和我一样的功能<a href="https://github.com/liuqi0725/image2PDF">image2PDF</a>，原本以为万事大吉，可以直接使用了，没想到该代码过于老旧，原作者已经有7年未对其进行维护，因此我修改了部分代码来适配新版的Python（目前我的版本为 <code>Python 3.12</code>）</p><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>目前我已经Fork了一份代码在我自己的<a href="https://github.com/liusomes/The_updater_of_image2PDF">仓库</a>中，如果你需要使用的话只需要将图中 <code>image2Pdf.py</code>下载下来，并且存到你漫画的文件夹中</p><p><img src="https://s2.loli.net/2024/02/24/oHiyZneFUfXSY9g.png" alt="image.png"></p><p>由于该程序使用了很多第三方库，因此在运行之前你需要下载以下第三方库：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install reportlab Pillow</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2024/02/24/w8byW2xqGzZjdhi.png" alt="image.png"></p><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>再次感谢<a href="https://github.com/liuqi0725">alexliu</a>大佬</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Discourse技术细节</title>
      <link href="/2024/07/20/Tech/Discourse%E6%8A%80%E6%9C%AF%E7%BB%86%E8%8A%82/"/>
      <url>/2024/07/20/Tech/Discourse%E6%8A%80%E6%9C%AF%E7%BB%86%E8%8A%82/</url>
      
        <content type="html"><![CDATA[<h1 id="Discourse技术细节"><a href="#Discourse技术细节" class="headerlink" title="Discourse技术细节"></a>Discourse技术细节</h1><h2 id="源站"><a href="#源站" class="headerlink" title="源站"></a>源站</h2><p>目前该站点运行在一台线路优化过的香港云服务器上：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> -s</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/discourse/discourse_docker.git /var/discourse</span><br><span class="line"><span class="built_in">cd</span> /var/discourse</span><br><span class="line"><span class="built_in">chmod</span> 700 containers</span><br></pre></td></tr></table></figure><p>Discourse对邮箱的依赖度挺高的，在这里我使用的是<strong>Resend</strong>提供的邮箱服务，再使用<strong>Cloudflare</strong>的邮箱路由对相应的邮箱进行转发。</p><p>由于该服务器我们希望部署其他服务，故我们使用 <code>Unix Socket</code>将容器内的Nginx转发到宿主机内，详细教程可参考官网论坛教程：</p><p><a href="https://meta.discourse.org/t/run-other-websites-on-the-same-machine-as-discourse/17247">Run other websites on the same machine as Discourse</a></p><h2 id="反向代理"><a href="#反向代理" class="headerlink" title="反向代理"></a>反向代理</h2><h3 id="一般情况"><a href="#一般情况" class="headerlink" title="一般情况"></a>一般情况</h3><p>为了保护原站，我们采用了其他线路优化的服务器进行反向代理：</p><ol><li>在目标服务器上配置Nginx：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt-get update</span><br><span class="line"><span class="built_in">sudo</span> apt-get install nginx</span><br></pre></td></tr></table></figure><ol start="2"><li>创建站点配置文件：</li></ol><p>创建一个新的Nginx配置文件，<code>/etc/nginx/sites-available/discourse-proxy</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> nano /etc/nginx/sites-available/discourse-proxy</span><br></pre></td></tr></table></figure><p>文件中写入一下文件：（该文件已强制SSL，测试默认站点为 <code>proxy.aicnal.tech</code>）</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">    <span class="attribute">listen</span> <span class="number">80</span>;</span><br><span class="line">    <span class="attribute">server_name</span> proxy.aicnal.tech;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Redirect all HTTP requests to HTTPS</span></span><br><span class="line">    <span class="attribute">return</span> <span class="number">301</span> https://<span class="variable">$host</span><span class="variable">$request_uri</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">    <span class="attribute">listen</span> <span class="number">443</span> ssl;</span><br><span class="line">    <span class="attribute">server_name</span> proxy.aicnal.tech;</span><br><span class="line"></span><br><span class="line">    <span class="section">location</span> / &#123;</span><br><span class="line">        <span class="attribute">proxy_pass</span> https://discourse.aicnal.tech;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> Host <span class="variable">$host</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> X-Forwarded-Proto <span class="variable">$scheme</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># SSL configuration</span></span><br><span class="line">    <span class="attribute">ssl_certificate</span> /etc/letsencrypt/live/proxy.aicnal.tech/fullchain.pem; <span class="comment"># managed by Certbot</span></span><br><span class="line">    <span class="attribute">ssl_certificate_key</span> /etc/letsencrypt/live/proxy.aicnal.tech/privkey.pem; <span class="comment"># managed by Certbot</span></span><br><span class="line">    <span class="attribute">include</span> /etc/letsencrypt/options-ssl-nginx.conf; <span class="comment"># managed by Certbot</span></span><br><span class="line">    <span class="attribute">ssl_dhparam</span> /etc/letsencrypt/ssl-dhparams.pem; <span class="comment"># managed by Certbot</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>启用站点配置：</li></ol><p>创建符号链接以启用站点：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> <span class="built_in">ln</span> -s /etc/nginx/sites-available/discourse-proxy /etc/nginx/sites-enabled/</span><br></pre></td></tr></table></figure><ol start="4"><li>获取SSL证书：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt-get install  certbot python3-certbot-nginx</span><br></pre></td></tr></table></figure><p>然后：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">certbot --nginx</span><br></pre></td></tr></table></figure><p>按照指引输入域名和邮箱，最后申请完成之后：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> systemctl restart nginx</span><br></pre></td></tr></table></figure><ol start="5"><li>访问反代后的网站：</li></ol><p>比如说我反代后的网站就是：<a href="https://proxy.aicnal.tech/">https://proxy.aicnal.tech</a></p><p>不过我建议你将 <code>http</code>和 <code>https</code>都测试一下，看一看强制 <code>https</code>有没有成功</p><h3 id="遭到攻击"><a href="#遭到攻击" class="headerlink" title="遭到攻击"></a>遭到攻击</h3><p>对于反代服务器，<del>我们可能会尝试部署**<a href="https://waf-ce.chaitin.cn/">雷池</a>**来进行初步防护</del>，但难免会出现被DDOS或者CC打穿的现象，这时我们准备开启防火墙，关闭80和443等其他端口。</p><p>为了维护站点的正常运行，我们会尝试使用<strong>Cloudflare Tunnel</strong>的方式维护站点的正常运行：</p><p>由于<strong>Cloudflare</strong>的业务变迁，之前的<strong>Argo Tunnel</strong>被迁移到了<strong>Zero Trust</strong>中，我们原本还是准备通过 <code>Unix</code>嵌套字实现<strong>Tunnel</strong>，可能是<strong>Cloudflare</strong>自身的限制（？）</p><p>所以最后我们采用了 <code>HTTPS</code>的方式创建隧道，使用云服务器厂商提供的<strong>云防火墙</strong>来进行防御（因为开启本地 <code>ufw</code>防火墙的话，<code>https</code>的 <code>443</code>端口也会被阻塞，从而无法使用</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Discourse </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>咖啡为什么能够提神</title>
      <link href="/2024/07/14/Note/%E5%92%96%E5%95%A1%E4%B8%BA%E4%BB%80%E4%B9%88%E8%83%BD%E5%A4%9F%E6%8F%90%E7%A5%9E/"/>
      <url>/2024/07/14/Note/%E5%92%96%E5%95%A1%E4%B8%BA%E4%BB%80%E4%B9%88%E8%83%BD%E5%A4%9F%E6%8F%90%E7%A5%9E/</url>
      
        <content type="html"><![CDATA[<h1 id="咖啡为什么能够提神"><a href="#咖啡为什么能够提神" class="headerlink" title="咖啡为什么能够提神"></a>咖啡为什么能够提神</h1><p>清晨的第一缕阳光透过窗户洒落在你的脸上，你伸了个懒腰，却依然感到些许疲惫。这时，一杯香气浓郁的咖啡，便是唤醒你活力之泉的最佳选择。</p><p>当你喝咖啡的时候，有没有想过：“为什么咖啡能够提升，它有什么魔力呢？”</p><h2 id="疲劳的原因"><a href="#疲劳的原因" class="headerlink" title="疲劳的原因"></a>疲劳的原因</h2><p>在讲咖啡什么能够提神之前，我觉得我们有必要从<strong>生物化学</strong>角度来探讨一下人为什么会感到困。</p><h3 id="ATP的水解过程"><a href="#ATP的水解过程" class="headerlink" title="ATP的水解过程"></a>ATP的水解过程</h3><p>对于人体来说，我们通过细胞内的线粒体来为细胞供能，这一过程我们通常称之为：<strong>ATP的水解</strong></p><p><img src="https://s2.loli.net/2024/07/13/seBEGnwb2LH9xov.png"></p><blockquote><p>作者 <a href="//commons.wikimedia.org/wiki/File:Scheme_sodium-potassium_pump-en.svg" title="File:Scheme sodium-potassium pump-en.svg">Scheme_sodium-potassium_pump-en.svg</a>: <a href="//commons.wikimedia.org/wiki/User:LadyofHats" title="User:LadyofHats">LadyofHats</a> Mariana Ruiz Villarrealderivative work: <a href="//commons.wikimedia.org/w/index.php?title=User:Shakiestone&action=edit&redlink=1" class="new" title="User:Shakiestone (page does not exist)">Shakiestone</a> (<a href="//commons.wikimedia.org/wiki/User_talk:Shakiestone" title="User talk:Shakiestone"><span class="signature-talk">talk</span></a>) - <a href="//commons.wikimedia.org/wiki/File:Scheme_sodium-potassium_pump-en.svg" title="File:Scheme sodium-potassium pump-en.svg">Scheme_sodium-potassium_pump-en.svg</a>，公有领域，<a href="https://commons.wikimedia.org/w/index.php?curid=12844587">链接</a></p></blockquote><p>其中ATP（腺苷三磷酸）的水解过程是细胞内能量释放的关键机制。ATP水解通常是指将APT转化为ADP（腺苷二磷酸）和Pi（无机磷酸）的过程。</p><p>其中ATP是由<strong>腺苷</strong>和三个<strong>磷酸基</strong>组成，ATP在非缓冲水溶液中不稳定，会水解为ADP和磷酸。这是因为ATP分子中的P-O-P键比形成的磷酸键能小，且产生了产物间和水间的氢键释放能量，使得反应放热而自发进行。其中最左边的两个<strong>磷酸键</strong>又被成为<strong>高能磷酸键</strong>，当细胞内发生能量转换的时候，对应的<strong>磷酸键</strong>就发生断裂（放热）或者生成（吸热）。</p><p><img src="https://s2.loli.net/2024/07/13/Ppg3un7jD8aiGH1.png"></p><p><strong>ATP水解的化学反应</strong>我们可以用以下公式表示：</p><p>ATP + H₂O → ADP + Pi + 能量</p><p>当放热反应结束后会生成ADP，正常情况下这些ADP又会马上参与吸热反应，重新生成ATP</p><h3 id="困倦与ATP的关系"><a href="#困倦与ATP的关系" class="headerlink" title="困倦与ATP的关系"></a>困倦与ATP的关系</h3><p>ATP的水解过程与困倦之间有着很大的关系，这种关系主要体现在能量代谢与神经地址的调节上：</p><h4 id="1-能量供应与ATP水解"><a href="#1-能量供应与ATP水解" class="headerlink" title="1. 能量供应与ATP水解"></a>1. 能量供应与ATP水解</h4><ul><li>ATP供应：<ul><li>大脑是人体内最耗能的器官之一，约消耗体内20%的总能量。神经元活动需要大量的ATP来维持电位差、神经递质的合成和释放，以及其他代谢活动。</li><li>在清醒状态下，神经元高度活跃，ATP快速水解以提供能量，这会导致腺苷（一种由ATP分解产生的代谢产物）在大脑中的积累。</li></ul></li></ul><h4 id="2-腺苷的作用"><a href="#2-腺苷的作用" class="headerlink" title="2.腺苷的作用"></a>2.腺苷的作用</h4><ul><li>腺苷的积累：<ul><li>腺苷是ATP分解的产物之一。当ATP水解并释放能量后，产生的腺苷会在大脑中逐渐积累。</li><li>腺苷在大脑中特定部位的受体（主要是A1受体）上起作用，抑制神经元的兴奋性，促进睡意的产生。这种抑制作用是一种保护机制，防止过度的神经活动，帮助恢复和保存能量。</li></ul></li></ul><h4 id="3-褪黑素的调节"><a href="#3-褪黑素的调节" class="headerlink" title="3.褪黑素的调节"></a>3.褪黑素的调节</h4><ul><li><strong>褪黑素的作用</strong>：<ul><li>褪黑素是一种由松果体分泌的激素，它的分泌与光线有直接关系。在夜间或黑暗环境中，褪黑素的分泌增加，促进困倦和入睡。</li><li>褪黑素的作用受到腺苷的影响，腺苷的积累可以增强褪黑素的作用，共同促进睡眠。</li></ul></li></ul><h4 id="4-神经递质和激素的调节"><a href="#4-神经递质和激素的调节" class="headerlink" title="4.神经递质和激素的调节"></a>4.神经递质和激素的调节</h4><ul><li><strong>其他神经递质的作用</strong>：<ul><li>除了腺苷，其他神经递质如γ-氨基丁酸（GABA）和5-羟色胺（5-HT）也参与睡眠调节。这些神经递质的合成和释放同样依赖于ATP的供应。</li><li>ATP的水解产生能量，支持这些神经递质的合成和释放，从而调节睡眠-觉醒周期。</li></ul></li></ul><h4 id="5-睡眠债和恢复"><a href="#5-睡眠债和恢复" class="headerlink" title="5.睡眠债和恢复"></a>5.睡眠债和恢复</h4><ul><li><strong>睡眠债的概念</strong>：<ul><li>在清醒状态下，大量的ATP被水解和利用，导致腺苷的积累和能量的消耗。睡眠期间，腺苷水平下降，ATP水平恢复，为下一次清醒提供能量储备。</li><li>长期睡眠不足会导致“睡眠债”的积累，表现为困倦和疲劳感增强。充分的睡眠有助于恢复ATP水平，清除腺苷积累。</li></ul></li></ul><p>我们可以通过一个简单的流程图来了解此过程：</p><p><img src="https://s2.loli.net/2024/07/13/lzXuJdMf2GYCExk.png"></p><h3 id="咖啡的作用"><a href="#咖啡的作用" class="headerlink" title="咖啡的作用"></a>咖啡的作用</h3><p><strong>咖啡</strong>之所以能够提神，其中最重要的一种成分就叫做<strong>咖啡因</strong></p><p><img src="https://s2.loli.net/2024/07/13/hsPUocG154mRj9J.png"></p><blockquote><p>作者 <a href="//commons.wikimedia.org/wiki/User:NEUROtiker" title="User:NEUROtiker">NEUROtiker</a> - <span class="int-own-work" lang="zh-cn">自己的作品</span>，公有领域，<a href="https://commons.wikimedia.org/w/index.php?curid=1699211">链接</a></p></blockquote><p><strong>咖啡因</strong>能够拮抗<strong>腺苷受体${A}_{2}$<strong>，有效地阻止了腺苷受体部位的腺苷，推迟了睡意，并释放出了多巴胺。咖啡因在化学上与腺苷很像，也能够与</strong>腺苷受体</strong>进行结合，不过咖啡因与<strong>腺苷受体</strong>结合后“占着茅坑不拉屎”，无法让<strong>腺苷受体</strong>激活，同时也无法被水解，导致<strong>腺苷</strong>无法与受体结合，从而抑制困觉的产生。</p><p><img src="https://s2.loli.net/2024/07/13/kjXovVsqYQT9AiO.png"></p><h3 id="咖啡因的依赖"><a href="#咖啡因的依赖" class="headerlink" title="咖啡因的依赖"></a>咖啡因的依赖</h3><p>在药理学角度看，咖啡因是一种常见的<strong>中枢神经兴奋剂</strong>，在<strong>茶</strong>、<strong>可可</strong>（巧克力）又或者我们刚才一直在聊的<strong>咖啡</strong>中很常见。</p><p>咖啡因的作用机制与可卡因和安非他命衍生物的机制有些不同，咖啡因通过阻断腺苷受体${A}<em>{1}$和${A}</em>{2}$，从而阻断腺苷的与受体结合，这使得如<strong>多巴胺</strong>和<strong>去甲肾上腺素</strong>在体内维持较高水平。</p><p>长期摄入咖啡因会导致轻度的生理依赖，即咖啡因依赖（注意<strong>依赖</strong>和<strong>成瘾</strong>是两个完全不同的概念），甚至会促进腺苷受体的合成（这一点就和可卡因的成瘾机制有点像了），咖啡因能够增强大脑中的多巴胺信号，但不足以像<strong>可卡因</strong>、<strong>吗啡</strong>和<strong>尼古丁</strong>等成瘾物质一样激活大脑的奖赏回路。</p><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>最后还是希望大家还是能不要过多依赖<strong>咖啡</strong>，能养成正常的作息习惯。当然肯定有同学对于<strong>咖啡</strong>不敏感，比如喝了咖啡还是困（比如我）。这种情况显然是存在的，因为<strong>腺苷受体</strong>的结构可能不同，导致<strong>咖啡因</strong>无法与受体结合，也就无法完成上述过程。</p><p>之前还看到一个<strong>科普</strong>视频，有个博主鼓吹<strong>咖啡因</strong>的益处，说<strong>咖啡因</strong>除了<strong>利尿</strong>之外没有其他坏处，但实际上<strong>咖啡因</strong>除了会产生<strong>依赖</strong>外，还会引起失眠、偏头痛和眼压变化（诸如青光眼就是眼压过高）</p>]]></content>
      
      
      <categories>
          
          <category> 生物学 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>听说你也喜欢“小狗”——北京线条小狗快闪店</title>
      <link href="/2024/07/14/%E6%97%A5%E5%B8%B8/%E5%90%AC%E8%AF%B4%E4%BD%A0%E4%B9%9F%E5%96%9C%E6%AC%A2%E2%80%9C%E5%B0%8F%E7%8B%97%E2%80%9D%E2%80%94%E2%80%94%E5%8C%97%E4%BA%AC%E7%BA%BF%E6%9D%A1%E5%B0%8F%E7%8B%97%E5%BF%AB%E9%97%AA%E5%BA%97/"/>
      <url>/2024/07/14/%E6%97%A5%E5%B8%B8/%E5%90%AC%E8%AF%B4%E4%BD%A0%E4%B9%9F%E5%96%9C%E6%AC%A2%E2%80%9C%E5%B0%8F%E7%8B%97%E2%80%9D%E2%80%94%E2%80%94%E5%8C%97%E4%BA%AC%E7%BA%BF%E6%9D%A1%E5%B0%8F%E7%8B%97%E5%BF%AB%E9%97%AA%E5%BA%97/</url>
      
        <content type="html"><![CDATA[<h1 id="听说你也喜欢“小狗”——北京线条小狗快闪店"><a href="#听说你也喜欢“小狗”——北京线条小狗快闪店" class="headerlink" title="听说你也喜欢“小狗”——北京线条小狗快闪店"></a>听说你也喜欢“小狗”——北京线条小狗快闪店</h1><p><strong>线条小狗</strong>快闪店终于来北京了，作为小狗迷的我肯定不能错过，于是偷偷翘掉最后一天军训，坐了一个多小时地铁去看了小狗</p><p><img src="https://img.duckk.org/2024/11/dc3fd417cb8d9fd021ac6c150c8a049e.jpeg"></p><p>本次<strong>线条小狗</strong>快闪店特意以“<strong>京味</strong>”为主题，推出了几款北京的限定玩偶（还挺好看，尤其是有一个讲相声的让我印象十分深刻</p><p>其中我个人觉得最有纪念意义的应该是这个类似于<strong>门票</strong>的东西：</p><p><img src="https://img.duckk.org/2024/11/ae3a317b78e612ecae8d5921658eb1c3.jpeg"></p><p>谁看了不迷糊啊哈哈哈哈哈</p><p>当然还有小狗手环：</p><p><img src="https://img.duckk.org/2024/11/98b5a2b5298f882597c5a39ced50cb0c.jpeg"></p><p>当然还买了一些其他的很有意思的纪念品，这里就不一一展开了（还是想小狗能出价格便宜一点的手机壳👀️</p>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 线条小狗 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何使用脚本来挂学习通？</title>
      <link href="/2024/07/12/Tech/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8%E8%84%9A%E6%9C%AC%E6%9D%A5%E6%8C%82%E5%AD%A6%E4%B9%A0%E9%80%9A%EF%BC%9F/"/>
      <url>/2024/07/12/Tech/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8%E8%84%9A%E6%9C%AC%E6%9D%A5%E6%8C%82%E5%AD%A6%E4%B9%A0%E9%80%9A%EF%BC%9F/</url>
      
        <content type="html"><![CDATA[<h1 id="如何使用脚本来挂学习通？"><a href="#如何使用脚本来挂学习通？" class="headerlink" title="如何使用脚本来挂学习通？"></a>如何使用脚本来挂学习通？</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>学习通在很久以来都是大学生的噩梦，而作为大学生的你是否已经厌倦了一遍又一遍无聊得刷着学习通的网课了呢？</p><p>实际上我们可以利用油猴脚本来自动化刷学习通的网课（挂机），从而为我们节省时间去做一些其他的事情。</p><h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><h3 id="插件安装"><a href="#插件安装" class="headerlink" title="插件安装"></a>插件安装</h3><p>在挂脚本操作之前，我们需要一个前置应用：油猴，也就是篡改猴</p><p><img src="https://s2.loli.net/2024/03/24/7C5gJF9Q1VbrPIq.jpg"></p><h4 id="Edge-浏览器"><a href="#Edge-浏览器" class="headerlink" title="Edge 浏览器"></a>Edge 浏览器</h4><p>首先直接点击浏览器右上角的三个小点</p><p><img src="https://s2.loli.net/2024/03/24/3LtnpoGFZ9sQ4Ta.png"></p><p>点出来之后进入“扩展”界面</p><p><img src="https://s2.loli.net/2024/03/24/pgj9yZexRrDM36C.png"></p><p>点击“打开Microsoft Edge加载项”</p><p><img src="https://s2.loli.net/2024/03/24/emCH6qQuKLkBc1v.png"></p><p>之后会跳转到一个新的页面，在左上角我们进行搜索“篡改猴”</p><p><img src="https://s2.loli.net/2024/03/24/elRhf6dSoqOA9nP.png"></p><p>之后我们选择第二个就可以了，点击“获取”</p><p><img src="https://s2.loli.net/2024/03/24/7v94S2tEroONkTl.png" alt="image.png"></p><p>点击“添加扩展”</p><p><img src="https://s2.loli.net/2024/03/24/LBIa98JwnGvezh5.png" alt="image.png"></p><p>此时拓展就算安装成功了</p><h4 id="Chrome-浏览器（或者是基于其内核的浏览器"><a href="#Chrome-浏览器（或者是基于其内核的浏览器" class="headerlink" title="Chrome 浏览器（或者是基于其内核的浏览器"></a>Chrome 浏览器（或者是基于其内核的浏览器</h4><p>如果你可以正常访问谷歌的话，你可以按照类似的方法直接在Chrome应用商店里面下载，但如果你不能正常访问的话，我们可以通过安装其crx文件来进行离线安装。</p><p>首先我们需要进入到油猴的<a href="https://www.tampermonkey.net/index.php?browser=chrome&locale=zh">官网</a>，点击左边类似压缩包的东西</p><p><img src="https://s2.loli.net/2024/03/24/TvGD2M5tR4HumCJ.png"></p><p>下载完成之后应该是类似这样的文件，后缀为.crx</p><p><img src="https://s2.loli.net/2024/03/24/fyVnhM8dQxzlsLm.png"></p><p>打开浏览器设置，打开扩展程序页面，或者直接搜索Chrome:&#x2F;&#x2F;extensions&#x2F;进入。然后保持页面开发者模式的开启。找到被解压后的tampermonkey.crx文件，将其拖动到扩展程序页面，释放并同意完成安装。（直接复制知乎老哥的话了）</p><p>不管哪种浏览器安装成功都会出现这样的画面，同时右上角会出现油猴的图标</p><p><img src="https://s2.loli.net/2024/03/24/BzVL8Ykmy5PahEb.png" alt="image.png"></p><h3 id="脚本安装"><a href="#脚本安装" class="headerlink" title="脚本安装"></a>脚本安装</h3><p>刚开始我就说了，油猴是借助脚本来实现功能的，而脚本其实就是一些大佬写好的程序，你可以去一些网站去寻找这些脚本，我这里就直接使用<a href="https://greasyfork.org/zh-CN">GreasyFork (油叉)</a>来安装脚本了。</p><p>进入到油叉的官网，首页它也会介绍一下脚本是什么东西，你可以仔细看一下了解脚本的作用和使用方法，这里就不展开了</p><p><img src="https://s2.loli.net/2024/03/24/MHwl5n6WRQFBsrC.png"></p><p>我们点击中间“搜索用户脚本”，输入“学习通”，你可以点入一个你感兴趣的脚本去查看</p><p><img src="https://s2.loli.net/2024/03/24/vWVSMZTCGyOdY5k.png"></p><p>在脚本的详询页你可以看到一些关于脚本的介绍和用途，同时你可以看到脚本的一些“可能不受欢迎的功能”，有些脚本可以要付费，所以在安装之前请务必考虑清楚，同时安装不安全的脚本可以会监控你的个人隐私，安装脚本之前请务必选择自己信任的来源！！！</p><p><img src="https://s2.loli.net/2024/03/24/MT16mwj4qhsSnFC.png" alt="作者也是要吃饭的啦"></p><p>但其实这种刷课的脚本我们不付费也可以使用最基本的功能，所以我们直接安装</p><p>之后会弹出另一个界面，我们继续点击安装</p><p><img src="https://s2.loli.net/2024/03/24/WUzXfFukJogSj5D.png"></p><p>之后在右上角的“扩展”界面点开“管理面板”，即可看到我们所启用的脚本</p><p><img src="https://s2.loli.net/2024/03/24/qJmRb5Dd29uweTg.png"></p><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>使用其实很简单，我们只需要打开学习通的网站，打开你需要学习的章节和视频界面，脚本就会自动开始执行命令，这时候即使你将浏览器最小化它也会自动执行。对于一些脚本它还可以查题，自动提交答案，如果你信任脚本的题库你可以启用，但我认为你应该将自动提交关闭（问就是失手过</p><p><img src="https://s2.loli.net/2024/03/24/pXyZVoSE6Nf3xDA.png"></p><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>网课本身是好的，它方便了我们学习，为我们提供了另外一种学习途径。但是我仍然希望大家客观看待网课，好的网课值得大家反复观看，水的网课…</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>铭匠F1.2使用体验</title>
      <link href="/2024/07/12/%E6%97%A5%E5%B8%B8/F1-2%E4%BD%BF%E7%94%A8%E4%BD%93%E9%AA%8C/"/>
      <url>/2024/07/12/%E6%97%A5%E5%B8%B8/F1-2%E4%BD%BF%E7%94%A8%E4%BD%93%E9%AA%8C/</url>
      
        <content type="html"><![CDATA[<h1 id="铭匠50mm-F1-2使用体验"><a href="#铭匠50mm-F1-2使用体验" class="headerlink" title="铭匠50mm F1.2使用体验"></a>铭匠50mm F1.2使用体验</h1><h2 id="前记"><a href="#前记" class="headerlink" title="前记"></a>前记</h2><p><img src="https://img.duckk.org/2024/11/45a38d7883185c0ac53bef0315582d58.png"></p><p><strong>这颗铭匠的50mm F1.2是我自费从小黄鱼上面购买的，富士X卡口，残幅，350到付。事实上在我买这颗镜头之前有一颗富士的XF 23-55 F2.8-4.0，想另外买一颗定焦是因为我平时用50焦段的比较多，而且想低价试手玩玩大光圈。</strong></p><p><strong>正如你所看到的，这颗镜头其实还挺小的，装到相机上面还是很漂亮的。此外我买的时候卖家给我送了一个UV镜，我看了看镜头内部也没有进灰，光圈扇叶也都是好的。接下来废话不多说，让大家看看样片。</strong></p><h2 id="实际拍摄"><a href="#实际拍摄" class="headerlink" title="实际拍摄"></a>实际拍摄</h2><p><img src="https://img.duckk.org/2024/11/a3bcb9e95290436254ae89c434928f02.webp"></p><p><img src="https://img.duckk.org/2024/11/d47b3c20457afb8480f34e24d91d7c1d.webp"></p><p><img src="https://img.duckk.org/2024/11/ffc7f3c8fa2d7335f14b946a87f07348.webp"></p><p><img src="https://img.duckk.org/2024/11/6787ee7c73da08fc0ead10a314a79028.webp"></p><p><img src="https://img.duckk.org/2024/11/f245027a584c1e85d6b38d96d2b057b0.webp"></p><p><strong>正如你所看到的，我所有照片都是用F2.0拍摄的，至少在我看来，我认为F1.2的完全不能用的，画面很糊，而F2.0的景深就足以让我感受到大光圈的美了。</strong></p><h2 id="对比"><a href="#对比" class="headerlink" title="对比"></a>对比</h2><p><strong>正如大家一直说的，一分钱一分货，铭匠这颗镜头这么便宜当然也是有原因的。</strong></p><p><strong>首先是镜头本身自己的缺陷。第二张样片不知道大家有没有仔细看，实际上在焦外的一部分出现了严重的紫边和畸形</strong></p><p><strong>我后期所使用的软件是Capture One，使用了里面的去紫边功能，但是这种情况根本无法完全解决，实际上对于观感的影响还是很明显的。</strong></p><p><strong>此外和富士原厂的镜头对比也很明显，实际上两者都使用了Capture One富士给的经典负片的曲线，但是明显原厂的镜头更有质感，而且焦外更加漂亮，虽然二者的焦段相同但是光圈不同可能拉来对比可能有失公允，但也足以管中窥豹了。</strong></p><p><img src="https://img.duckk.org/2024/11/df9d7b2f0c9e8ff88219e5243b56d364.webp"></p><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p><strong>如果你钱不够但是还想体验大光圈的快乐的话，那这颗镜头能带给你的乐趣肯定远超它的价值。而且现代的微单都有辅助对焦系统，运用好峰值对焦，就算是小白也能很轻松地拿捏好焦点。</strong></p>]]></content>
      
      
      <categories>
          
          <category> 摄影 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 镜头 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于Resend的发信服务</title>
      <link href="/2024/07/11/Tech/%E5%9F%BA%E4%BA%8EResend%E7%9A%84%E5%8F%91%E4%BF%A1%E6%9C%8D%E5%8A%A1/"/>
      <url>/2024/07/11/Tech/%E5%9F%BA%E4%BA%8EResend%E7%9A%84%E5%8F%91%E4%BF%A1%E6%9C%8D%E5%8A%A1/</url>
      
        <content type="html"><![CDATA[<h1 id="基于Resend的发信服务"><a href="#基于Resend的发信服务" class="headerlink" title="基于Resend的发信服务"></a>基于Resend的发信服务</h1><p><strong>Resend</strong>为免费用户提供了每天100条的发信业务，这对于我们普通用户来说绰绰有余</p><h2 id="注册Resend账号"><a href="#注册Resend账号" class="headerlink" title="注册Resend账号"></a>注册Resend账号</h2><p><a href="https://resend.com/">官网</a></p><p>之后点击<strong>Get Started</strong>，进行注册，注册完成之后进入设置界面</p><h2 id="申请API-Key并发信"><a href="#申请API-Key并发信" class="headerlink" title="申请API Key并发信"></a>申请API Key并发信</h2><p><strong>Resend</strong>是采用<strong>API</strong>的方式进行验证的，我们需要申请一个<strong>API Key</strong>使用<strong>Resend</strong>的服务：</p><p><img src="https://img.duckk.org/2024/11/a53c0df35b1e8458c79b5aa9f13b350e.webp"></p><p>申请好之后会变成绿色：</p><p><img src="https://img.duckk.org/2024/11/b7d078c64ccd51f04f4a6e585e04da0f.webp"></p><p>你可以点击下面的<strong>Send email</strong>测试一下发信功能：</p><p><img src="https://img.duckk.org/2024/11/3f29ccf8491c901907c701e95e6891df.webp"></p><p>此时你应该完成了以下步骤：</p><p><img src="https://img.duckk.org/2024/11/926a4c325f1a8cc83c4888d0b0d5a670.webp"></p><h2 id="添加自己的域名"><a href="#添加自己的域名" class="headerlink" title="添加自己的域名"></a>添加自己的域名</h2><p>如果你有自己的域名的话，你可以创建自己的域名邮箱，诸如 <code>@juniortree.com</code></p><p>点击<strong>Add a domain</strong>：</p><p><img src="https://img.duckk.org/2024/11/fca618cc752ec16fa48cee2ce7cf55cc.webp"></p><p>输入你自己的域名：（不必太纠结你选择的区域，你没氪金就只有一个地方可以选）</p><p><img src="https://img.duckk.org/2024/11/b27c2d8ff2bb9a3450a85a7522d9ec3d.webp"></p><p>下面请到你的域名托管商添加DNS记录，你最少要添加三个<strong>DKIM</strong>和<strong>SPF</strong>记录，<strong>DMARC</strong>记录<strong>建议</strong>添加，可以增加邮件的<strong>可到达性</strong>（减少被丢到垃圾邮件的概率）</p><p><img src="https://img.duckk.org/2024/11/9e35a7ec85f4e0ef5eaf1dbcb925cfcc.webp"></p><p>之后点击<strong>Verifty</strong>验证<strong>DNS</strong>是否解析成功</p><p><img src="https://img.duckk.org/2024/11/e94ec185b528da0a5e1a393c27ebef0a.webp"></p><h2 id="发送邮件"><a href="#发送邮件" class="headerlink" title="发送邮件"></a>发送邮件</h2><p><strong>Resend</strong>为我们提供了很方便的接口，让我们能通过诸如<strong>Node.js</strong>、<strong>Ruby</strong>、<strong>PHP</strong>、<strong>Python</strong>、<strong>Go</strong>、<strong>Rust</strong>和<strong>Java</strong>等这些编程语言来调用接口实现发信功能</p><p>我们先来到左侧栏的<strong>Emails</strong>，点击<strong>API</strong>:</p><p>以下是基于<strong>Python</strong>的示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> resend</span><br><span class="line"></span><br><span class="line"><span class="comment"># 填入你自己的API Key</span></span><br><span class="line">resend.api_key = <span class="string">&quot;re_123456789&quot;</span></span><br><span class="line">```</span><br><span class="line"><span class="comment"># 这一部分是发送附件的 我们单发测试短信可以删除</span></span><br><span class="line">f: <span class="built_in">bytes</span> = <span class="built_in">open</span>(</span><br><span class="line">  os.path.join(os.path.dirname(__file__), <span class="string">&quot;../resources/invoice.pdf&quot;</span>), <span class="string">&quot;rb&quot;</span></span><br><span class="line">).read()</span><br><span class="line"></span><br><span class="line">attachment: resend.Attachment = &#123;<span class="string">&quot;filename&quot;</span>: <span class="string">&quot;invoice.pdf&quot;</span>, <span class="string">&quot;content&quot;</span>: <span class="built_in">list</span>(f)&#125;</span><br><span class="line">```</span><br><span class="line">params: resend.Emails.SendParams = &#123;</span><br><span class="line">  <span class="string">&quot;from&quot;</span>: <span class="string">&quot;onboarding@resend.dev&quot;</span>, <span class="comment"># 设置为你自己域名邮箱 随便哪个都行 比如我设置的是test@juniortree.com</span></span><br><span class="line">  <span class="string">&quot;to&quot;</span>: [<span class="string">&quot;delivered@resend.dev&quot;</span>], <span class="comment"># 设置为你发信的邮箱 </span></span><br><span class="line">  <span class="string">&quot;subject&quot;</span>: <span class="string">&quot;hi&quot;</span>,</span><br><span class="line">  <span class="string">&quot;html&quot;</span>: <span class="string">&quot;&lt;strong&gt;hello, world!&lt;/strong&gt;&quot;</span>,</span><br><span class="line">  <span class="string">&quot;headers&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;X-Entity-Ref-ID&quot;</span>: <span class="string">&quot;123456789&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;attachments&quot;</span>: [attachment], <span class="comment"># 这里也是发送附件 如果你删除了上面发送附件的部分 这个也一并删除</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">email = resend.Emails.send(params)</span><br><span class="line"><span class="built_in">print</span>(email)</span><br></pre></td></tr></table></figure><p>如果你是发送这样简单的测试邮箱的话，你的邮件有可能会被丢入<strong>垃圾邮件</strong>（因为内容过于简单了）</p><p>以下是发送成功的示例：</p><p><img src="https://img.duckk.org/2024/11/bb8067cf7bb94313aa8ea218042f3177.webp"></p><p><img src="https://img.duckk.org/2024/11/63cfaebf314fc06d73c54f515a567880.webp"></p><p><img src="https://img.duckk.org/2024/11/cbdeb1eaf4563940395f2b61b46054d8.webp"></p><h2 id="设置SMTP发送"><a href="#设置SMTP发送" class="headerlink" title="设置SMTP发送"></a>设置SMTP发送</h2><p>如果你想要使用<strong>SMTP</strong>服务器发送的话，请回到<strong>左侧栏</strong>，选择<strong>Setting</strong>：</p><p><img src="https://img.duckk.org/2024/11/57f76a715c805d13b222d8718675b79d.webp"></p><p>点击<strong>SMTP</strong>即可，<strong>主机名</strong>、<strong>端口</strong>、<strong>用户名</strong>和<strong>密码</strong>一应俱全，按照要求填写即可</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网站 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>神奇的超级战士——单克隆抗体（单抗）</title>
      <link href="/2024/07/11/%E6%97%A5%E5%B8%B8/%E7%A5%9E%E5%A5%87%E7%9A%84%E8%B6%85%E7%BA%A7%E6%88%98%E5%A3%AB%E2%80%94%E2%80%94%E5%8D%95%E5%85%8B%E9%9A%86%E6%8A%97%E4%BD%93%EF%BC%88%E5%8D%95%E6%8A%97%EF%BC%89/"/>
      <url>/2024/07/11/%E6%97%A5%E5%B8%B8/%E7%A5%9E%E5%A5%87%E7%9A%84%E8%B6%85%E7%BA%A7%E6%88%98%E5%A3%AB%E2%80%94%E2%80%94%E5%8D%95%E5%85%8B%E9%9A%86%E6%8A%97%E4%BD%93%EF%BC%88%E5%8D%95%E6%8A%97%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="神奇的超级战士——单克隆抗体（单抗）"><a href="#神奇的超级战士——单克隆抗体（单抗）" class="headerlink" title="神奇的超级战士——单克隆抗体（单抗）"></a>神奇的超级战士——单克隆抗体（单抗）</h1><blockquote><p>单克隆抗体（英语：monoclonal antibody，缩写：mAb），又称单株抗体，简称单抗，是仅由一种类型的免疫细胞制造出来的抗体，相对于多克隆抗体（由多种类型的B细胞所制造出来的一种抗体）。</p></blockquote><p><strong>单克隆抗体</strong>的本质其实还是抗体，不过这种抗体是由人工制备的杂交瘤细胞产生的，只对一种特异性抗原起免疫反应。在临床上它不仅被广泛用来做<strong>病原体鉴定</strong>、<strong>激素测定</strong>，甚至被用到<strong>抗病毒治疗</strong>和<strong>癌症治疗</strong>中。</p><h2 id="单克隆抗体的制备"><a href="#单克隆抗体的制备" class="headerlink" title="单克隆抗体的制备"></a>单克隆抗体的制备</h2><p><strong>抗体</strong>的本质其实是由<strong>效应B细胞</strong>（<strong>浆细胞</strong>）分泌的一种特殊的糖蛋白</p><p>但是传统的<strong>效应B细胞</strong>是以及完全分化的细胞，不具备<strong>增值</strong>的能力，同时随着<strong>抗体</strong>的不断生成与分泌，<strong>效应B细胞</strong>实际上是有寿命的。为了解决这个方法，1975年<strong>乔治斯·克勒</strong>与<strong>色萨·米尔斯坦</strong>创造性的将<strong>骨髓瘤细胞</strong>与<strong>效应B细胞</strong>融合为<strong>杂交瘤细胞</strong>，并在1984年获得<strong>诺贝尔生理学或医学奖</strong>。</p><p>这种<strong>杂交瘤细胞</strong>在功能上既保留了<strong>骨髓瘤细胞</strong>能不断增值的特点，又保留了<strong>效应B细胞</strong>能产生大量<strong>抗体</strong>的特点。</p><h2 id="杂交瘤技术的具体步骤"><a href="#杂交瘤技术的具体步骤" class="headerlink" title="杂交瘤技术的具体步骤"></a>杂交瘤技术的具体步骤</h2><p>实际上以及有大量的文献以及对<strong>杂交瘤细胞</strong>的配置有了较为系统和详细的讲述，包括在<strong>人教版</strong>的高中物理课本中也有对<strong>杂交瘤细胞</strong>的形成有着一定的讲解，在这里我们简单过一下：</p><ol><li><strong>免疫小鼠</strong>：将抗原注射到小鼠体内，刺激其免疫系统产生针对该抗原的抗体。通常经过几周时间，小鼠的脾脏（含有大量抗体产生的浆细胞）就会发育完全。</li><li><strong>脾细胞提取</strong>：从免疫小鼠中提取脾脏细胞，其中包含大量产生特定抗体的浆细胞。</li><li><strong>骨髓瘤细胞培养</strong>：在实验室中培养骨髓瘤细胞系。这些细胞是恶性肿瘤细胞，具有无限增殖能力，但不会自然产生抗体。</li><li><strong>细胞融合</strong>：将脾脏细胞与骨髓瘤细胞混合，利用聚乙二醇（PEG）或电融合等方法促使两种细胞融合形成杂合细胞（杂交瘤细胞）。</li><li><strong>筛选杂交瘤细胞</strong>：将融合后的细胞在选择性培养基（例如HAT培养基）中培养，只允许杂交瘤细胞存活。未融合的骨髓瘤细胞和浆细胞在这种培养基中不能存活。</li><li><strong>克隆筛选</strong>：对存活的杂交瘤细胞进行克隆筛选，以确定哪种细胞能够分泌所需的单克隆抗体。通常通过ELISA或免疫荧光法进行筛选。</li><li><strong>单克隆抗体生产</strong>：选定的杂交瘤细胞克隆被大规模培养，以产生大量的单克隆抗体。</li></ol><p>我们先使小鼠对该抗原产生免疫反应，使得其产生对应的<strong>效应B细胞</strong>，之后再将该<strong>效应B细胞</strong>与<strong>骨髓瘤细胞</strong>进行杂交，融合产生<strong>杂交细胞</strong>。由于未融合的<strong>骨髓瘤细胞</strong>缺乏<strong>HPRT酶</strong>，因此我们可以通过<strong>HAT培养基</strong>对其进行筛选，选出融合的<strong>杂交细胞</strong>。</p><p><strong>杂交细胞</strong>中也不一定能产生我们期待的<strong>抗体</strong>，同时能产生相同<strong>抗体</strong>的<strong>杂交细胞</strong>的<strong>产量</strong>也不一样。这时候我们可以通过免疫学方法，诸如<strong>抗原—抗体</strong>杂交法，对<strong>杂交细胞</strong>进行筛选，找到出我们所期待的<strong>杂交细胞</strong>。</p><blockquote><p>图片来源：By <a href="//commons.wikimedia.org/wiki/User:Adenosine" title="User:Adenosine">Adenosine</a> - <span class="int-own-work" lang="en">Own work</span>, <a href="https://creativecommons.org/licenses/by-sa/3.0" title="Creative Commons Attribution-Share Alike 3.0">CC BY-SA 3.0</a>, <a href="https://commons.wikimedia.org/w/index.php?curid=9659630">Link</a></p></blockquote><h2 id="杂交细胞的性状表达"><a href="#杂交细胞的性状表达" class="headerlink" title="杂交细胞的性状表达"></a>杂交细胞的性状表达</h2><p>但其实我个人最好奇的是为什么<strong>杂交瘤细胞</strong>既具有<strong>效应B细胞</strong>能够分泌<strong>抗体</strong>又具有<strong>骨髓瘤细胞</strong>大量<strong>增值</strong>的特性；为什么最终融合出来的<strong>杂交瘤细胞</strong>不会是既具有<strong>骨髓瘤细胞</strong>无法分泌<strong>抗体</strong>又具有<strong>效应B细胞</strong>无法增值的<strong>负</strong>特性。</p><p>这个问题我个人想了很久，以下是我的一些猜想（还未经过实验验证）：</p><p>实际融合的过程中确实会产生 <code>是既具有骨髓瘤细胞无法分泌抗体又具有效应B细胞无法增值</code>的“废物细胞”。但是还记得我们在**杂交瘤技术的具体步骤中说到：</p><blockquote><ol start="6"><li><strong>克隆筛选</strong>：对存活的杂交瘤细胞进行克隆筛选，以确定哪种细胞能够分泌所需的单克隆抗体。通常通过ELISA或免疫荧光法进行筛选。</li></ol></blockquote><p>有没有可能在这个过程中我们会观察到某些<strong>惰性</strong>细胞，它们既不生产<strong>抗体</strong>又不<strong>增殖</strong>，最终被我们人为<strong>淘汰</strong>。</p><h2 id="个人想法"><a href="#个人想法" class="headerlink" title="个人想法"></a>个人想法</h2><p>有人说：“世界是一个巨大的草台班子”，觉得<strong>杂交瘤技术</strong>的发明有些过于“荒诞”——将两个原本毫不相干的细胞轻轻融合在一起就形成了一个<strong>超级细胞</strong>。</p><p>但是人类科技的推动不就是靠着这一个个看似<strong>怪诞</strong>的尝试吗？<strong>石墨烯</strong>、<strong>杂交瘤技术</strong>…我们不应该被世俗的想象力给束缚，而是去不断创造，去尝试！</p>]]></content>
      
      
      <categories>
          
          <category> 生物学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 细胞与生化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>危害人类的重大传染病——白喉</title>
      <link href="/2024/07/09/Note/%E5%8D%B1%E5%AE%B3%E4%BA%BA%E7%B1%BB%E7%9A%84%E9%87%8D%E5%A4%A7%E4%BC%A0%E6%9F%93%E7%97%85%E2%80%94%E2%80%94%E7%99%BD%E5%96%89/"/>
      <url>/2024/07/09/Note/%E5%8D%B1%E5%AE%B3%E4%BA%BA%E7%B1%BB%E7%9A%84%E9%87%8D%E5%A4%A7%E4%BC%A0%E6%9F%93%E7%97%85%E2%80%94%E2%80%94%E7%99%BD%E5%96%89/</url>
      
        <content type="html"><![CDATA[<h1 id="危害人类的重大传染病——白喉"><a href="#危害人类的重大传染病——白喉" class="headerlink" title="危害人类的重大传染病——白喉"></a>危害人类的重大传染病——白喉</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>最近我看新闻的时候看到越南出现了新的<strong>白喉</strong>疫情，突然看到评论区里面很多人甚至不知道<strong>白喉</strong>是什么。发现<strong>白喉</strong>似乎离我们已经很远很远了。</p><p><img src="https://img.duckk.org/2024/11/7362c1dca8a37fd8f00ca537b7eeb243.png"></p><p>但其实对于越南，类似的<strong>白喉</strong>疫情已经发生过很多起：</p><p>2023年、2020年都报道过多起<strong>白喉</strong>疫情，那么原本被当作“<strong>儿童杀手</strong>”的白喉是如何带走年轻的生命，又是如何逐渐地被人类“征服”呢？</p><h2 id="起源"><a href="#起源" class="headerlink" title="起源"></a>起源</h2><p>早在西元5世纪，现代医学之父<strong>希波克拉底</strong>就曾记载过这种可怕的疫情，但受限于人们对于微生物的认识，直到1882年，Edwin Klebs（爱德恩·克拉伯）才发现了白喉的致病菌——<strong>白喉棒状杆菌</strong>。</p><p>不知道你是否好奇“<strong>白喉</strong>”这个名字的由来，事实上这个名字的由来是有一定的根源的，当患者感染<strong>白喉杆菌</strong>之后，刚开始的症状通常是</p><p><strong>喉咙痛</strong>和<strong>发热</strong>。在发展初期患者通常容易被误诊为<strong>上呼吸道感染</strong>，而随着病情的发展，较为严重的病人扁桃体上会出现<strong>灰色</strong>或<strong>白色</strong>的斑块，这些斑块在临床上被称为<strong>喉咙假膜</strong>。</p><p><strong>假膜</strong>的形成是<strong>白喉</strong>的典型表现，<strong>假膜</strong>多发于<strong>粘膜层</strong>，由坏死的粘膜、纤维蛋白、中性粒细胞、微生物如细菌等物质组成的膜状物，常位于如扁桃体、咽喉等部位。<strong>假膜</strong>硬且厚，可能会阻挡呼吸道，影响患者的正常呼吸。如果强行剥离<strong>假膜</strong>会出现出血等症状。随着病情的发展，<strong>假膜</strong>可能会自行<strong>脱落</strong>，阻碍患者呼吸，造成窒息。</p><p>在临床上，为了防止<strong>白喉</strong>患者窒息，通常会采取<strong>气管切开术</strong>，防止由于气管<strong>阻塞</strong>，导致患者窒息。</p><h2 id="白喉棒状杆菌"><a href="#白喉棒状杆菌" class="headerlink" title="白喉棒状杆菌"></a>白喉棒状杆菌</h2><p><strong>白喉棒状杆菌</strong>是引起<strong>白喉</strong>的致病菌，与我们的认知恰好相反，这种细菌通常是<strong>无害</strong>的，除非它们被携带产生<strong>毒素基因</strong>的<strong>噬菌体</strong>感染。</p><p>导致<strong>白喉</strong>的其实是这种<strong>白喉毒素</strong>。<strong>白喉</strong>主要通过<strong>呼吸道传播</strong>，主要影响<strong>呼吸道</strong>，之后释放<strong>外毒素</strong>。这种<strong>毒素</strong>对皮肤病变有局部作用，在严重感染中对其他器官系统有<strong>转移性</strong>和<strong>蛋白水解</strong>作用。</p><p>在<strong>流行病学</strong>上：其致死率为5%~10%，并在小于5岁的儿童和大于40岁的成年人中可达到20%之高，人类是<strong>白喉棒状杆菌</strong>的唯一天然宿主。</p><h2 id="《多哥》"><a href="#《多哥》" class="headerlink" title="《多哥》"></a>《多哥》</h2><p><strong>白喉</strong>在历史上肆虐了很多次，其中最著名的一次爆发是发生于1924年底至1925年初在美国阿拉斯加州西部的一个城镇诺母（Nome）。为控制疫情，在严寒冬天中将<strong>白喉抗毒素</strong>以狗拉雪橇接力方式花5天半从尼纳纳（Nenana）急送至路程相距1085公里的诺母。此行动后来被翻拍成为电影《多哥》。</p><h2 id="治疗与预防"><a href="#治疗与预防" class="headerlink" title="治疗与预防"></a>治疗与预防</h2><p><strong>白喉</strong>的治疗主要依赖于<strong>白喉抗毒素</strong>。1891年，德国医学家埃米尔·阿道夫·冯·贝林首次用白喉抗毒素治疗了柏林诊所一名儿童<strong>白喉</strong>患者。</p><p><strong>白喉疫苗</strong>于1923年问世，为名列世界卫生组织基本药物标准清单内的药物。但是在临床使用的过程中通常是与其他疫苗混合使用，其中包括：破伤风类毒素疫苗（又称为 破伤风疫苗或DT疫苗）或是被称为DPT的百日咳白喉破伤风三联疫苗。</p>]]></content>
      
      
      <categories>
          
          <category> 生物学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 病原生物学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>反向代理的一些思考</title>
      <link href="/2024/07/09/Tech/%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86%E7%9A%84%E4%B8%80%E4%BA%9B%E6%80%9D%E8%80%83/"/>
      <url>/2024/07/09/Tech/%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86%E7%9A%84%E4%B8%80%E4%BA%9B%E6%80%9D%E8%80%83/</url>
      
        <content type="html"><![CDATA[<h1 id="反向代理的一些思考"><a href="#反向代理的一些思考" class="headerlink" title="反向代理的一些思考"></a>反向代理的一些思考</h1><h2 id="前要"><a href="#前要" class="headerlink" title="前要"></a>前要</h2><p>在日常部署网站的过程中，我们通常会使用诸如<strong>Nginx</strong>或者<strong>Caddy</strong>之类的Web服务器来实现<strong>反向代理</strong>，将本地一些诸如<strong>8080</strong>端口反向代理到<strong>80</strong>和<strong>443</strong>端口来实现<strong>http</strong>和<strong>https</strong>的域名访问</p><p>但由于我们日常使用中，通常是直接将本地的容器或者其他服务的端口代理到<strong>80</strong>端口，很少代理到其他端口，那我们能不能使用其他端口，诸如<strong>81</strong>端口呢？</p><h2 id="默认端口更换"><a href="#默认端口更换" class="headerlink" title="默认端口更换"></a>默认端口更换</h2><p>对于<strong>Nginx</strong>来说，我们需要修改位于  <code>ect/nginx/nginx.conf</code>的配置文件：</p><p>找到 <code>server</code>块，修改监听端口</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">    <span class="attribute">listen</span> <span class="number">8080</span>; <span class="comment"># 这里原本的默认端口为80</span></span><br><span class="line">    <span class="attribute">server_name</span> example.com;</span><br><span class="line">    <span class="comment"># 其他配置...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>保存配置文件并重启<strong>Nginx</strong>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> systemctl restart nginx</span><br></pre></td></tr></table></figure><h2 id="访问"><a href="#访问" class="headerlink" title="访问"></a>访问</h2><p>修改端口之后，我们就不能按照原来通过浏览器 输入 <code>http://example.com</code>的方式访问了，因为 <code>http</code>的默认端口是<strong>80</strong>，如果我们不强行加入端口，浏览器只会按照默认的<strong>80</strong>端口进行访问</p><p>正确的访问方法是通过 <code>http://example.com:8080</code>这样浏览器就会知道你是想通过<strong>8080</strong>端口进行访问</p><h2 id="延时"><a href="#延时" class="headerlink" title="延时"></a>延时</h2><p>通常我们代理服务器大多都配置在内网，很少出现<strong>异地</strong>部署，我其实一直很好奇这种部署方法的具体操作方法以及延时如何，下面是我的一些思考：</p><p>首先假设你有两台服务器，一台是A服务器，IP为 <code>192.1.2.3</code>；另一台服务器是B服务器，IP为 <code>172.0.0.3</code>。两台服务器不在同一地点，从A服务器 <code>ping</code> B服务器的延时大概在 <code>50ms</code>左右，用户 <code>ping</code> A服务器的延时在 <code>50ms</code>左右，<code>ping</code> B服务器的延时大概在 <code>10ms</code>左右。我们希望去访问B服务器的某个网络服务。</p><p>其中反向代理服务器部署在A服务器中，代理了B服务器的某个端口，我们其网络拓扑图类似于：</p><p><img src="https://img.duckk.org/2024/11/890ccf69a78dd1c1961cc6a4b83f687c.png"></p><p>此时当我们开始反向代理后，其网络拓扑图变为：</p><p><img src="https://img.duckk.org/2024/11/659432b15242bc51df182784ad8260b6.png"></p><p>从图中我们不难发现，当我们尝试使用A服务器作为反向代理服务器时，我们所想要访问域名的解析结果应该是指向A服务器，然后再通过A服务器将流量转发到B服务器的</p><p>在这个过程中流量就要经过二次转发，所以经过反向代理后的总<strong>延时</strong>为：<code>20ms</code>+<code>50ms</code>&#x3D;<code>70ms</code>，要高于直连的 <code>10ms</code></p><p>当然我们部署反向代理服务的时候通常是在同一台机器或者是同一个内网中，这种网络传输的延时很低，基本上可以忽略不记，但是对于这种<strong>跨地域</strong>的代理，实际影响就很明显了</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>如果不是什么很<strong>奇怪</strong>的想法，还是不要采取这种<strong>跨地域</strong>的反向代理服务，如果你的反向代理服务器和源服务器的通讯要远远好于直接与用户的通讯，那倒确实是一个很不错的想法 <del>（那为什么不上CDN</del></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网站 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何为你的Ubuntu添加虚拟内存</title>
      <link href="/2024/07/09/Tech/%E5%A6%82%E4%BD%95%E4%B8%BA%E4%BD%A0%E7%9A%84Ubuntu%E6%B7%BB%E5%8A%A0%E8%99%9A%E6%8B%9F%E5%86%85%E5%AD%98/"/>
      <url>/2024/07/09/Tech/%E5%A6%82%E4%BD%95%E4%B8%BA%E4%BD%A0%E7%9A%84Ubuntu%E6%B7%BB%E5%8A%A0%E8%99%9A%E6%8B%9F%E5%86%85%E5%AD%98/</url>
      
        <content type="html"><![CDATA[<h1 id="如何为你的Ubuntu添加虚拟内存"><a href="#如何为你的Ubuntu添加虚拟内存" class="headerlink" title="如何为你的Ubuntu添加虚拟内存"></a>如何为你的Ubuntu添加虚拟内存</h1><h2 id="什么是虚拟内存"><a href="#什么是虚拟内存" class="headerlink" title="什么是虚拟内存"></a>什么是虚拟内存</h2><blockquote><p>虚拟内存是计算机系统管理内存的一种技术，它通过结合物理内存（RAM）和磁盘存储来提供一个更大的、统一的内存空间。虚拟内存允许操作系统和应用程序认为它们有更多的内存可用，而不受限于物理内存的实际大小。</p></blockquote><p>用大白话来说就是：虚拟内存可以作为物理内存的拓展，使用你的部分硬盘空间作为内存空间，允许操作系统和应用使用超出物理内存的空间。</p><p>比如说我们某台服务器的物理内存为2G，现在我们为它添加2G的虚拟内存，那么这台服务器的实际可使用内存就为4G。</p><p>对于虚拟内存来说，以下有几个重要概念：</p><ul><li>**物理内存 (RAM)**：实际安装在计算机中的内存芯片，用于存储当前运行的程序和数据。</li><li><strong>虚拟内存</strong>：操作系统通过使用磁盘空间（如交换文件或交换分区）扩展物理内存，创建一个更大的内存空间。</li><li>**交换空间 (Swap)**：用于存储不常用的内存页的磁盘空间。当物理内存不足时，操作系统会将不常用的数据从RAM移到交换空间，从而释放RAM用于更重要的任务。</li><li>**页 (Pages)**：虚拟内存将内存分割成大小相等的小块，称为页。操作系统可以根据需要将这些页在物理内存和交换空间之间移动。</li></ul><p>虚拟内存的工作原理：</p><ul><li><strong>地址空间</strong>：每个进程都有自己独立的虚拟地址空间。进程在这个虚拟地址空间中运行，不需要了解物理内存的布局。</li><li>**页表 (Page Table)**：操作系统使用页表来记录虚拟内存地址到物理内存地址的映射关系。当进程访问某个虚拟地址时，操作系统通过页表找到相应的物理地址。</li><li><strong>页面置换</strong>：当物理内存不足时，操作系统会选择一些不常用的内存页移到交换空间，以腾出物理内存用于当前需要的任务。这种过程称为页面置换。</li><li>**页面错误 (Page Fault)**：当进程访问的内存页不在物理内存中时，会触发页面错误。操作系统捕获页面错误并从交换空间中将所需的内存页加载回物理内存。</li></ul><p>优点：</p><ul><li><strong>更大内存空间</strong>：虚拟内存提供的内存空间大于实际的物理内存，使得系统可以运行更多的程序或处理更大的数据集。</li><li><strong>内存保护</strong>：每个进程有自己的虚拟地址空间，相互隔离，增加了系统的稳定性和安全性。</li><li><strong>内存管理</strong>：虚拟内存简化了内存管理，操作系统可以更有效地利用物理内存资源。</li></ul><p>缺点：</p><ul><li><strong>性能开销</strong>：频繁的页面置换会导致磁盘I&#x2F;O操作增加，影响系统性能。</li><li><strong>复杂性</strong>：实现虚拟内存需要额外的硬件支持（如内存管理单元）和复杂的软件算法。</li><li><strong>硬件损耗</strong>：如果你使用的个人电脑是设置虚拟内存分区位于<strong>SSD</strong>上，那么虚拟内存的使用会显著降低你的硬盘寿命。</li></ul><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><p>虚拟内存是现代计算机系统中必不可少的一部分，它通过结合物理内存和磁盘存储，为操作系统和应用程序提供了一个更大、更灵活的内存空间，同时提供内存保护和更高效的内存管理。</p><p><strong>一般情况下</strong>我们不建议你设置的虚拟内存大小超过物理内存，希望需要依赖交换空间来储存那些不常用的内存页，这样会大量占用系统I&#x2F;O，使得系统极不稳定。</p><h2 id="动手！"><a href="#动手！" class="headerlink" title="动手！"></a>动手！</h2><p>假设我们希望创建一个2GB的<strong>交换空间</strong>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> fallocate -l 2G /swapfile</span><br></pre></td></tr></table></figure><p>设置权限：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> <span class="built_in">chmod</span> 600 /swapfile</span><br></pre></td></tr></table></figure><p>配置<strong>交换空间</strong>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> mkswap /swapfile</span><br></pre></td></tr></table></figure><p>验证<strong>交换空间</strong>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> swapon /swapfile</span><br></pre></td></tr></table></figure><p>此时虚拟内存的配置以及完成，到这一步了你的终端应该是这样的：</p><p><img src="https://img.duckk.org/2024/11/a52283683ef304427d4516dc5b76d991.png"></p><p>这是我们验证<strong>交换空间</strong>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> swapon --show</span><br></pre></td></tr></table></figure><p>如果你的虚拟内存设置成功了应该会输出：</p><p><img src="https://img.duckk.org/2024/11/f0926ab08bda97f829d00b969585ff8e.png"></p><p>之后我们永久启用<strong>交换文件</strong>：</p><p>编辑 <code>/etc/fstab</code>文件（<code>sudo nano /ect/fstab</code>）并在最后一行添加：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/swapfile none swap sw 0 0</span><br></pre></td></tr></table></figure><p><img src="https://img.duckk.org/2024/11/82baecedf508f9dc8e20862ee1e1a5c0.png"></p><p>之前我们说了，系统会交换<strong>物理内存</strong>和<strong>虚拟分区</strong>，我们可以通过调整交换分区的使用策略从而优化性能。编辑 <code>/ect/sysctl.conf</code>文件并添加：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vm.swappiness=10</span><br></pre></td></tr></table></figure><p>这个数值的大小为 <code>0~100</code>，数值越大则越频繁使用交换空间。</p><p>然后应用更改：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> sysctl -p</span><br></pre></td></tr></table></figure><p>如图，我这里就已经开始使用虚拟内存了：</p><p><img src="https://img.duckk.org/2024/11/2b0274d49504e2b76d426eec913e7e05.png"></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>试一试吧 试一试吧 不试试你怎么知道你会~</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux使用 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>评论分词</title>
      <link href="/2024/07/08/Tech/%E8%AF%84%E8%AE%BA%E5%88%86%E8%AF%8D/"/>
      <url>/2024/07/08/Tech/%E8%AF%84%E8%AE%BA%E5%88%86%E8%AF%8D/</url>
      
        <content type="html"><![CDATA[<h1 id="评论分词"><a href="#评论分词" class="headerlink" title="评论分词"></a>评论分词</h1><h2 id="评论内容分词"><a href="#评论内容分词" class="headerlink" title="评论内容分词"></a>评论内容分词</h2><h3 id="基于jieba的中文分词"><a href="#基于jieba的中文分词" class="headerlink" title="基于jieba的中文分词"></a>基于jieba的中文分词</h3><p>GitHub的项目地址：<a href="https://github.com/fxsjy/jieba">jieba</a></p><p>jieba的使用非常简单，在这里为了对评论文本进行审核，我们只使用最基础的分词功能，以下是全模式的分词示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> jieba</span><br><span class="line"></span><br><span class="line">seg_list = jieba.cut(<span class="string">&quot;今天军训我摸鱼&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> word <span class="keyword">in</span> seg_list:</span><br><span class="line">    <span class="built_in">print</span>(word)</span><br></pre></td></tr></table></figure><p>最终的分词结果会返回到一个列表对象中，我们对这个列表进行循环即可得到分词。</p><p>我们尝试基于jieba分词，再将分词与与停用库中的词语进行对比，从而实现评论过滤的作用。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">import jieba</span><br><span class="line"></span><br><span class="line">jieba.load_userdict(&#x27;stop-words.txt&#x27;)</span><br><span class="line"></span><br><span class="line">with open(&#x27;stop-words.txt&#x27;, &#x27;r&#x27;, encoding=&#x27;utf-8&#x27;) as open:</span><br><span class="line">    stopwords = open.read().split(&#x27;\n&#x27;)</span><br><span class="line">seg_list = jieba.cut(&#x27;今天军训我摸鱼&#x27;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">for word in seg_list:</span><br><span class="line">    print(word)</span><br><span class="line">    if word in stopwords:</span><br><span class="line">        print(f&quot;帖子内容中含有停用词：&#123;word&#125;&quot;)</span><br></pre></td></tr></table></figure><p>在这里我们尝试导入了一个用户自定义词典<code>jieba.load_userdict(&#39;stop-words.txt&#39;)</code>，从而加强在分词过程中的准确度。</p><p>jieba也存在一些问题，比如说在导入库的时候速度很慢：<br><code>import jieba</code></p><p>在实际测试的过程中，我们尝试对一个大小为231KB的纯文本进行分词，其中：加载jieba耗时：26.336201667785645秒，分词耗时：1.2523243427276611秒。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> csv</span><br><span class="line"></span><br><span class="line">start_jieba = time.time()</span><br><span class="line"><span class="comment"># 开始记录时间</span></span><br><span class="line"><span class="keyword">import</span> jieba</span><br><span class="line"></span><br><span class="line">end_jieba = time.time()</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;加载jieba耗时：<span class="subst">&#123;end_jieba - start_jieba&#125;</span>秒&quot;</span>)</span><br><span class="line"></span><br><span class="line">start = time.time()</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;Three Body.txt&#x27;</span>, <span class="string">&#x27;r&#x27;</span>, encoding=<span class="string">&#x27;gbk&#x27;</span>) <span class="keyword">as</span> file:</span><br><span class="line">    text = file.read()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;开始分词&#x27;</span>)</span><br><span class="line">    seg_list = jieba.cut(text)</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;jieba_cut.csv&#x27;</span>, <span class="string">&#x27;w&#x27;</span>, newline=<span class="string">&#x27;&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> output_file:</span><br><span class="line">        writer = csv.writer(output_file)</span><br><span class="line">        <span class="keyword">for</span> word <span class="keyword">in</span> seg_list:</span><br><span class="line">            writer.writerow([word])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 结束记录时间</span></span><br><span class="line">end = time.time()</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;分词耗时：<span class="subst">&#123;end - start&#125;</span>秒&quot;</span>)</span><br></pre></td></tr></table></figure><h3 id="基于HanLP的中文分词"><a href="#基于HanLP的中文分词" class="headerlink" title="基于HanLP的中文分词"></a>基于HanLP的中文分词</h3><p>GitHub的项目地址：<a href="https://github.com/hankcs/HanLP">HanLP</a></p><p>HanLP和jieba对于我做评论分词的最大区别在于HanLP的分词准确度更高。HanLP在做对于长文本的分词过程中能够对语法、词性、词义等进行更为细致的分割。</p><p>同时HanLP为我们提供了多任务和单任务的选项，能让我们自行在<strong>快速</strong>与<strong>准确</strong>之间权衡。但是<strong>多任务</strong>对于显存的要求比较高（我没有跑成功</p><p>HanLP的开发者为我们提供了很简单的使用方法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> hanlp_restful <span class="keyword">import</span> HanLPClient</span><br><span class="line">HanLP = HanLPClient(<span class="string">&#x27;https://www.hanlp.com/api&#x27;</span>, auth=<span class="literal">None</span>, language=<span class="string">&#x27;zh&#x27;</span>) <span class="comment"># auth不填则匿名，zh中文，mul多语种</span></span><br><span class="line"></span><br><span class="line">HanLP.parse(<span class="string">&quot;2021年HanLPv2.1为生产环境带来次世代最先进的多语种NLP技术。阿婆主来到北京立方庭参观自然语义科技公司。&quot;</span>)</span><br></pre></td></tr></table></figure><p>最后的运行结果是会返回一个<code>JSON</code>结构体，类似这样：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;tok/fine&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">[</span><span class="string">&quot;2021年&quot;</span><span class="punctuation">,</span> <span class="string">&quot;HanLPv2.1&quot;</span><span class="punctuation">,</span> <span class="string">&quot;为&quot;</span><span class="punctuation">,</span> <span class="string">&quot;生产&quot;</span><span class="punctuation">,</span> <span class="string">&quot;环境&quot;</span><span class="punctuation">,</span> <span class="string">&quot;带来&quot;</span><span class="punctuation">,</span> <span class="string">&quot;次&quot;</span><span class="punctuation">,</span> <span class="string">&quot;世代&quot;</span><span class="punctuation">,</span> <span class="string">&quot;最&quot;</span><span class="punctuation">,</span> <span class="string">&quot;先进&quot;</span><span class="punctuation">,</span> <span class="string">&quot;的&quot;</span><span class="punctuation">,</span> <span class="string">&quot;多&quot;</span><span class="punctuation">,</span> <span class="string">&quot;语种&quot;</span><span class="punctuation">,</span> <span class="string">&quot;NLP&quot;</span><span class="punctuation">,</span> <span class="string">&quot;技术&quot;</span><span class="punctuation">,</span> <span class="string">&quot;。&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">[</span><span class="string">&quot;阿婆主&quot;</span><span class="punctuation">,</span> <span class="string">&quot;来到&quot;</span><span class="punctuation">,</span> <span class="string">&quot;北京&quot;</span><span class="punctuation">,</span> <span class="string">&quot;立方庭&quot;</span><span class="punctuation">,</span> <span class="string">&quot;参观&quot;</span><span class="punctuation">,</span> <span class="string">&quot;自然&quot;</span><span class="punctuation">,</span> <span class="string">&quot;语义&quot;</span><span class="punctuation">,</span> <span class="string">&quot;科技&quot;</span><span class="punctuation">,</span> <span class="string">&quot;公司&quot;</span><span class="punctuation">,</span> <span class="string">&quot;。&quot;</span><span class="punctuation">]</span></span><br><span class="line">  <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;tok/coarse&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">[</span><span class="string">&quot;2021年&quot;</span><span class="punctuation">,</span> <span class="string">&quot;HanLPv2.1&quot;</span><span class="punctuation">,</span> <span class="string">&quot;为&quot;</span><span class="punctuation">,</span> <span class="string">&quot;生产&quot;</span><span class="punctuation">,</span> <span class="string">&quot;环境&quot;</span><span class="punctuation">,</span> <span class="string">&quot;带来&quot;</span><span class="punctuation">,</span> <span class="string">&quot;次世代&quot;</span><span class="punctuation">,</span> <span class="string">&quot;最&quot;</span><span class="punctuation">,</span> <span class="string">&quot;先进&quot;</span><span class="punctuation">,</span> <span class="string">&quot;的&quot;</span><span class="punctuation">,</span> <span class="string">&quot;多语种&quot;</span><span class="punctuation">,</span> <span class="string">&quot;NLP&quot;</span><span class="punctuation">,</span> <span class="string">&quot;技术&quot;</span><span class="punctuation">,</span> <span class="string">&quot;。&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">[</span><span class="string">&quot;阿婆主&quot;</span><span class="punctuation">,</span> <span class="string">&quot;来到&quot;</span><span class="punctuation">,</span> <span class="string">&quot;北京立方庭&quot;</span><span class="punctuation">,</span> <span class="string">&quot;参观&quot;</span><span class="punctuation">,</span> <span class="string">&quot;自然语义科技公司&quot;</span><span class="punctuation">,</span> <span class="string">&quot;。&quot;</span><span class="punctuation">]</span></span><br><span class="line">  <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;pos/ctb&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">[</span><span class="string">&quot;NT&quot;</span><span class="punctuation">,</span> <span class="string">&quot;NR&quot;</span><span class="punctuation">,</span> <span class="string">&quot;P&quot;</span><span class="punctuation">,</span> <span class="string">&quot;NN&quot;</span><span class="punctuation">,</span> <span class="string">&quot;NN&quot;</span><span class="punctuation">,</span> <span class="string">&quot;VV&quot;</span><span class="punctuation">,</span> <span class="string">&quot;JJ&quot;</span><span class="punctuation">,</span> <span class="string">&quot;NN&quot;</span><span class="punctuation">,</span> <span class="string">&quot;AD&quot;</span><span class="punctuation">,</span> <span class="string">&quot;JJ&quot;</span><span class="punctuation">,</span> <span class="string">&quot;DEG&quot;</span><span class="punctuation">,</span> <span class="string">&quot;CD&quot;</span><span class="punctuation">,</span> <span class="string">&quot;NN&quot;</span><span class="punctuation">,</span> <span class="string">&quot;NR&quot;</span><span class="punctuation">,</span> <span class="string">&quot;NN&quot;</span><span class="punctuation">,</span> <span class="string">&quot;PU&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">[</span><span class="string">&quot;NN&quot;</span><span class="punctuation">,</span> <span class="string">&quot;VV&quot;</span><span class="punctuation">,</span> <span class="string">&quot;NR&quot;</span><span class="punctuation">,</span> <span class="string">&quot;NR&quot;</span><span class="punctuation">,</span> <span class="string">&quot;VV&quot;</span><span class="punctuation">,</span> <span class="string">&quot;NN&quot;</span><span class="punctuation">,</span> <span class="string">&quot;NN&quot;</span><span class="punctuation">,</span> <span class="string">&quot;NN&quot;</span><span class="punctuation">,</span> <span class="string">&quot;NN&quot;</span><span class="punctuation">,</span> <span class="string">&quot;PU&quot;</span><span class="punctuation">]</span></span><br><span class="line">  <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;pos/pku&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">[</span><span class="string">&quot;t&quot;</span><span class="punctuation">,</span> <span class="string">&quot;nx&quot;</span><span class="punctuation">,</span> <span class="string">&quot;p&quot;</span><span class="punctuation">,</span> <span class="string">&quot;vn&quot;</span><span class="punctuation">,</span> <span class="string">&quot;n&quot;</span><span class="punctuation">,</span> <span class="string">&quot;v&quot;</span><span class="punctuation">,</span> <span class="string">&quot;b&quot;</span><span class="punctuation">,</span> <span class="string">&quot;n&quot;</span><span class="punctuation">,</span> <span class="string">&quot;d&quot;</span><span class="punctuation">,</span> <span class="string">&quot;a&quot;</span><span class="punctuation">,</span> <span class="string">&quot;u&quot;</span><span class="punctuation">,</span> <span class="string">&quot;a&quot;</span><span class="punctuation">,</span> <span class="string">&quot;n&quot;</span><span class="punctuation">,</span> <span class="string">&quot;nx&quot;</span><span class="punctuation">,</span> <span class="string">&quot;n&quot;</span><span class="punctuation">,</span> <span class="string">&quot;w&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">[</span><span class="string">&quot;n&quot;</span><span class="punctuation">,</span> <span class="string">&quot;v&quot;</span><span class="punctuation">,</span> <span class="string">&quot;ns&quot;</span><span class="punctuation">,</span> <span class="string">&quot;ns&quot;</span><span class="punctuation">,</span> <span class="string">&quot;v&quot;</span><span class="punctuation">,</span> <span class="string">&quot;n&quot;</span><span class="punctuation">,</span> <span class="string">&quot;n&quot;</span><span class="punctuation">,</span> <span class="string">&quot;n&quot;</span><span class="punctuation">,</span> <span class="string">&quot;n&quot;</span><span class="punctuation">,</span> <span class="string">&quot;w&quot;</span><span class="punctuation">]</span></span><br><span class="line">  <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;pos/863&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">[</span><span class="string">&quot;nt&quot;</span><span class="punctuation">,</span> <span class="string">&quot;w&quot;</span><span class="punctuation">,</span> <span class="string">&quot;p&quot;</span><span class="punctuation">,</span> <span class="string">&quot;v&quot;</span><span class="punctuation">,</span> <span class="string">&quot;n&quot;</span><span class="punctuation">,</span> <span class="string">&quot;v&quot;</span><span class="punctuation">,</span> <span class="string">&quot;a&quot;</span><span class="punctuation">,</span> <span class="string">&quot;nt&quot;</span><span class="punctuation">,</span> <span class="string">&quot;d&quot;</span><span class="punctuation">,</span> <span class="string">&quot;a&quot;</span><span class="punctuation">,</span> <span class="string">&quot;u&quot;</span><span class="punctuation">,</span> <span class="string">&quot;a&quot;</span><span class="punctuation">,</span> <span class="string">&quot;n&quot;</span><span class="punctuation">,</span> <span class="string">&quot;ws&quot;</span><span class="punctuation">,</span> <span class="string">&quot;n&quot;</span><span class="punctuation">,</span> <span class="string">&quot;w&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">[</span><span class="string">&quot;n&quot;</span><span class="punctuation">,</span> <span class="string">&quot;v&quot;</span><span class="punctuation">,</span> <span class="string">&quot;ns&quot;</span><span class="punctuation">,</span> <span class="string">&quot;n&quot;</span><span class="punctuation">,</span> <span class="string">&quot;v&quot;</span><span class="punctuation">,</span> <span class="string">&quot;n&quot;</span><span class="punctuation">,</span> <span class="string">&quot;n&quot;</span><span class="punctuation">,</span> <span class="string">&quot;n&quot;</span><span class="punctuation">,</span> <span class="string">&quot;n&quot;</span><span class="punctuation">,</span> <span class="string">&quot;w&quot;</span><span class="punctuation">]</span></span><br><span class="line">  <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;ner/pku&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">[</span><span class="punctuation">[</span><span class="string">&quot;北京立方庭&quot;</span><span class="punctuation">,</span> <span class="string">&quot;ns&quot;</span><span class="punctuation">,</span> <span class="number">2</span><span class="punctuation">,</span> <span class="number">4</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="string">&quot;自然语义科技公司&quot;</span><span class="punctuation">,</span> <span class="string">&quot;nt&quot;</span><span class="punctuation">,</span> <span class="number">5</span><span class="punctuation">,</span> <span class="number">9</span><span class="punctuation">]</span><span class="punctuation">]</span></span><br><span class="line">  <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;ner/msra&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">[</span><span class="punctuation">[</span><span class="string">&quot;2021年&quot;</span><span class="punctuation">,</span> <span class="string">&quot;DATE&quot;</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">1</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="string">&quot;HanLPv2.1&quot;</span><span class="punctuation">,</span> <span class="string">&quot;ORGANIZATION&quot;</span><span class="punctuation">,</span> <span class="number">1</span><span class="punctuation">,</span> <span class="number">2</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">[</span><span class="punctuation">[</span><span class="string">&quot;北京&quot;</span><span class="punctuation">,</span> <span class="string">&quot;LOCATION&quot;</span><span class="punctuation">,</span> <span class="number">2</span><span class="punctuation">,</span> <span class="number">3</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="string">&quot;立方庭&quot;</span><span class="punctuation">,</span> <span class="string">&quot;LOCATION&quot;</span><span class="punctuation">,</span> <span class="number">3</span><span class="punctuation">,</span> <span class="number">4</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="string">&quot;自然语义科技公司&quot;</span><span class="punctuation">,</span> <span class="string">&quot;ORGANIZATION&quot;</span><span class="punctuation">,</span> <span class="number">5</span><span class="punctuation">,</span> <span class="number">9</span><span class="punctuation">]</span><span class="punctuation">]</span></span><br><span class="line">  <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;ner/ontonotes&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">[</span><span class="punctuation">[</span><span class="string">&quot;2021年&quot;</span><span class="punctuation">,</span> <span class="string">&quot;DATE&quot;</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">1</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="string">&quot;HanLPv2.1&quot;</span><span class="punctuation">,</span> <span class="string">&quot;ORG&quot;</span><span class="punctuation">,</span> <span class="number">1</span><span class="punctuation">,</span> <span class="number">2</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">[</span><span class="punctuation">[</span><span class="string">&quot;北京立方庭&quot;</span><span class="punctuation">,</span> <span class="string">&quot;FAC&quot;</span><span class="punctuation">,</span> <span class="number">2</span><span class="punctuation">,</span> <span class="number">4</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="string">&quot;自然语义科技公司&quot;</span><span class="punctuation">,</span> <span class="string">&quot;ORG&quot;</span><span class="punctuation">,</span> <span class="number">5</span><span class="punctuation">,</span> <span class="number">9</span><span class="punctuation">]</span><span class="punctuation">]</span></span><br><span class="line">  <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;srl&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">[</span><span class="punctuation">[</span><span class="punctuation">[</span><span class="string">&quot;2021年&quot;</span><span class="punctuation">,</span> <span class="string">&quot;ARGM-TMP&quot;</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">1</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="string">&quot;HanLPv2.1&quot;</span><span class="punctuation">,</span> <span class="string">&quot;ARG0&quot;</span><span class="punctuation">,</span> <span class="number">1</span><span class="punctuation">,</span> <span class="number">2</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="string">&quot;为生产环境&quot;</span><span class="punctuation">,</span> <span class="string">&quot;ARG2&quot;</span><span class="punctuation">,</span> <span class="number">2</span><span class="punctuation">,</span> <span class="number">5</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="string">&quot;带来&quot;</span><span class="punctuation">,</span> <span class="string">&quot;PRED&quot;</span><span class="punctuation">,</span> <span class="number">5</span><span class="punctuation">,</span> <span class="number">6</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="string">&quot;次世代最先进的多语种NLP技术&quot;</span><span class="punctuation">,</span> <span class="string">&quot;ARG1&quot;</span><span class="punctuation">,</span> <span class="number">6</span><span class="punctuation">,</span> <span class="number">15</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="punctuation">[</span><span class="string">&quot;最&quot;</span><span class="punctuation">,</span> <span class="string">&quot;ARGM-ADV&quot;</span><span class="punctuation">,</span> <span class="number">8</span><span class="punctuation">,</span> <span class="number">9</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="string">&quot;先进&quot;</span><span class="punctuation">,</span> <span class="string">&quot;PRED&quot;</span><span class="punctuation">,</span> <span class="number">9</span><span class="punctuation">,</span> <span class="number">10</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="string">&quot;技术&quot;</span><span class="punctuation">,</span> <span class="string">&quot;ARG0&quot;</span><span class="punctuation">,</span> <span class="number">14</span><span class="punctuation">,</span> <span class="number">15</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">[</span><span class="punctuation">[</span><span class="punctuation">[</span><span class="string">&quot;阿婆主&quot;</span><span class="punctuation">,</span> <span class="string">&quot;ARG0&quot;</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">1</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="string">&quot;来到&quot;</span><span class="punctuation">,</span> <span class="string">&quot;PRED&quot;</span><span class="punctuation">,</span> <span class="number">1</span><span class="punctuation">,</span> <span class="number">2</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="string">&quot;北京立方庭&quot;</span><span class="punctuation">,</span> <span class="string">&quot;ARG1&quot;</span><span class="punctuation">,</span> <span class="number">2</span><span class="punctuation">,</span> <span class="number">4</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="punctuation">[</span><span class="string">&quot;阿婆主&quot;</span><span class="punctuation">,</span> <span class="string">&quot;ARG0&quot;</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">1</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="string">&quot;参观&quot;</span><span class="punctuation">,</span> <span class="string">&quot;PRED&quot;</span><span class="punctuation">,</span> <span class="number">4</span><span class="punctuation">,</span> <span class="number">5</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="string">&quot;自然语义科技公司&quot;</span><span class="punctuation">,</span> <span class="string">&quot;ARG1&quot;</span><span class="punctuation">,</span> <span class="number">5</span><span class="punctuation">,</span> <span class="number">9</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">]</span></span><br><span class="line">  <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;dep&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">[</span><span class="punctuation">[</span><span class="number">6</span><span class="punctuation">,</span> <span class="string">&quot;tmod&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="number">6</span><span class="punctuation">,</span> <span class="string">&quot;nsubj&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="number">6</span><span class="punctuation">,</span> <span class="string">&quot;prep&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="number">5</span><span class="punctuation">,</span> <span class="string">&quot;nn&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="number">3</span><span class="punctuation">,</span> <span class="string">&quot;pobj&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="number">0</span><span class="punctuation">,</span> <span class="string">&quot;root&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="number">8</span><span class="punctuation">,</span> <span class="string">&quot;amod&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="number">15</span><span class="punctuation">,</span> <span class="string">&quot;nn&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="number">10</span><span class="punctuation">,</span> <span class="string">&quot;advmod&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="number">15</span><span class="punctuation">,</span> <span class="string">&quot;rcmod&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="number">10</span><span class="punctuation">,</span> <span class="string">&quot;assm&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="number">13</span><span class="punctuation">,</span> <span class="string">&quot;nummod&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="number">15</span><span class="punctuation">,</span> <span class="string">&quot;nn&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="number">15</span><span class="punctuation">,</span> <span class="string">&quot;nn&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="number">6</span><span class="punctuation">,</span> <span class="string">&quot;dobj&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="number">6</span><span class="punctuation">,</span> <span class="string">&quot;punct&quot;</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">[</span><span class="punctuation">[</span><span class="number">2</span><span class="punctuation">,</span> <span class="string">&quot;nsubj&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="number">0</span><span class="punctuation">,</span> <span class="string">&quot;root&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="number">4</span><span class="punctuation">,</span> <span class="string">&quot;nn&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="number">2</span><span class="punctuation">,</span> <span class="string">&quot;dobj&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="number">2</span><span class="punctuation">,</span> <span class="string">&quot;conj&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="number">9</span><span class="punctuation">,</span> <span class="string">&quot;nn&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="number">9</span><span class="punctuation">,</span> <span class="string">&quot;nn&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="number">9</span><span class="punctuation">,</span> <span class="string">&quot;nn&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="number">5</span><span class="punctuation">,</span> <span class="string">&quot;dobj&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="number">2</span><span class="punctuation">,</span> <span class="string">&quot;punct&quot;</span><span class="punctuation">]</span><span class="punctuation">]</span></span><br><span class="line">  <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;sdp&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">[</span><span class="punctuation">[</span><span class="punctuation">[</span><span class="number">6</span><span class="punctuation">,</span> <span class="string">&quot;Time&quot;</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="punctuation">[</span><span class="number">6</span><span class="punctuation">,</span> <span class="string">&quot;Exp&quot;</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="punctuation">[</span><span class="number">5</span><span class="punctuation">,</span> <span class="string">&quot;mPrep&quot;</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="punctuation">[</span><span class="number">5</span><span class="punctuation">,</span> <span class="string">&quot;Desc&quot;</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="punctuation">[</span><span class="number">6</span><span class="punctuation">,</span> <span class="string">&quot;Datv&quot;</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="punctuation">[</span><span class="number">13</span><span class="punctuation">,</span> <span class="string">&quot;dDesc&quot;</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="punctuation">[</span><span class="number">0</span><span class="punctuation">,</span> <span class="string">&quot;Root&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="number">8</span><span class="punctuation">,</span> <span class="string">&quot;Desc&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="number">13</span><span class="punctuation">,</span> <span class="string">&quot;Desc&quot;</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="punctuation">[</span><span class="number">15</span><span class="punctuation">,</span> <span class="string">&quot;Time&quot;</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="punctuation">[</span><span class="number">10</span><span class="punctuation">,</span> <span class="string">&quot;mDegr&quot;</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="punctuation">[</span><span class="number">15</span><span class="punctuation">,</span> <span class="string">&quot;Desc&quot;</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="punctuation">[</span><span class="number">10</span><span class="punctuation">,</span> <span class="string">&quot;mAux&quot;</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="punctuation">[</span><span class="number">8</span><span class="punctuation">,</span> <span class="string">&quot;Quan&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="number">13</span><span class="punctuation">,</span> <span class="string">&quot;Quan&quot;</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="punctuation">[</span><span class="number">15</span><span class="punctuation">,</span> <span class="string">&quot;Desc&quot;</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="punctuation">[</span><span class="number">15</span><span class="punctuation">,</span> <span class="string">&quot;Nmod&quot;</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="punctuation">[</span><span class="number">6</span><span class="punctuation">,</span> <span class="string">&quot;Pat&quot;</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="punctuation">[</span><span class="number">6</span><span class="punctuation">,</span> <span class="string">&quot;mPunc&quot;</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">[</span><span class="punctuation">[</span><span class="punctuation">[</span><span class="number">2</span><span class="punctuation">,</span> <span class="string">&quot;Agt&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="number">5</span><span class="punctuation">,</span> <span class="string">&quot;Agt&quot;</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="punctuation">[</span><span class="number">0</span><span class="punctuation">,</span> <span class="string">&quot;Root&quot;</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="punctuation">[</span><span class="number">4</span><span class="punctuation">,</span> <span class="string">&quot;Loc&quot;</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="punctuation">[</span><span class="number">2</span><span class="punctuation">,</span> <span class="string">&quot;Lfin&quot;</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="punctuation">[</span><span class="number">2</span><span class="punctuation">,</span> <span class="string">&quot;ePurp&quot;</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="punctuation">[</span><span class="number">8</span><span class="punctuation">,</span> <span class="string">&quot;Nmod&quot;</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="punctuation">[</span><span class="number">9</span><span class="punctuation">,</span> <span class="string">&quot;Nmod&quot;</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="punctuation">[</span><span class="number">9</span><span class="punctuation">,</span> <span class="string">&quot;Nmod&quot;</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="punctuation">[</span><span class="number">5</span><span class="punctuation">,</span> <span class="string">&quot;Datv&quot;</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="punctuation">[</span><span class="number">5</span><span class="punctuation">,</span> <span class="string">&quot;mPunc&quot;</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">]</span></span><br><span class="line">  <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;con&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">[</span><span class="string">&quot;TOP&quot;</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="punctuation">[</span><span class="string">&quot;IP&quot;</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="punctuation">[</span><span class="string">&quot;NP&quot;</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="punctuation">[</span><span class="string">&quot;NT&quot;</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="string">&quot;2021年&quot;</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="string">&quot;NP&quot;</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="punctuation">[</span><span class="string">&quot;NR&quot;</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="string">&quot;HanLPv2.1&quot;</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="string">&quot;VP&quot;</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="punctuation">[</span><span class="string">&quot;PP&quot;</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="punctuation">[</span><span class="string">&quot;P&quot;</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="string">&quot;为&quot;</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="string">&quot;NP&quot;</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="punctuation">[</span><span class="string">&quot;NN&quot;</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="string">&quot;生产&quot;</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="string">&quot;NN&quot;</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="string">&quot;环境&quot;</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="string">&quot;VP&quot;</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="punctuation">[</span><span class="string">&quot;VV&quot;</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="string">&quot;带来&quot;</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="string">&quot;NP&quot;</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="punctuation">[</span><span class="string">&quot;ADJP&quot;</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="punctuation">[</span><span class="string">&quot;NP&quot;</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="punctuation">[</span><span class="string">&quot;ADJP&quot;</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="punctuation">[</span><span class="string">&quot;JJ&quot;</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="string">&quot;次&quot;</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="string">&quot;NP&quot;</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="punctuation">[</span><span class="string">&quot;NN&quot;</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="string">&quot;世代&quot;</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="string">&quot;ADVP&quot;</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="punctuation">[</span><span class="string">&quot;AD&quot;</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="string">&quot;最&quot;</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="string">&quot;VP&quot;</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="punctuation">[</span><span class="string">&quot;JJ&quot;</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="string">&quot;先进&quot;</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="string">&quot;DEG&quot;</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="string">&quot;的&quot;</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="string">&quot;NP&quot;</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="punctuation">[</span><span class="string">&quot;QP&quot;</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="punctuation">[</span><span class="string">&quot;CD&quot;</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="string">&quot;多&quot;</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="string">&quot;NP&quot;</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="punctuation">[</span><span class="string">&quot;NN&quot;</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="string">&quot;语种&quot;</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="string">&quot;NP&quot;</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="punctuation">[</span><span class="string">&quot;NR&quot;</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="string">&quot;NLP&quot;</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="string">&quot;NN&quot;</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="string">&quot;技术&quot;</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="string">&quot;PU&quot;</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="string">&quot;。&quot;</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">[</span><span class="string">&quot;TOP&quot;</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="punctuation">[</span><span class="string">&quot;IP&quot;</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="punctuation">[</span><span class="string">&quot;NP&quot;</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="punctuation">[</span><span class="string">&quot;NN&quot;</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="string">&quot;阿婆主&quot;</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="string">&quot;VP&quot;</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="punctuation">[</span><span class="string">&quot;VP&quot;</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="punctuation">[</span><span class="string">&quot;VV&quot;</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="string">&quot;来到&quot;</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="string">&quot;NP&quot;</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="punctuation">[</span><span class="string">&quot;NR&quot;</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="string">&quot;北京&quot;</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="string">&quot;NR&quot;</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="string">&quot;立方庭&quot;</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="string">&quot;VP&quot;</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="punctuation">[</span><span class="string">&quot;VV&quot;</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="string">&quot;参观&quot;</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="string">&quot;NP&quot;</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="punctuation">[</span><span class="string">&quot;NN&quot;</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="string">&quot;自然&quot;</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="string">&quot;NN&quot;</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="string">&quot;语义&quot;</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="string">&quot;NN&quot;</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="string">&quot;科技&quot;</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="string">&quot;NN&quot;</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="string">&quot;公司&quot;</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="string">&quot;PU&quot;</span><span class="punctuation">,</span> <span class="punctuation">[</span><span class="string">&quot;。&quot;</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">]</span></span><br><span class="line">  <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>和jieba分词的低耗时不同，加载HanLP耗时：6.783897161483765秒，分词耗时：62.710567235946655秒。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> csv</span><br><span class="line"></span><br><span class="line"><span class="comment"># 开始记录时间</span></span><br><span class="line">start = time.time()</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> hanlp</span><br><span class="line">HanLP = hanlp.pipeline() \</span><br><span class="line">    .append(hanlp.utils.rules.split_sentence, output_key=<span class="string">&#x27;sentences&#x27;</span>) \</span><br><span class="line">    .append(hanlp.load(<span class="string">&#x27;FINE_ELECTRA_SMALL_ZH&#x27;</span>), output_key=<span class="string">&#x27;tok&#x27;</span>) \</span><br><span class="line">    .append(hanlp.load(<span class="string">&#x27;CTB9_POS_ELECTRA_SMALL&#x27;</span>), output_key=<span class="string">&#x27;pos&#x27;</span>) \</span><br><span class="line">    .append(hanlp.load(<span class="string">&#x27;MSRA_NER_ELECTRA_SMALL_ZH&#x27;</span>), output_key=<span class="string">&#x27;ner&#x27;</span>, input_key=<span class="string">&#x27;tok&#x27;</span>) \</span><br><span class="line">    .append(hanlp.load(<span class="string">&#x27;CTB9_DEP_ELECTRA_SMALL&#x27;</span>, conll=<span class="number">0</span>), output_key=<span class="string">&#x27;dep&#x27;</span>, input_key=<span class="string">&#x27;tok&#x27;</span>)\</span><br><span class="line">    .append(hanlp.load(<span class="string">&#x27;CTB9_CON_ELECTRA_SMALL&#x27;</span>), output_key=<span class="string">&#x27;con&#x27;</span>, input_key=<span class="string">&#x27;tok&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 结束记录时间</span></span><br><span class="line">end = time.time()</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;加载HanLP耗时：<span class="subst">&#123;end - start&#125;</span>秒&quot;</span>) </span><br><span class="line"></span><br><span class="line"><span class="comment"># 开始记录时间</span></span><br><span class="line">start = time.time()</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;Three Body.txt&#x27;</span>, <span class="string">&#x27;r&#x27;</span>, encoding=<span class="string">&#x27;gbk&#x27;</span>) <span class="keyword">as</span> file:</span><br><span class="line">    text = file.read()</span><br><span class="line">    json_file = HanLP(text)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;开始分词&#x27;</span>)</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;hanlp_cut.csv&#x27;</span>, <span class="string">&#x27;w&#x27;</span>, newline=<span class="string">&#x27;&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> output_file:</span><br><span class="line">        writer = csv.writer(output_file)</span><br><span class="line">        <span class="keyword">for</span> word <span class="keyword">in</span> json_file[<span class="string">&#x27;tok&#x27;</span>]:</span><br><span class="line">            writer.writerow([word])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 结束记录时间</span></span><br><span class="line">end = time.time()</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;分词耗时：<span class="subst">&#123;end - start&#125;</span>秒&quot;</span>)</span><br><span class="line"></span><br><span class="line">tok_fine = json_file[<span class="string">&#x27;tok&#x27;</span>]</span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>对于jieba和HanPL来说，两种算法应该是各有千秋，不过我们目前大概率会采用jieba，因为它速度快，而且占用消耗资源较低。如果未来有机会的话，我们也愿意在高性能GPU服务器上部署HanPL，不过那就都是后话了。</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
